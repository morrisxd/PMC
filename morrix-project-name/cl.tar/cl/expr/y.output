
Grammar
rule 1    line -> expr '\n'
rule 2    expr -> expr '+' term
rule 3    expr -> term
rule 4    term -> term '*' factor
rule 5    term -> factor
rule 6    factor -> '(' expr ')'
rule 7    factor -> DIGIT

Terminals, with rules where they appear

$ (-1)
'\n' (10) 1
'(' (40) 6
')' (41) 6
'*' (42) 4
'+' (43) 2
error (256)
DIGIT (258) 7

Nonterminals, with rules where they appear

line (9)
    on left: 1
expr (10)
    on left: 2 3, on right: 1 2 6
term (11)
    on left: 4 5, on right: 2 3 4
factor (12)
    on left: 6 7, on right: 4 5


state 0

    DIGIT	shift, and go to state 1
    '(' 	shift, and go to state 2

    line	go to state 13
    expr	go to state 3
    term	go to state 4
    factor	go to state 5



state 1

    factor  ->  DIGIT .   (rule 7)

    $default	reduce using rule 7 (factor)



state 2

    factor  ->  '(' . expr ')'   (rule 6)

    DIGIT	shift, and go to state 1
    '(' 	shift, and go to state 2

    expr	go to state 6
    term	go to state 4
    factor	go to state 5



state 3

    line  ->  expr . '\n'   (rule 1)
    expr  ->  expr . '+' term   (rule 2)

    '\n'	shift, and go to state 7
    '+' 	shift, and go to state 8



state 4

    expr  ->  term .   (rule 3)
    term  ->  term . '*' factor   (rule 4)

    '*' 	shift, and go to state 9

    $default	reduce using rule 3 (expr)



state 5

    term  ->  factor .   (rule 5)

    $default	reduce using rule 5 (term)



state 6

    expr  ->  expr . '+' term   (rule 2)
    factor  ->  '(' expr . ')'   (rule 6)

    '+' 	shift, and go to state 8
    ')' 	shift, and go to state 10



state 7

    line  ->  expr '\n' .   (rule 1)

    $default	reduce using rule 1 (line)



state 8

    expr  ->  expr '+' . term   (rule 2)

    DIGIT	shift, and go to state 1
    '(' 	shift, and go to state 2

    term	go to state 11
    factor	go to state 5



state 9

    term  ->  term '*' . factor   (rule 4)

    DIGIT	shift, and go to state 1
    '(' 	shift, and go to state 2

    factor	go to state 12



state 10

    factor  ->  '(' expr ')' .   (rule 6)

    $default	reduce using rule 6 (factor)



state 11

    expr  ->  expr '+' term .   (rule 2)
    term  ->  term . '*' factor   (rule 4)

    '*' 	shift, and go to state 9

    $default	reduce using rule 2 (expr)



state 12

    term  ->  term '*' factor .   (rule 4)

    $default	reduce using rule 4 (term)



state 13

    $   	go to state 14



state 14

    $   	go to state 15



state 15

    $default	accept
