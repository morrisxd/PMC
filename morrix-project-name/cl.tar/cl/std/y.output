State 332 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> STRING_LITERAL
rule 4    primary_expression -> '(' expression ')'
rule 5    postfix_expression -> primary_expression
rule 6    postfix_expression -> postfix_expression '[' expression ']'
rule 7    postfix_expression -> postfix_expression '(' ')'
rule 8    postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 9    postfix_expression -> postfix_expression '.' IDENTIFIER
rule 10   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 11   postfix_expression -> postfix_expression INC_OP
rule 12   postfix_expression -> postfix_expression DEC_OP
rule 13   argument_expression_list -> assignment_expression
rule 14   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 15   unary_expression -> postfix_expression
rule 16   unary_expression -> INC_OP unary_expression
rule 17   unary_expression -> DEC_OP unary_expression
rule 18   unary_expression -> unary_operator cast_expression
rule 19   unary_expression -> SIZEOF unary_expression
rule 20   unary_expression -> SIZEOF '(' type_name ')'
rule 21   unary_operator -> '&'
rule 22   unary_operator -> '*'
rule 23   unary_operator -> '+'
rule 24   unary_operator -> '-'
rule 25   unary_operator -> '~'
rule 26   unary_operator -> '!'
rule 27   cast_expression -> unary_expression
rule 28   cast_expression -> '(' type_name ')' cast_expression
rule 29   multiplicative_expression -> cast_expression
rule 30   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 31   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 32   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 33   additive_expression -> multiplicative_expression
rule 34   additive_expression -> additive_expression '+' multiplicative_expression
rule 35   additive_expression -> additive_expression '-' multiplicative_expression
rule 36   shift_expression -> additive_expression
rule 37   shift_expression -> shift_expression LEFT_OP additive_expression
rule 38   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 39   relational_expression -> shift_expression
rule 40   relational_expression -> relational_expression '<' shift_expression
rule 41   relational_expression -> relational_expression '>' shift_expression
rule 42   relational_expression -> relational_expression LE_OP shift_expression
rule 43   relational_expression -> relational_expression GE_OP shift_expression
rule 44   equality_expression -> relational_expression
rule 45   equality_expression -> equality_expression EQ_OP relational_expression
rule 46   equality_expression -> equality_expression NE_OP relational_expression
rule 47   and_expression -> equality_expression
rule 48   and_expression -> and_expression '&' equality_expression
rule 49   exclusive_or_expression -> and_expression
rule 50   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 51   inclusive_or_expression -> exclusive_or_expression
rule 52   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 53   logical_and_expression -> inclusive_or_expression
rule 54   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 55   logical_or_expression -> logical_and_expression
rule 56   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 57   conditional_expression -> logical_or_expression
rule 58   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 59   assignment_expression -> conditional_expression
rule 60   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 61   assignment_operator -> '='
rule 62   assignment_operator -> MUL_ASSIGN
rule 63   assignment_operator -> DIV_ASSIGN
rule 64   assignment_operator -> MOD_ASSIGN
rule 65   assignment_operator -> ADD_ASSIGN
rule 66   assignment_operator -> SUB_ASSIGN
rule 67   assignment_operator -> LEFT_ASSIGN
rule 68   assignment_operator -> RIGHT_ASSIGN
rule 69   assignment_operator -> AND_ASSIGN
rule 70   assignment_operator -> XOR_ASSIGN
rule 71   assignment_operator -> OR_ASSIGN
rule 72   expression -> assignment_expression
rule 73   expression -> expression ',' assignment_expression
rule 74   constant_expression -> conditional_expression
rule 75   declaration -> declaration_specifiers ';'
rule 76   declaration -> declaration_specifiers init_declarator_list ';'
rule 77   declaration_specifiers -> storage_class_specifier
rule 78   declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 79   declaration_specifiers -> type_specifier
rule 80   declaration_specifiers -> type_specifier declaration_specifiers
rule 81   declaration_specifiers -> type_qualifier
rule 82   declaration_specifiers -> type_qualifier declaration_specifiers
rule 83   init_declarator_list -> init_declarator
rule 84   init_declarator_list -> init_declarator_list ',' init_declarator
rule 85   init_declarator -> declarator
rule 86   init_declarator -> declarator '=' initializer
rule 87   storage_class_specifier -> TYPEDEF
rule 88   storage_class_specifier -> EXTERN
rule 89   storage_class_specifier -> STATIC
rule 90   storage_class_specifier -> AUTO
rule 91   storage_class_specifier -> REGISTER
rule 92   type_specifier -> VOID
rule 93   type_specifier -> CHAR
rule 94   type_specifier -> SHORT
rule 95   type_specifier -> INT
rule 96   type_specifier -> LONG
rule 97   type_specifier -> FLOAT
rule 98   type_specifier -> DOUBLE
rule 99   type_specifier -> SIGNED
rule 100  type_specifier -> UNSIGNED
rule 101  type_specifier -> struct_or_union_specifier
rule 102  type_specifier -> enum_specifier
rule 103  type_specifier -> TYPE_NAME
rule 104  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' struct_declaration_list '}'
rule 105  struct_or_union_specifier -> struct_or_union '{' struct_declaration_list '}'
rule 106  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 107  struct_or_union -> STRUCT
rule 108  struct_or_union -> UNION
rule 109  struct_declaration_list -> struct_declaration
rule 110  struct_declaration_list -> struct_declaration_list struct_declaration
rule 111  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 112  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 113  specifier_qualifier_list -> type_specifier
rule 114  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 115  specifier_qualifier_list -> type_qualifier
rule 116  struct_declarator_list -> struct_declarator
rule 117  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 118  struct_declarator -> declarator
rule 119  struct_declarator -> ':' constant_expression
rule 120  struct_declarator -> declarator ':' constant_expression
rule 121  enum_specifier -> ENUM '{' enumerator_list '}'
rule 122  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list '}'
rule 123  enum_specifier -> ENUM IDENTIFIER
rule 124  enumerator_list -> enumerator
rule 125  enumerator_list -> enumerator_list ',' enumerator
rule 126  enumerator -> IDENTIFIER
rule 127  enumerator -> IDENTIFIER '=' constant_expression
rule 128  type_qualifier -> CONST
rule 129  type_qualifier -> VOLATILE
rule 130  declarator -> pointer direct_declarator
rule 131  declarator -> direct_declarator
rule 132  direct_declarator -> IDENTIFIER
rule 133  direct_declarator -> '(' declarator ')'
rule 134  direct_declarator -> direct_declarator '[' constant_expression ']'
rule 135  direct_declarator -> direct_declarator '[' ']'
rule 136  direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 137  direct_declarator -> direct_declarator '(' identifier_list ')'
rule 138  direct_declarator -> direct_declarator '(' ')'
rule 139  pointer -> '*'
rule 140  pointer -> '*' type_qualifier_list
rule 141  pointer -> '*' pointer
rule 142  pointer -> '*' type_qualifier_list pointer
rule 143  type_qualifier_list -> type_qualifier
rule 144  type_qualifier_list -> type_qualifier_list type_qualifier
rule 145  parameter_type_list -> parameter_list
rule 146  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 147  parameter_list -> parameter_declaration
rule 148  parameter_list -> parameter_list ',' parameter_declaration
rule 149  parameter_declaration -> declaration_specifiers declarator
rule 150  parameter_declaration -> declaration_specifiers abstract_declarator
rule 151  parameter_declaration -> declaration_specifiers
rule 152  identifier_list -> IDENTIFIER
rule 153  identifier_list -> identifier_list ',' IDENTIFIER
rule 154  type_name -> specifier_qualifier_list
rule 155  type_name -> specifier_qualifier_list abstract_declarator
rule 156  abstract_declarator -> pointer
rule 157  abstract_declarator -> direct_abstract_declarator
rule 158  abstract_declarator -> pointer direct_abstract_declarator
rule 159  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 160  direct_abstract_declarator -> '[' ']'
rule 161  direct_abstract_declarator -> '[' constant_expression ']'
rule 162  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 163  direct_abstract_declarator -> direct_abstract_declarator '[' constant_expression ']'
rule 164  direct_abstract_declarator -> '(' ')'
rule 165  direct_abstract_declarator -> '(' parameter_type_list ')'
rule 166  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 167  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_type_list ')'
rule 168  initializer -> assignment_expression
rule 169  initializer -> '{' initializer_list '}'
rule 170  initializer -> '{' initializer_list ',' '}'
rule 171  initializer_list -> initializer
rule 172  initializer_list -> initializer_list ',' initializer
rule 173  statement -> labeled_statement
rule 174  statement -> compound_statement
rule 175  statement -> expression_statement
rule 176  statement -> selection_statement
rule 177  statement -> iteration_statement
rule 178  statement -> jump_statement
rule 179  labeled_statement -> IDENTIFIER ':' statement
rule 180  labeled_statement -> CASE constant_expression ':' statement
rule 181  labeled_statement -> DEFAULT ':' statement
rule 182  compound_statement -> '{' '}'
rule 183  compound_statement -> '{' statement_list '}'
rule 184  compound_statement -> '{' declaration_list '}'
rule 185  compound_statement -> '{' declaration_list statement_list '}'
rule 186  declaration_list -> declaration
rule 187  declaration_list -> declaration_list declaration
rule 188  statement_list -> statement
rule 189  statement_list -> statement_list statement
rule 190  expression_statement -> ';'
rule 191  expression_statement -> expression ';'
rule 192  selection_statement -> IF '(' expression ')' statement
rule 193  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 194  selection_statement -> SWITCH '(' expression ')' statement
rule 195  iteration_statement -> WHILE '(' expression ')' statement
rule 196  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 197  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 198  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 199  jump_statement -> GOTO IDENTIFIER ';'
rule 200  jump_statement -> CONTINUE ';'
rule 201  jump_statement -> BREAK ';'
rule 202  jump_statement -> RETURN ';'
rule 203  jump_statement -> RETURN expression ';'
rule 204  translation_unit -> external_declaration
rule 205  translation_unit -> translation_unit external_declaration
rule 206  external_declaration -> function_definition
rule 207  external_declaration -> declaration
rule 208  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 209  function_definition -> declaration_specifiers declarator compound_statement
rule 210  function_definition -> declarator declaration_list compound_statement
rule 211  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 26
'%' (37) 32
'&' (38) 21 48
'(' (40) 4 7 8 20 28 133 136 137 138 159 164 165 166 167 192 193 194
    195 196 197 198
')' (41) 4 7 8 20 28 133 136 137 138 159 164 165 166 167 192 193 194
    195 196 197 198
'*' (42) 22 30 139 140 141 142
'+' (43) 23 34
',' (44) 14 73 84 117 125 146 148 153 170 172
'-' (45) 24 35
'.' (46) 9
'/' (47) 31
':' (58) 58 119 120 179 180 181
';' (59) 75 76 111 190 191 196 199 200 201 202 203
'<' (60) 40
'=' (61) 61 86 127
'>' (62) 41
'?' (63) 58
'[' (91) 6 134 135 160 161 162 163
']' (93) 6 134 135 160 161 162 163
'^' (94) 50
'{' (123) 104 105 121 122 169 170 182 183 184 185
'|' (124) 52
'}' (125) 104 105 121 122 169 170 182 183 184 185
'~' (126) 25
error (256)
IDENTIFIER (258) 1 9 10 104 106 122 123 126 127 132 152 153 179 199
CONSTANT (259) 2
STRING_LITERAL (260) 3
SIZEOF (261) 19 20
PTR_OP (262) 10
INC_OP (263) 11 16
DEC_OP (264) 12 17
LEFT_OP (265) 37
RIGHT_OP (266) 38
LE_OP (267) 42
GE_OP (268) 43
EQ_OP (269) 45
NE_OP (270) 46
AND_OP (271) 54
OR_OP (272) 56
MUL_ASSIGN (273) 62
DIV_ASSIGN (274) 63
MOD_ASSIGN (275) 64
ADD_ASSIGN (276) 65
SUB_ASSIGN (277) 66
LEFT_ASSIGN (278) 67
RIGHT_ASSIGN (279) 68
AND_ASSIGN (280) 69
XOR_ASSIGN (281) 70
OR_ASSIGN (282) 71
TYPE_NAME (283) 103
TYPEDEF (284) 87
EXTERN (285) 88
STATIC (286) 89
AUTO (287) 90
REGISTER (288) 91
CHAR (289) 93
SHORT (290) 94
INT (291) 95
LONG (292) 96
SIGNED (293) 99
UNSIGNED (294) 100
FLOAT (295) 97
DOUBLE (296) 98
CONST (297) 128
VOLATILE (298) 129
VOID (299) 92
STRUCT (300) 107
UNION (301) 108
ENUM (302) 121 122 123
ELLIPSIS (303) 146
CASE (304) 180
DEFAULT (305) 181
IF (306) 192 193
ELSE (307) 193
SWITCH (308) 194
WHILE (309) 195 196
DO (310) 196
FOR (311) 197 198
GOTO (312) 199
CONTINUE (313) 200
BREAK (314) 201
RETURN (315) 202 203

Nonterminals, with rules where they appear

primary_expression (85)
    on left: 1 2 3 4, on right: 5
postfix_expression (86)
    on left: 5 6 7 8 9 10 11 12, on right: 6 7 8 9 10 11 12 15
argument_expression_list (87)
    on left: 13 14, on right: 8 14
unary_expression (88)
    on left: 15 16 17 18 19 20, on right: 16 17 19 27 60
unary_operator (89)
    on left: 21 22 23 24 25 26, on right: 18
cast_expression (90)
    on left: 27 28, on right: 18 28 29 30 31 32
multiplicative_expression (91)
    on left: 29 30 31 32, on right: 30 31 32 33 34 35
additive_expression (92)
    on left: 33 34 35, on right: 34 35 36 37 38
shift_expression (93)
    on left: 36 37 38, on right: 37 38 39 40 41 42 43
relational_expression (94)
    on left: 39 40 41 42 43, on right: 40 41 42 43 44 45 46
equality_expression (95)
    on left: 44 45 46, on right: 45 46 47 48
and_expression (96)
    on left: 47 48, on right: 48 49 50
exclusive_or_expression (97)
    on left: 49 50, on right: 50 51 52
inclusive_or_expression (98)
    on left: 51 52, on right: 52 53 54
logical_and_expression (99)
    on left: 53 54, on right: 54 55 56
logical_or_expression (100)
    on left: 55 56, on right: 56 57 58
conditional_expression (101)
    on left: 57 58, on right: 58 59 74
assignment_expression (102)
    on left: 59 60, on right: 13 14 60 72 73 168
assignment_operator (103)
    on left: 61 62 63 64 65 66 67 68 69 70 71, on right: 60
expression (104)
    on left: 72 73, on right: 4 6 58 73 191 192 193 194 195 196 198
    203
constant_expression (105)
    on left: 74, on right: 119 120 127 134 161 163 180
declaration (106)
    on left: 75 76, on right: 186 187 207
declaration_specifiers (107)
    on left: 77 78 79 80 81 82, on right: 75 76 78 80 82 149 150 151
    208 209
init_declarator_list (108)
    on left: 83 84, on right: 76 84
init_declarator (109)
    on left: 85 86, on right: 83 84
storage_class_specifier (110)
    on left: 87 88 89 90 91, on right: 77 78
type_specifier (111)
    on left: 92 93 94 95 96 97 98 99 100 101 102 103,
    on right: 79 80 112 113
struct_or_union_specifier (112)
    on left: 104 105 106, on right: 101
struct_or_union (113)
    on left: 107 108, on right: 104 105 106
struct_declaration_list (114)
    on left: 109 110, on right: 104 105 110
struct_declaration (115)
    on left: 111, on right: 109 110
specifier_qualifier_list (116)
    on left: 112 113 114 115, on right: 111 112 114 154 155
struct_declarator_list (117)
    on left: 116 117, on right: 111 117
struct_declarator (118)
    on left: 118 119 120, on right: 116 117
enum_specifier (119)
    on left: 121 122 123, on right: 102
enumerator_list (120)
    on left: 124 125, on right: 121 122 125
enumerator (121)
    on left: 126 127, on right: 124 125
type_qualifier (122)
    on left: 128 129, on right: 81 82 114 115 143 144
declarator (123)
    on left: 130 131, on right: 85 86 118 120 133 149 208 209 210 211
direct_declarator (124)
    on left: 132 133 134 135 136 137 138, on right: 130 131 134 135
    136 137 138
pointer (125)
    on left: 139 140 141 142, on right: 130 141 142 156 158
type_qualifier_list (126)
    on left: 143 144, on right: 140 142 144
parameter_type_list (127)
    on left: 145 146, on right: 136 165 167
parameter_list (128)
    on left: 147 148, on right: 145 146 148
parameter_declaration (129)
    on left: 149 150 151, on right: 147 148
identifier_list (130)
    on left: 152 153, on right: 137 153
type_name (131)
    on left: 154 155, on right: 20 28
abstract_declarator (132)
    on left: 156 157 158, on right: 150 155 159
direct_abstract_declarator (133)
    on left: 159 160 161 162 163 164 165 166 167, on right: 157 158
    162 163 166 167
initializer (134)
    on left: 168 169 170, on right: 86 171 172
initializer_list (135)
    on left: 171 172, on right: 169 170 172
statement (136)
    on left: 173 174 175 176 177 178, on right: 179 180 181 188 189
    192 193 194 195 196 197 198
labeled_statement (137)
    on left: 179 180 181, on right: 173
compound_statement (138)
    on left: 182 183 184 185, on right: 174 208 209 210 211
declaration_list (139)
    on left: 186 187, on right: 184 185 187 208 210
statement_list (140)
    on left: 188 189, on right: 183 185 189
expression_statement (141)
    on left: 190 191, on right: 175 197 198
selection_statement (142)
    on left: 192 193 194, on right: 176
iteration_statement (143)
    on left: 195 196 197 198, on right: 177
jump_statement (144)
    on left: 199 200 201 202 203, on right: 178
translation_unit (145)
    on left: 204 205, on right: 205
external_declaration (146)
    on left: 206 207, on right: 204 205
function_definition (147)
    on left: 208 209 210 211, on right: 206


state 0

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    declaration	go to state 24
    declaration_specifiers	go to state 25
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    declarator	go to state 32
    direct_declarator	go to state 33
    pointer	go to state 34
    translation_unit	go to state 35
    external_declaration	go to state 36
    function_definition	go to state 37



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 132)

    $default	reduce using rule 132 (direct_declarator)



state 2

    type_specifier  ->  TYPE_NAME .   (rule 103)

    $default	reduce using rule 103 (type_specifier)



state 3

    storage_class_specifier  ->  TYPEDEF .   (rule 87)

    $default	reduce using rule 87 (storage_class_specifier)



state 4

    storage_class_specifier  ->  EXTERN .   (rule 88)

    $default	reduce using rule 88 (storage_class_specifier)



state 5

    storage_class_specifier  ->  STATIC .   (rule 89)

    $default	reduce using rule 89 (storage_class_specifier)



state 6

    storage_class_specifier  ->  AUTO .   (rule 90)

    $default	reduce using rule 90 (storage_class_specifier)



state 7

    storage_class_specifier  ->  REGISTER .   (rule 91)

    $default	reduce using rule 91 (storage_class_specifier)



state 8

    type_specifier  ->  CHAR .   (rule 93)

    $default	reduce using rule 93 (type_specifier)



state 9

    type_specifier  ->  SHORT .   (rule 94)

    $default	reduce using rule 94 (type_specifier)



state 10

    type_specifier  ->  INT .   (rule 95)

    $default	reduce using rule 95 (type_specifier)



state 11

    type_specifier  ->  LONG .   (rule 96)

    $default	reduce using rule 96 (type_specifier)



state 12

    type_specifier  ->  SIGNED .   (rule 99)

    $default	reduce using rule 99 (type_specifier)



state 13

    type_specifier  ->  UNSIGNED .   (rule 100)

    $default	reduce using rule 100 (type_specifier)



state 14

    type_specifier  ->  FLOAT .   (rule 97)

    $default	reduce using rule 97 (type_specifier)



state 15

    type_specifier  ->  DOUBLE .   (rule 98)

    $default	reduce using rule 98 (type_specifier)



state 16

    type_qualifier  ->  CONST .   (rule 128)

    $default	reduce using rule 128 (type_qualifier)



state 17

    type_qualifier  ->  VOLATILE .   (rule 129)

    $default	reduce using rule 129 (type_qualifier)



state 18

    type_specifier  ->  VOID .   (rule 92)

    $default	reduce using rule 92 (type_specifier)



state 19

    struct_or_union  ->  STRUCT .   (rule 107)

    $default	reduce using rule 107 (struct_or_union)



state 20

    struct_or_union  ->  UNION .   (rule 108)

    $default	reduce using rule 108 (struct_or_union)



state 21

    enum_specifier  ->  ENUM . '{' enumerator_list '}'   (rule 121)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list '}'   (rule 122)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 123)

    IDENTIFIER	shift, and go to state 38
    '{' 	shift, and go to state 39



state 22

    direct_declarator  ->  '(' . declarator ')'   (rule 133)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    declarator	go to state 40
    direct_declarator	go to state 33
    pointer	go to state 34



state 23

    pointer  ->  '*' .   (rule 139)
    pointer  ->  '*' . type_qualifier_list   (rule 140)
    pointer  ->  '*' . pointer   (rule 141)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 142)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 23

    $default	reduce using rule 139 (pointer)

    type_qualifier	go to state 41
    pointer	go to state 42
    type_qualifier_list	go to state 43



state 24

    external_declaration  ->  declaration .   (rule 207)

    $default	reduce using rule 207 (external_declaration)



state 25

    declaration  ->  declaration_specifiers . ';'   (rule 75)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 76)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 208)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 209)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ';' 	shift, and go to state 44

    init_declarator_list	go to state 45
    init_declarator	go to state 46
    declarator	go to state 47
    direct_declarator	go to state 33
    pointer	go to state 34



state 26

    declaration_specifiers  ->  storage_class_specifier .   (rule 77)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 78)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 77 (declaration_specifiers)

    declaration_specifiers	go to state 48
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31



state 27

    declaration_specifiers  ->  type_specifier .   (rule 79)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 80)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 79 (declaration_specifiers)

    declaration_specifiers	go to state 49
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31



state 28

    type_specifier  ->  struct_or_union_specifier .   (rule 101)

    $default	reduce using rule 101 (type_specifier)



state 29

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' struct_declaration_list '}'   (rule 104)
    struct_or_union_specifier  ->  struct_or_union . '{' struct_declaration_list '}'   (rule 105)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 106)

    IDENTIFIER	shift, and go to state 50
    '{' 	shift, and go to state 51



state 30

    type_specifier  ->  enum_specifier .   (rule 102)

    $default	reduce using rule 102 (type_specifier)



state 31

    declaration_specifiers  ->  type_qualifier .   (rule 81)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 82)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 81 (declaration_specifiers)

    declaration_specifiers	go to state 52
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31



state 32

    function_definition  ->  declarator . declaration_list compound_statement   (rule 210)
    function_definition  ->  declarator . compound_statement   (rule 211)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '{' 	shift, and go to state 53

    declaration	go to state 54
    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    compound_statement	go to state 56
    declaration_list	go to state 57



state 33

    declarator  ->  direct_declarator .   (rule 131)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 134)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 135)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 136)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 137)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 138)

    '(' 	shift, and go to state 58
    '[' 	shift, and go to state 59

    $default	reduce using rule 131 (declarator)



state 34

    declarator  ->  pointer . direct_declarator   (rule 130)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22

    direct_declarator	go to state 60



state 35

    translation_unit  ->  translation_unit . external_declaration   (rule 205)

    $   	go to state 349
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    declaration	go to state 24
    declaration_specifiers	go to state 25
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    declarator	go to state 32
    direct_declarator	go to state 33
    pointer	go to state 34
    external_declaration	go to state 61
    function_definition	go to state 37



state 36

    translation_unit  ->  external_declaration .   (rule 204)

    $default	reduce using rule 204 (translation_unit)



state 37

    external_declaration  ->  function_definition .   (rule 206)

    $default	reduce using rule 206 (external_declaration)



state 38

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list '}'   (rule 122)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 123)

    '{' 	shift, and go to state 62

    $default	reduce using rule 123 (enum_specifier)



state 39

    enum_specifier  ->  ENUM '{' . enumerator_list '}'   (rule 121)

    IDENTIFIER	shift, and go to state 63

    enumerator_list	go to state 64
    enumerator	go to state 65



state 40

    direct_declarator  ->  '(' declarator . ')'   (rule 133)

    ')' 	shift, and go to state 66



state 41

    type_qualifier_list  ->  type_qualifier .   (rule 143)

    $default	reduce using rule 143 (type_qualifier_list)



state 42

    pointer  ->  '*' pointer .   (rule 141)

    $default	reduce using rule 141 (pointer)



state 43

    pointer  ->  '*' type_qualifier_list .   (rule 140)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 142)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 144)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 23

    $default	reduce using rule 140 (pointer)

    type_qualifier	go to state 67
    pointer	go to state 68



state 44

    declaration  ->  declaration_specifiers ';' .   (rule 75)

    $default	reduce using rule 75 (declaration)



state 45

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 76)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 84)

    ',' 	shift, and go to state 69
    ';' 	shift, and go to state 70



state 46

    init_declarator_list  ->  init_declarator .   (rule 83)

    $default	reduce using rule 83 (init_declarator_list)



state 47

    init_declarator  ->  declarator .   (rule 85)
    init_declarator  ->  declarator . '=' initializer   (rule 86)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 208)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 209)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '=' 	shift, and go to state 71
    '{' 	shift, and go to state 53

    $default	reduce using rule 85 (init_declarator)

    declaration	go to state 54
    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    compound_statement	go to state 72
    declaration_list	go to state 73



state 48

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 78)

    $default	reduce using rule 78 (declaration_specifiers)



state 49

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 80)

    $default	reduce using rule 80 (declaration_specifiers)



state 50

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' struct_declaration_list '}'   (rule 104)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 106)

    '{' 	shift, and go to state 74

    $default	reduce using rule 106 (struct_or_union_specifier)



state 51

    struct_or_union_specifier  ->  struct_or_union '{' . struct_declaration_list '}'   (rule 105)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    struct_declaration_list	go to state 76
    struct_declaration	go to state 77
    specifier_qualifier_list	go to state 78
    enum_specifier	go to state 30
    type_qualifier	go to state 79



state 52

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 82)

    $default	reduce using rule 82 (declaration_specifiers)



state 53

    compound_statement  ->  '{' . '}'   (rule 182)
    compound_statement  ->  '{' . statement_list '}'   (rule 183)
    compound_statement  ->  '{' . declaration_list '}'   (rule 184)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 185)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53
    '}' 	shift, and go to state 105

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    declaration	go to state 54
    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    statement	go to state 124
    labeled_statement	go to state 125
    compound_statement	go to state 126
    declaration_list	go to state 127
    statement_list	go to state 128
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 54

    declaration_list  ->  declaration .   (rule 186)

    $default	reduce using rule 186 (declaration_list)



state 55

    declaration  ->  declaration_specifiers . ';'   (rule 75)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 76)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ';' 	shift, and go to state 44

    init_declarator_list	go to state 45
    init_declarator	go to state 46
    declarator	go to state 133
    direct_declarator	go to state 33
    pointer	go to state 34



state 56

    function_definition  ->  declarator compound_statement .   (rule 211)

    $default	reduce using rule 211 (function_definition)



state 57

    declaration_list  ->  declaration_list . declaration   (rule 187)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 210)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '{' 	shift, and go to state 53

    declaration	go to state 134
    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    compound_statement	go to state 135



state 58

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 136)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 137)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 138)

    IDENTIFIER	shift, and go to state 136
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ')' 	shift, and go to state 137

    declaration_specifiers	go to state 138
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    parameter_type_list	go to state 139
    parameter_list	go to state 140
    parameter_declaration	go to state 141
    identifier_list	go to state 142



state 59

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 134)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 135)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ']' 	shift, and go to state 144
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 147



state 60

    declarator  ->  pointer direct_declarator .   (rule 130)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 134)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 135)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 136)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 137)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 138)

    '(' 	shift, and go to state 58
    '[' 	shift, and go to state 59

    $default	reduce using rule 130 (declarator)



state 61

    translation_unit  ->  translation_unit external_declaration .   (rule 205)

    $default	reduce using rule 205 (translation_unit)



state 62

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list '}'   (rule 122)

    IDENTIFIER	shift, and go to state 63

    enumerator_list	go to state 148
    enumerator	go to state 65



state 63

    enumerator  ->  IDENTIFIER .   (rule 126)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 127)

    '=' 	shift, and go to state 149

    $default	reduce using rule 126 (enumerator)



state 64

    enum_specifier  ->  ENUM '{' enumerator_list . '}'   (rule 121)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 125)

    ',' 	shift, and go to state 150
    '}' 	shift, and go to state 151



state 65

    enumerator_list  ->  enumerator .   (rule 124)

    $default	reduce using rule 124 (enumerator_list)



state 66

    direct_declarator  ->  '(' declarator ')' .   (rule 133)

    $default	reduce using rule 133 (direct_declarator)



state 67

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 144)

    $default	reduce using rule 144 (type_qualifier_list)



state 68

    pointer  ->  '*' type_qualifier_list pointer .   (rule 142)

    $default	reduce using rule 142 (pointer)



state 69

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 84)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    init_declarator	go to state 152
    declarator	go to state 133
    direct_declarator	go to state 33
    pointer	go to state 34



state 70

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 76)

    $default	reduce using rule 76 (declaration)



state 71

    init_declarator  ->  declarator '=' . initializer   (rule 86)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 153

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 154
    initializer	go to state 155



state 72

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 209)

    $default	reduce using rule 209 (function_definition)



state 73

    declaration_list  ->  declaration_list . declaration   (rule 187)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 208)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '{' 	shift, and go to state 53

    declaration	go to state 134
    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    compound_statement	go to state 156



state 74

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . struct_declaration_list '}'   (rule 104)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    struct_declaration_list	go to state 157
    struct_declaration	go to state 77
    specifier_qualifier_list	go to state 78
    enum_specifier	go to state 30
    type_qualifier	go to state 79



state 75

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 112)
    specifier_qualifier_list  ->  type_specifier .   (rule 113)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 113 (specifier_qualifier_list)

    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    specifier_qualifier_list	go to state 158
    enum_specifier	go to state 30
    type_qualifier	go to state 79



state 76

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list . '}'   (rule 105)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 110)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '}' 	shift, and go to state 159

    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    struct_declaration	go to state 160
    specifier_qualifier_list	go to state 78
    enum_specifier	go to state 30
    type_qualifier	go to state 79



state 77

    struct_declaration_list  ->  struct_declaration .   (rule 109)

    $default	reduce using rule 109 (struct_declaration_list)



state 78

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 111)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ':' 	shift, and go to state 161

    struct_declarator_list	go to state 162
    struct_declarator	go to state 163
    declarator	go to state 164
    direct_declarator	go to state 33
    pointer	go to state 34



state 79

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 114)
    specifier_qualifier_list  ->  type_qualifier .   (rule 115)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 115 (specifier_qualifier_list)

    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    specifier_qualifier_list	go to state 165
    enum_specifier	go to state 30
    type_qualifier	go to state 79



state 80

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 179)

    ':' 	shift, and go to state 166

    $default	reduce using rule 1 (primary_expression)



state 81

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 82

    primary_expression  ->  STRING_LITERAL .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 83

    unary_expression  ->  SIZEOF . unary_expression   (rule 19)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 20)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 167
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 168
    unary_operator	go to state 109



state 84

    unary_expression  ->  INC_OP . unary_expression   (rule 16)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 169
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 170
    unary_operator	go to state 109



state 85

    unary_expression  ->  DEC_OP . unary_expression   (rule 17)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 169
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 171
    unary_operator	go to state 109



state 86

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 180)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 172



state 87

    labeled_statement  ->  DEFAULT . ':' statement   (rule 181)

    ':' 	shift, and go to state 173



state 88

    selection_statement  ->  IF . '(' expression ')' statement   (rule 192)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 193)

    '(' 	shift, and go to state 174



state 89

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 194)

    '(' 	shift, and go to state 175



state 90

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 195)

    '(' 	shift, and go to state 176



state 91

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 196)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 177
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 92

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 197)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 198)

    '(' 	shift, and go to state 178



state 93

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 199)

    IDENTIFIER	shift, and go to state 179



state 94

    jump_statement  ->  CONTINUE . ';'   (rule 200)

    ';' 	shift, and go to state 180



state 95

    jump_statement  ->  BREAK . ';'   (rule 201)

    ';' 	shift, and go to state 181



state 96

    jump_statement  ->  RETURN . ';'   (rule 202)
    jump_statement  ->  RETURN . expression ';'   (rule 203)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 182

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 183



state 97

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 28)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 184
    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    specifier_qualifier_list	go to state 185
    enum_specifier	go to state 30
    type_qualifier	go to state 79
    type_name	go to state 186



state 98

    unary_operator  ->  '&' .   (rule 21)

    $default	reduce using rule 21 (unary_operator)



state 99

    unary_operator  ->  '*' .   (rule 22)

    $default	reduce using rule 22 (unary_operator)



state 100

    unary_operator  ->  '+' .   (rule 23)

    $default	reduce using rule 23 (unary_operator)



state 101

    unary_operator  ->  '-' .   (rule 24)

    $default	reduce using rule 24 (unary_operator)



state 102

    unary_operator  ->  '~' .   (rule 25)

    $default	reduce using rule 25 (unary_operator)



state 103

    unary_operator  ->  '!' .   (rule 26)

    $default	reduce using rule 26 (unary_operator)



state 104

    expression_statement  ->  ';' .   (rule 190)

    $default	reduce using rule 190 (expression_statement)



state 105

    compound_statement  ->  '{' '}' .   (rule 182)

    $default	reduce using rule 182 (compound_statement)



state 106

    postfix_expression  ->  primary_expression .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 107

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 6)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 7)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 8)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 9)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 10)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 11)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 12)
    unary_expression  ->  postfix_expression .   (rule 15)

    PTR_OP	shift, and go to state 187
    INC_OP	shift, and go to state 188
    DEC_OP	shift, and go to state 189
    '(' 	shift, and go to state 190
    '[' 	shift, and go to state 191
    '.' 	shift, and go to state 192

    $default	reduce using rule 15 (unary_expression)



state 108

    cast_expression  ->  unary_expression .   (rule 27)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 60)

    MUL_ASSIGN	shift, and go to state 193
    DIV_ASSIGN	shift, and go to state 194
    MOD_ASSIGN	shift, and go to state 195
    ADD_ASSIGN	shift, and go to state 196
    SUB_ASSIGN	shift, and go to state 197
    LEFT_ASSIGN	shift, and go to state 198
    RIGHT_ASSIGN	shift, and go to state 199
    AND_ASSIGN	shift, and go to state 200
    XOR_ASSIGN	shift, and go to state 201
    OR_ASSIGN	shift, and go to state 202
    '=' 	shift, and go to state 203

    $default	reduce using rule 27 (cast_expression)

    assignment_operator	go to state 204



state 109

    unary_expression  ->  unary_operator . cast_expression   (rule 18)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 205



state 110

    multiplicative_expression  ->  cast_expression .   (rule 29)

    $default	reduce using rule 29 (multiplicative_expression)



state 111

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 32)
    additive_expression  ->  multiplicative_expression .   (rule 33)

    '*' 	shift, and go to state 206
    '/' 	shift, and go to state 207
    '%' 	shift, and go to state 208

    $default	reduce using rule 33 (additive_expression)



state 112

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 34)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 35)
    shift_expression  ->  additive_expression .   (rule 36)

    '+' 	shift, and go to state 209
    '-' 	shift, and go to state 210

    $default	reduce using rule 36 (shift_expression)



state 113

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  shift_expression .   (rule 39)

    LEFT_OP	shift, and go to state 211
    RIGHT_OP	shift, and go to state 212

    $default	reduce using rule 39 (relational_expression)



state 114

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 42)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 43)
    equality_expression  ->  relational_expression .   (rule 44)

    LE_OP	shift, and go to state 213
    GE_OP	shift, and go to state 214
    '<' 	shift, and go to state 215
    '>' 	shift, and go to state 216

    $default	reduce using rule 44 (equality_expression)



state 115

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 45)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 46)
    and_expression  ->  equality_expression .   (rule 47)

    EQ_OP	shift, and go to state 217
    NE_OP	shift, and go to state 218

    $default	reduce using rule 47 (and_expression)



state 116

    and_expression  ->  and_expression . '&' equality_expression   (rule 48)
    exclusive_or_expression  ->  and_expression .   (rule 49)

    '&' 	shift, and go to state 219

    $default	reduce using rule 49 (exclusive_or_expression)



state 117

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 50)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 51)

    '^' 	shift, and go to state 220

    $default	reduce using rule 51 (inclusive_or_expression)



state 118

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 52)
    logical_and_expression  ->  inclusive_or_expression .   (rule 53)

    '|' 	shift, and go to state 221

    $default	reduce using rule 53 (logical_and_expression)



state 119

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 54)
    logical_or_expression  ->  logical_and_expression .   (rule 55)

    AND_OP	shift, and go to state 222

    $default	reduce using rule 55 (logical_or_expression)



state 120

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 56)
    conditional_expression  ->  logical_or_expression .   (rule 57)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 58)

    OR_OP	shift, and go to state 223
    '?' 	shift, and go to state 224

    $default	reduce using rule 57 (conditional_expression)



state 121

    assignment_expression  ->  conditional_expression .   (rule 59)

    $default	reduce using rule 59 (assignment_expression)



state 122

    expression  ->  assignment_expression .   (rule 72)

    $default	reduce using rule 72 (expression)



state 123

    expression  ->  expression . ',' assignment_expression   (rule 73)
    expression_statement  ->  expression . ';'   (rule 191)

    ',' 	shift, and go to state 225
    ';' 	shift, and go to state 226



state 124

    statement_list  ->  statement .   (rule 188)

    $default	reduce using rule 188 (statement_list)



state 125

    statement  ->  labeled_statement .   (rule 173)

    $default	reduce using rule 173 (statement)



state 126

    statement  ->  compound_statement .   (rule 174)

    $default	reduce using rule 174 (statement)



state 127

    compound_statement  ->  '{' declaration_list . '}'   (rule 184)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 185)
    declaration_list  ->  declaration_list . declaration   (rule 187)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53
    '}' 	shift, and go to state 227

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    declaration	go to state 134
    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    statement	go to state 124
    labeled_statement	go to state 125
    compound_statement	go to state 126
    statement_list	go to state 228
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 128

    compound_statement  ->  '{' statement_list . '}'   (rule 183)
    statement_list  ->  statement_list . statement   (rule 189)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53
    '}' 	shift, and go to state 229

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 230
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 129

    statement  ->  expression_statement .   (rule 175)

    $default	reduce using rule 175 (statement)



state 130

    statement  ->  selection_statement .   (rule 176)

    $default	reduce using rule 176 (statement)



state 131

    statement  ->  iteration_statement .   (rule 177)

    $default	reduce using rule 177 (statement)



state 132

    statement  ->  jump_statement .   (rule 178)

    $default	reduce using rule 178 (statement)



state 133

    init_declarator  ->  declarator .   (rule 85)
    init_declarator  ->  declarator . '=' initializer   (rule 86)

    '=' 	shift, and go to state 71

    $default	reduce using rule 85 (init_declarator)



state 134

    declaration_list  ->  declaration_list declaration .   (rule 187)

    $default	reduce using rule 187 (declaration_list)



state 135

    function_definition  ->  declarator declaration_list compound_statement .   (rule 210)

    $default	reduce using rule 210 (function_definition)



state 136

    identifier_list  ->  IDENTIFIER .   (rule 152)

    $default	reduce using rule 152 (identifier_list)



state 137

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 138)

    $default	reduce using rule 138 (direct_declarator)



state 138

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 149)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 150)
    parameter_declaration  ->  declaration_specifiers .   (rule 151)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 231
    '[' 	shift, and go to state 232
    '*' 	shift, and go to state 23

    $default	reduce using rule 151 (parameter_declaration)

    declarator	go to state 233
    direct_declarator	go to state 33
    pointer	go to state 234
    abstract_declarator	go to state 235
    direct_abstract_declarator	go to state 236



state 139

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 136)

    ')' 	shift, and go to state 237



state 140

    parameter_type_list  ->  parameter_list .   (rule 145)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 146)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 148)

    ',' 	shift, and go to state 238

    $default	reduce using rule 145 (parameter_type_list)



state 141

    parameter_list  ->  parameter_declaration .   (rule 147)

    $default	reduce using rule 147 (parameter_list)



state 142

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 137)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 153)

    ')' 	shift, and go to state 239
    ',' 	shift, and go to state 240



state 143

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 144

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 135)

    $default	reduce using rule 135 (direct_declarator)



state 145

    cast_expression  ->  unary_expression .   (rule 27)

    $default	reduce using rule 27 (cast_expression)



state 146

    constant_expression  ->  conditional_expression .   (rule 74)

    $default	reduce using rule 74 (constant_expression)



state 147

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 134)

    ']' 	shift, and go to state 241



state 148

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . '}'   (rule 122)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 125)

    ',' 	shift, and go to state 150
    '}' 	shift, and go to state 242



state 149

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 127)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 243



state 150

    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 125)

    IDENTIFIER	shift, and go to state 63

    enumerator	go to state 244



state 151

    enum_specifier  ->  ENUM '{' enumerator_list '}' .   (rule 121)

    $default	reduce using rule 121 (enum_specifier)



state 152

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 84)

    $default	reduce using rule 84 (init_declarator_list)



state 153

    initializer  ->  '{' . initializer_list '}'   (rule 169)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 170)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 153

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 154
    initializer	go to state 245
    initializer_list	go to state 246



state 154

    initializer  ->  assignment_expression .   (rule 168)

    $default	reduce using rule 168 (initializer)



state 155

    init_declarator  ->  declarator '=' initializer .   (rule 86)

    $default	reduce using rule 86 (init_declarator)



state 156

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 208)

    $default	reduce using rule 208 (function_definition)



state 157

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list . '}'   (rule 104)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 110)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '}' 	shift, and go to state 247

    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    struct_declaration	go to state 160
    specifier_qualifier_list	go to state 78
    enum_specifier	go to state 30
    type_qualifier	go to state 79



state 158

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 112)

    $default	reduce using rule 112 (specifier_qualifier_list)



state 159

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list '}' .   (rule 105)

    $default	reduce using rule 105 (struct_or_union_specifier)



state 160

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 110)

    $default	reduce using rule 110 (struct_declaration_list)



state 161

    struct_declarator  ->  ':' . constant_expression   (rule 119)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 248



state 162

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 111)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 117)

    ',' 	shift, and go to state 249
    ';' 	shift, and go to state 250



state 163

    struct_declarator_list  ->  struct_declarator .   (rule 116)

    $default	reduce using rule 116 (struct_declarator_list)



state 164

    struct_declarator  ->  declarator .   (rule 118)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 120)

    ':' 	shift, and go to state 251

    $default	reduce using rule 118 (struct_declarator)



state 165

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 114)

    $default	reduce using rule 114 (specifier_qualifier_list)



state 166

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 179)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 252
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 167

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 20)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 184
    type_specifier	go to state 75
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    specifier_qualifier_list	go to state 185
    enum_specifier	go to state 30
    type_qualifier	go to state 79
    type_name	go to state 253



state 168

    unary_expression  ->  SIZEOF unary_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 169

    primary_expression  ->  '(' . expression ')'   (rule 4)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 184



state 170

    unary_expression  ->  INC_OP unary_expression .   (rule 16)

    $default	reduce using rule 16 (unary_expression)



state 171

    unary_expression  ->  DEC_OP unary_expression .   (rule 17)

    $default	reduce using rule 17 (unary_expression)



state 172

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 180)

    ':' 	shift, and go to state 254



state 173

    labeled_statement  ->  DEFAULT ':' . statement   (rule 181)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 255
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 174

    selection_statement  ->  IF '(' . expression ')' statement   (rule 192)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 193)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 256



state 175

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 194)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 257



state 176

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 195)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 258



state 177

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 196)

    WHILE	shift, and go to state 259



state 178

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 197)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 198)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    expression_statement	go to state 260



state 179

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 199)

    ';' 	shift, and go to state 261



state 180

    jump_statement  ->  CONTINUE ';' .   (rule 200)

    $default	reduce using rule 200 (jump_statement)



state 181

    jump_statement  ->  BREAK ';' .   (rule 201)

    $default	reduce using rule 201 (jump_statement)



state 182

    jump_statement  ->  RETURN ';' .   (rule 202)

    $default	reduce using rule 202 (jump_statement)



state 183

    expression  ->  expression . ',' assignment_expression   (rule 73)
    jump_statement  ->  RETURN expression . ';'   (rule 203)

    ',' 	shift, and go to state 225
    ';' 	shift, and go to state 262



state 184

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 73)

    ')' 	shift, and go to state 263
    ',' 	shift, and go to state 225



state 185

    type_name  ->  specifier_qualifier_list .   (rule 154)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 155)

    '(' 	shift, and go to state 264
    '[' 	shift, and go to state 232
    '*' 	shift, and go to state 23

    $default	reduce using rule 154 (type_name)

    pointer	go to state 265
    abstract_declarator	go to state 266
    direct_abstract_declarator	go to state 236



state 186

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 28)

    ')' 	shift, and go to state 267



state 187

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 10)

    IDENTIFIER	shift, and go to state 268



state 188

    postfix_expression  ->  postfix_expression INC_OP .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 189

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 190

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 7)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 8)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ')' 	shift, and go to state 269
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    argument_expression_list	go to state 270
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 271



state 191

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 6)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 272



state 192

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 9)

    IDENTIFIER	shift, and go to state 273



state 193

    assignment_operator  ->  MUL_ASSIGN .   (rule 62)

    $default	reduce using rule 62 (assignment_operator)



state 194

    assignment_operator  ->  DIV_ASSIGN .   (rule 63)

    $default	reduce using rule 63 (assignment_operator)



state 195

    assignment_operator  ->  MOD_ASSIGN .   (rule 64)

    $default	reduce using rule 64 (assignment_operator)



state 196

    assignment_operator  ->  ADD_ASSIGN .   (rule 65)

    $default	reduce using rule 65 (assignment_operator)



state 197

    assignment_operator  ->  SUB_ASSIGN .   (rule 66)

    $default	reduce using rule 66 (assignment_operator)



state 198

    assignment_operator  ->  LEFT_ASSIGN .   (rule 67)

    $default	reduce using rule 67 (assignment_operator)



state 199

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 200

    assignment_operator  ->  AND_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 201

    assignment_operator  ->  XOR_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 202

    assignment_operator  ->  OR_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 203

    assignment_operator  ->  '=' .   (rule 61)

    $default	reduce using rule 61 (assignment_operator)



state 204

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 60)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 274



state 205

    unary_expression  ->  unary_operator cast_expression .   (rule 18)

    $default	reduce using rule 18 (unary_expression)



state 206

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 30)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 275



state 207

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 276



state 208

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 32)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 277



state 209

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 34)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 278



state 210

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 35)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 279



state 211

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 37)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 280



state 212

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 38)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 281



state 213

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 42)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 282



state 214

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 43)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 283



state 215

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 40)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 284



state 216

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 41)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 285



state 217

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 45)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 286



state 218

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 46)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 287



state 219

    and_expression  ->  and_expression '&' . equality_expression   (rule 48)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 288



state 220

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 50)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 289



state 221

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 52)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 290



state 222

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 54)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 291



state 223

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 56)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 292



state 224

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 58)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 293



state 225

    expression  ->  expression ',' . assignment_expression   (rule 73)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 294



state 226

    expression_statement  ->  expression ';' .   (rule 191)

    $default	reduce using rule 191 (expression_statement)



state 227

    compound_statement  ->  '{' declaration_list '}' .   (rule 184)

    $default	reduce using rule 184 (compound_statement)



state 228

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 185)
    statement_list  ->  statement_list . statement   (rule 189)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53
    '}' 	shift, and go to state 295

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 230
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 229

    compound_statement  ->  '{' statement_list '}' .   (rule 183)

    $default	reduce using rule 183 (compound_statement)



state 230

    statement_list  ->  statement_list statement .   (rule 189)

    $default	reduce using rule 189 (statement_list)



state 231

    direct_declarator  ->  '(' . declarator ')'   (rule 133)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 159)
    direct_abstract_declarator  ->  '(' . ')'   (rule 164)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 165)

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 231
    ')' 	shift, and go to state 296
    '[' 	shift, and go to state 232
    '*' 	shift, and go to state 23

    declaration_specifiers	go to state 138
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    declarator	go to state 40
    direct_declarator	go to state 33
    pointer	go to state 234
    parameter_type_list	go to state 297
    parameter_list	go to state 140
    parameter_declaration	go to state 141
    abstract_declarator	go to state 298
    direct_abstract_declarator	go to state 236



state 232

    direct_abstract_declarator  ->  '[' . ']'   (rule 160)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 161)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ']' 	shift, and go to state 299
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 300



state 233

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 149)

    $default	reduce using rule 149 (parameter_declaration)



state 234

    declarator  ->  pointer . direct_declarator   (rule 130)
    abstract_declarator  ->  pointer .   (rule 156)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 158)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 231
    '[' 	shift, and go to state 232

    $default	reduce using rule 156 (abstract_declarator)

    direct_declarator	go to state 60
    direct_abstract_declarator	go to state 301



state 235

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 150)

    $default	reduce using rule 150 (parameter_declaration)



state 236

    abstract_declarator  ->  direct_abstract_declarator .   (rule 157)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 162)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 163)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 166)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 167)

    '(' 	shift, and go to state 302
    '[' 	shift, and go to state 303

    $default	reduce using rule 157 (abstract_declarator)



state 237

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 136)

    $default	reduce using rule 136 (direct_declarator)



state 238

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 146)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 148)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ELLIPSIS	shift, and go to state 304

    declaration_specifiers	go to state 138
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    parameter_declaration	go to state 305



state 239

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 137)

    $default	reduce using rule 137 (direct_declarator)



state 240

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 153)

    IDENTIFIER	shift, and go to state 306



state 241

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 134)

    $default	reduce using rule 134 (direct_declarator)



state 242

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list '}' .   (rule 122)

    $default	reduce using rule 122 (enum_specifier)



state 243

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 127)

    $default	reduce using rule 127 (enumerator)



state 244

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 125)

    $default	reduce using rule 125 (enumerator_list)



state 245

    initializer_list  ->  initializer .   (rule 171)

    $default	reduce using rule 171 (initializer_list)



state 246

    initializer  ->  '{' initializer_list . '}'   (rule 169)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 170)
    initializer_list  ->  initializer_list . ',' initializer   (rule 172)

    ',' 	shift, and go to state 307
    '}' 	shift, and go to state 308



state 247

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list '}' .   (rule 104)

    $default	reduce using rule 104 (struct_or_union_specifier)



state 248

    struct_declarator  ->  ':' constant_expression .   (rule 119)

    $default	reduce using rule 119 (struct_declarator)



state 249

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 117)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ':' 	shift, and go to state 161

    struct_declarator	go to state 309
    declarator	go to state 164
    direct_declarator	go to state 33
    pointer	go to state 34



state 250

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 111)

    $default	reduce using rule 111 (struct_declaration)



state 251

    struct_declarator  ->  declarator ':' . constant_expression   (rule 120)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 310



state 252

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 179)

    $default	reduce using rule 179 (labeled_statement)



state 253

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 20)

    ')' 	shift, and go to state 311



state 254

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 180)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 312
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 255

    labeled_statement  ->  DEFAULT ':' statement .   (rule 181)

    $default	reduce using rule 181 (labeled_statement)



state 256

    expression  ->  expression . ',' assignment_expression   (rule 73)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 192)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 193)

    ')' 	shift, and go to state 313
    ',' 	shift, and go to state 225



state 257

    expression  ->  expression . ',' assignment_expression   (rule 73)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 194)

    ')' 	shift, and go to state 314
    ',' 	shift, and go to state 225



state 258

    expression  ->  expression . ',' assignment_expression   (rule 73)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 195)

    ')' 	shift, and go to state 315
    ',' 	shift, and go to state 225



state 259

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 196)

    '(' 	shift, and go to state 316



state 260

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 197)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 198)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    expression_statement	go to state 317



state 261

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 199)

    $default	reduce using rule 199 (jump_statement)



state 262

    jump_statement  ->  RETURN expression ';' .   (rule 203)

    $default	reduce using rule 203 (jump_statement)



state 263

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 264

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 159)
    direct_abstract_declarator  ->  '(' . ')'   (rule 164)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 165)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 264
    ')' 	shift, and go to state 296
    '[' 	shift, and go to state 232
    '*' 	shift, and go to state 23

    declaration_specifiers	go to state 138
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    pointer	go to state 265
    parameter_type_list	go to state 297
    parameter_list	go to state 140
    parameter_declaration	go to state 141
    abstract_declarator	go to state 298
    direct_abstract_declarator	go to state 236



state 265

    abstract_declarator  ->  pointer .   (rule 156)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 158)

    '(' 	shift, and go to state 264
    '[' 	shift, and go to state 232

    $default	reduce using rule 156 (abstract_declarator)

    direct_abstract_declarator	go to state 301



state 266

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 155)

    $default	reduce using rule 155 (type_name)



state 267

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 28)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 318



state 268

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 269

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 270

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 8)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 14)

    ')' 	shift, and go to state 319
    ',' 	shift, and go to state 320



state 271

    argument_expression_list  ->  assignment_expression .   (rule 13)

    $default	reduce using rule 13 (argument_expression_list)



state 272

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 6)
    expression  ->  expression . ',' assignment_expression   (rule 73)

    ']' 	shift, and go to state 321
    ',' 	shift, and go to state 225



state 273

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 274

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 60)

    $default	reduce using rule 60 (assignment_expression)



state 275

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 30)

    $default	reduce using rule 30 (multiplicative_expression)



state 276

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 31)

    $default	reduce using rule 31 (multiplicative_expression)



state 277

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 32)

    $default	reduce using rule 32 (multiplicative_expression)



state 278

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 32)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 34)

    '*' 	shift, and go to state 206
    '/' 	shift, and go to state 207
    '%' 	shift, and go to state 208

    $default	reduce using rule 34 (additive_expression)



state 279

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 32)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 35)

    '*' 	shift, and go to state 206
    '/' 	shift, and go to state 207
    '%' 	shift, and go to state 208

    $default	reduce using rule 35 (additive_expression)



state 280

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 34)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 35)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 37)

    '+' 	shift, and go to state 209
    '-' 	shift, and go to state 210

    $default	reduce using rule 37 (shift_expression)



state 281

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 34)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 35)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 38)

    '+' 	shift, and go to state 209
    '-' 	shift, and go to state 210

    $default	reduce using rule 38 (shift_expression)



state 282

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 42)

    LEFT_OP	shift, and go to state 211
    RIGHT_OP	shift, and go to state 212

    $default	reduce using rule 42 (relational_expression)



state 283

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 43)

    LEFT_OP	shift, and go to state 211
    RIGHT_OP	shift, and go to state 212

    $default	reduce using rule 43 (relational_expression)



state 284

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 40)

    LEFT_OP	shift, and go to state 211
    RIGHT_OP	shift, and go to state 212

    $default	reduce using rule 40 (relational_expression)



state 285

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 41)

    LEFT_OP	shift, and go to state 211
    RIGHT_OP	shift, and go to state 212

    $default	reduce using rule 41 (relational_expression)



state 286

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 42)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 43)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 45)

    LE_OP	shift, and go to state 213
    GE_OP	shift, and go to state 214
    '<' 	shift, and go to state 215
    '>' 	shift, and go to state 216

    $default	reduce using rule 45 (equality_expression)



state 287

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 42)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 43)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 46)

    LE_OP	shift, and go to state 213
    GE_OP	shift, and go to state 214
    '<' 	shift, and go to state 215
    '>' 	shift, and go to state 216

    $default	reduce using rule 46 (equality_expression)



state 288

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 45)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 46)
    and_expression  ->  and_expression '&' equality_expression .   (rule 48)

    EQ_OP	shift, and go to state 217
    NE_OP	shift, and go to state 218

    $default	reduce using rule 48 (and_expression)



state 289

    and_expression  ->  and_expression . '&' equality_expression   (rule 48)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 50)

    '&' 	shift, and go to state 219

    $default	reduce using rule 50 (exclusive_or_expression)



state 290

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 50)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 52)

    '^' 	shift, and go to state 220

    $default	reduce using rule 52 (inclusive_or_expression)



state 291

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 52)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 54)

    '|' 	shift, and go to state 221

    $default	reduce using rule 54 (logical_and_expression)



state 292

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 54)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 56)

    AND_OP	shift, and go to state 222

    $default	reduce using rule 56 (logical_or_expression)



state 293

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 58)
    expression  ->  expression . ',' assignment_expression   (rule 73)

    ',' 	shift, and go to state 225
    ':' 	shift, and go to state 322



state 294

    expression  ->  expression ',' assignment_expression .   (rule 73)

    $default	reduce using rule 73 (expression)



state 295

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 185)

    $default	reduce using rule 185 (compound_statement)



state 296

    direct_abstract_declarator  ->  '(' ')' .   (rule 164)

    $default	reduce using rule 164 (direct_abstract_declarator)



state 297

    direct_abstract_declarator  ->  '(' parameter_type_list . ')'   (rule 165)

    ')' 	shift, and go to state 323



state 298

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 159)

    ')' 	shift, and go to state 324



state 299

    direct_abstract_declarator  ->  '[' ']' .   (rule 160)

    $default	reduce using rule 160 (direct_abstract_declarator)



state 300

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 161)

    ']' 	shift, and go to state 325



state 301

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 158)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 162)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 163)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 166)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 167)

    '(' 	shift, and go to state 302
    '[' 	shift, and go to state 303

    $default	reduce using rule 158 (abstract_declarator)



state 302

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 166)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_type_list ')'   (rule 167)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ')' 	shift, and go to state 326

    declaration_specifiers	go to state 138
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    struct_or_union	go to state 29
    enum_specifier	go to state 30
    type_qualifier	go to state 31
    parameter_type_list	go to state 327
    parameter_list	go to state 140
    parameter_declaration	go to state 141



state 303

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 162)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . constant_expression ']'   (rule 163)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ']' 	shift, and go to state 328
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 146
    constant_expression	go to state 329



state 304

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 146)

    $default	reduce using rule 146 (parameter_type_list)



state 305

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 148)

    $default	reduce using rule 148 (parameter_list)



state 306

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 153)

    $default	reduce using rule 153 (identifier_list)



state 307

    initializer  ->  '{' initializer_list ',' . '}'   (rule 170)
    initializer_list  ->  initializer_list ',' . initializer   (rule 172)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 153
    '}' 	shift, and go to state 330

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 154
    initializer	go to state 331



state 308

    initializer  ->  '{' initializer_list '}' .   (rule 169)

    $default	reduce using rule 169 (initializer)



state 309

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 117)

    $default	reduce using rule 117 (struct_declarator_list)



state 310

    struct_declarator  ->  declarator ':' constant_expression .   (rule 120)

    $default	reduce using rule 120 (struct_declarator)



state 311

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 312

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 180)

    $default	reduce using rule 180 (labeled_statement)



state 313

    selection_statement  ->  IF '(' expression ')' . statement   (rule 192)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 193)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 332
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 314

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 194)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 333
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 315

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 195)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 334
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 316

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 196)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 335



state 317

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 197)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 198)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ')' 	shift, and go to state 336
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 337



state 318

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 28)

    $default	reduce using rule 28 (cast_expression)



state 319

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 320

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 14)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 338



state 321

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 322

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 58)

    IDENTIFIER	shift, and go to state 143
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 145
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 339



state 323

    direct_abstract_declarator  ->  '(' parameter_type_list ')' .   (rule 165)

    $default	reduce using rule 165 (direct_abstract_declarator)



state 324

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 159)

    $default	reduce using rule 159 (direct_abstract_declarator)



state 325

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 161)

    $default	reduce using rule 161 (direct_abstract_declarator)



state 326

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 166)

    $default	reduce using rule 166 (direct_abstract_declarator)



state 327

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list . ')'   (rule 167)

    ')' 	shift, and go to state 340



state 328

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 162)

    $default	reduce using rule 162 (direct_abstract_declarator)



state 329

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression . ']'   (rule 163)

    ']' 	shift, and go to state 341



state 330

    initializer  ->  '{' initializer_list ',' '}' .   (rule 170)

    $default	reduce using rule 170 (initializer)



state 331

    initializer_list  ->  initializer_list ',' initializer .   (rule 172)

    $default	reduce using rule 172 (initializer_list)



state 332

    selection_statement  ->  IF '(' expression ')' statement .   (rule 192)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 193)

    ELSE	shift, and go to state 342

    ELSE	[reduce using rule 192 (selection_statement)]
    $default	reduce using rule 192 (selection_statement)



state 333

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 194)

    $default	reduce using rule 194 (selection_statement)



state 334

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 195)

    $default	reduce using rule 195 (iteration_statement)



state 335

    expression  ->  expression . ',' assignment_expression   (rule 73)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 196)

    ')' 	shift, and go to state 343
    ',' 	shift, and go to state 225



state 336

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 197)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 344
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 337

    expression  ->  expression . ',' assignment_expression   (rule 73)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 198)

    ')' 	shift, and go to state 345
    ',' 	shift, and go to state 225



state 338

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 14)

    $default	reduce using rule 14 (argument_expression_list)



state 339

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 58)

    $default	reduce using rule 58 (conditional_expression)



state 340

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list ')' .   (rule 167)

    $default	reduce using rule 167 (direct_abstract_declarator)



state 341

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression ']' .   (rule 163)

    $default	reduce using rule 163 (direct_abstract_declarator)



state 342

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 193)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 346
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 343

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 196)

    ';' 	shift, and go to state 347



state 344

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 197)

    $default	reduce using rule 197 (iteration_statement)



state 345

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 198)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 53

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 348
    labeled_statement	go to state 125
    compound_statement	go to state 126
    expression_statement	go to state 129
    selection_statement	go to state 130
    iteration_statement	go to state 131
    jump_statement	go to state 132



state 346

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 193)

    $default	reduce using rule 193 (selection_statement)



state 347

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 196)

    $default	reduce using rule 196 (iteration_statement)



state 348

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 198)

    $default	reduce using rule 198 (iteration_statement)



state 349

    $   	go to state 350



state 350

    $default	accept
