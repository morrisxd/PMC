

Terminals which are not used:

   LINE
   FILENAME


State 338 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> STRING_LITERAL
rule 4    primary_expression -> '(' expression ')'
rule 5    preprocessor_include_header_file -> INCLUDE_FLAG
rule 6    postfix_expression -> primary_expression
rule 7    postfix_expression -> postfix_expression '[' expression ']'
rule 8    postfix_expression -> postfix_expression '(' ')'
rule 9    postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 10   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 11   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 12   postfix_expression -> postfix_expression INC_OP
rule 13   postfix_expression -> postfix_expression DEC_OP
rule 14   argument_expression_list -> assignment_expression
rule 15   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 16   unary_expression -> postfix_expression
rule 17   unary_expression -> INC_OP unary_expression
rule 18   unary_expression -> DEC_OP unary_expression
rule 19   unary_expression -> unary_operator cast_expression
rule 20   unary_expression -> SIZEOF unary_expression
rule 21   unary_expression -> SIZEOF '(' type_name ')'
rule 22   unary_operator -> '&'
rule 23   unary_operator -> '*'
rule 24   unary_operator -> '+'
rule 25   unary_operator -> '-'
rule 26   unary_operator -> '~'
rule 27   unary_operator -> '!'
rule 28   cast_expression -> unary_expression
rule 29   cast_expression -> '(' type_name ')' cast_expression
rule 30   multiplicative_expression -> cast_expression
rule 31   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 32   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 33   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 34   additive_expression -> multiplicative_expression
rule 35   additive_expression -> additive_expression '+' multiplicative_expression
rule 36   additive_expression -> additive_expression '-' multiplicative_expression
rule 37   shift_expression -> additive_expression
rule 38   shift_expression -> shift_expression LEFT_OP additive_expression
rule 39   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 40   relational_expression -> shift_expression
rule 41   relational_expression -> relational_expression '<' shift_expression
rule 42   relational_expression -> relational_expression '>' shift_expression
rule 43   relational_expression -> relational_expression LE_OP shift_expression
rule 44   relational_expression -> relational_expression GE_OP shift_expression
rule 45   equality_expression -> relational_expression
rule 46   equality_expression -> equality_expression EQ_OP relational_expression
rule 47   equality_expression -> equality_expression NE_OP relational_expression
rule 48   and_expression -> equality_expression
rule 49   and_expression -> and_expression '&' equality_expression
rule 50   exclusive_or_expression -> and_expression
rule 51   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 52   inclusive_or_expression -> exclusive_or_expression
rule 53   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 54   logical_and_expression -> inclusive_or_expression
rule 55   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 56   logical_or_expression -> logical_and_expression
rule 57   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 58   conditional_expression -> logical_or_expression
rule 59   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 60   assignment_expression -> conditional_expression
rule 61   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 62   assignment_operator -> '='
rule 63   assignment_operator -> MUL_ASSIGN
rule 64   assignment_operator -> DIV_ASSIGN
rule 65   assignment_operator -> MOD_ASSIGN
rule 66   assignment_operator -> ADD_ASSIGN
rule 67   assignment_operator -> SUB_ASSIGN
rule 68   assignment_operator -> LEFT_ASSIGN
rule 69   assignment_operator -> RIGHT_ASSIGN
rule 70   assignment_operator -> AND_ASSIGN
rule 71   assignment_operator -> XOR_ASSIGN
rule 72   assignment_operator -> OR_ASSIGN
rule 73   expression -> assignment_expression
rule 74   expression -> expression ',' assignment_expression
rule 75   constant_expression -> conditional_expression
rule 76   declaration -> declaration_specifiers ';'
rule 77   declaration -> declaration_specifiers init_declarator_list ';'
rule 78   declaration_specifiers -> storage_class_specifier
rule 79   declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 80   declaration_specifiers -> type_specifier
rule 81   declaration_specifiers -> type_specifier declaration_specifiers
rule 82   declaration_specifiers -> type_qualifier
rule 83   declaration_specifiers -> type_qualifier declaration_specifiers
rule 84   init_declarator_list -> init_declarator
rule 85   init_declarator_list -> init_declarator_list ',' init_declarator
rule 86   init_declarator -> declarator
rule 87   @1 ->		/* empty */
rule 88   init_declarator -> declarator @1 '=' initializer
rule 89   storage_class_specifier -> TYPEDEF
rule 90   storage_class_specifier -> EXTERN
rule 91   storage_class_specifier -> STATIC
rule 92   storage_class_specifier -> AUTO
rule 93   storage_class_specifier -> REGISTER
rule 94   storage_class_specifier -> INLINE
rule 95   type_specifier -> VOID
rule 96   type_specifier -> CHAR
rule 97   type_specifier -> SHORT
rule 98   type_specifier -> INT
rule 99   type_specifier -> LONG
rule 100  type_specifier -> FLOAT
rule 101  type_specifier -> DOUBLE
rule 102  type_specifier -> SIGNED
rule 103  type_specifier -> UNSIGNED
rule 104  type_specifier -> struct_or_union_specifier
rule 105  type_specifier -> enum_specifier
rule 106  type_specifier -> TYPE_NAME
rule 107  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' struct_declaration_list '}'
rule 108  struct_or_union_specifier -> struct_or_union '{' struct_declaration_list '}'
rule 109  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 110  struct_or_union -> STRUCT
rule 111  struct_or_union -> UNION
rule 112  struct_declaration_list -> struct_declaration
rule 113  struct_declaration_list -> struct_declaration_list struct_declaration
rule 114  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 115  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 116  specifier_qualifier_list -> type_specifier
rule 117  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 118  specifier_qualifier_list -> type_qualifier
rule 119  struct_declarator_list -> struct_declarator
rule 120  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 121  struct_declarator -> declarator
rule 122  struct_declarator -> ':' constant_expression
rule 123  struct_declarator -> declarator ':' constant_expression
rule 124  enum_specifier -> ENUM '{' enumerator_list '}'
rule 125  enum_specifier -> ENUM '{' enumerator_list ',' '}'
rule 126  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list '}'
rule 127  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list ',' '}'
rule 128  enum_specifier -> ENUM IDENTIFIER
rule 129  enumerator_list -> enumerator
rule 130  enumerator_list -> enumerator_list ',' enumerator
rule 131  enumerator -> IDENTIFIER
rule 132  enumerator -> IDENTIFIER '=' constant_expression
rule 133  type_qualifier -> CONST
rule 134  type_qualifier -> VOLATILE
rule 135  declarator -> pointer direct_declarator
rule 136  declarator -> direct_declarator
rule 137  direct_declarator -> IDENTIFIER
rule 138  direct_declarator -> '(' declarator ')'
rule 139  direct_declarator -> direct_declarator '[' constant_expression ']'
rule 140  direct_declarator -> direct_declarator '[' ']'
rule 141  direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 142  direct_declarator -> direct_declarator '(' identifier_list ')'
rule 143  direct_declarator -> direct_declarator '(' ')'
rule 144  pointer -> '*'
rule 145  pointer -> '*' type_qualifier_list
rule 146  pointer -> '*' pointer
rule 147  pointer -> '*' type_qualifier_list pointer
rule 148  type_qualifier_list -> type_qualifier
rule 149  type_qualifier_list -> type_qualifier_list type_qualifier
rule 150  parameter_type_list -> parameter_list
rule 151  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 152  parameter_list -> parameter_declaration
rule 153  parameter_list -> parameter_list ',' parameter_declaration
rule 154  parameter_declaration -> declaration_specifiers declarator
rule 155  parameter_declaration -> declaration_specifiers abstract_declarator
rule 156  parameter_declaration -> declaration_specifiers
rule 157  identifier_list -> IDENTIFIER
rule 158  identifier_list -> identifier_list ',' IDENTIFIER
rule 159  type_name -> specifier_qualifier_list
rule 160  type_name -> specifier_qualifier_list abstract_declarator
rule 161  abstract_declarator -> pointer
rule 162  abstract_declarator -> direct_abstract_declarator
rule 163  abstract_declarator -> pointer direct_abstract_declarator
rule 164  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 165  direct_abstract_declarator -> '[' ']'
rule 166  direct_abstract_declarator -> '[' constant_expression ']'
rule 167  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 168  direct_abstract_declarator -> direct_abstract_declarator '[' constant_expression ']'
rule 169  direct_abstract_declarator -> '(' ')'
rule 170  direct_abstract_declarator -> '(' parameter_type_list ')'
rule 171  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 172  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_type_list ')'
rule 173  initializer -> assignment_expression
rule 174  initializer -> '{' initializer_list '}'
rule 175  initializer -> '{' initializer_list ',' '}'
rule 176  initializer_list -> initializer
rule 177  initializer_list -> initializer_list ',' initializer
rule 178  statement -> labeled_statement
rule 179  statement -> compound_statement
rule 180  statement -> expression_statement
rule 181  statement -> selection_statement
rule 182  statement -> iteration_statement
rule 183  statement -> jump_statement
rule 184  labeled_statement -> IDENTIFIER ':' statement
rule 185  labeled_statement -> CASE constant_expression ':' statement
rule 186  labeled_statement -> DEFAULT ':' statement
rule 187  compound_statement -> '{' '}'
rule 188  compound_statement -> '{' statement_list '}'
rule 189  compound_statement -> '{' declaration_list '}'
rule 190  compound_statement -> '{' declaration_list statement_list '}'
rule 191  declaration_list -> declaration
rule 192  declaration_list -> declaration_list declaration
rule 193  statement_list -> statement
rule 194  statement_list -> statement_list statement
rule 195  expression_statement -> ';'
rule 196  expression_statement -> expression ';'
rule 197  selection_statement -> IF '(' expression ')' statement
rule 198  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 199  selection_statement -> SWITCH '(' expression ')' statement
rule 200  iteration_statement -> WHILE '(' expression ')' statement
rule 201  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 202  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 203  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 204  jump_statement -> GOTO IDENTIFIER ';'
rule 205  jump_statement -> CONTINUE ';'
rule 206  jump_statement -> BREAK ';'
rule 207  jump_statement -> RETURN ';'
rule 208  jump_statement -> RETURN expression ';'
rule 209  translation_unit -> external_declaration
rule 210  translation_unit -> translation_unit external_declaration
rule 211  translation_unit -> preprocessor_include_header_file
rule 212  translation_unit -> translation_unit preprocessor_include_header_file
rule 213  external_declaration -> function_definition
rule 214  external_declaration -> declaration
rule 215  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 216  function_definition -> declaration_specifiers declarator compound_statement
rule 217  function_definition -> declarator declaration_list compound_statement
rule 218  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 27
'%' (37) 33
'&' (38) 22 49
'(' (40) 4 8 9 21 29 138 141 142 143 164 169 170 171 172 197 198 199
    200 201 202 203
')' (41) 4 8 9 21 29 138 141 142 143 164 169 170 171 172 197 198 199
    200 201 202 203
'*' (42) 23 31 144 145 146 147
'+' (43) 24 35
',' (44) 15 74 85 120 125 127 130 151 153 158 175 177
'-' (45) 25 36
'.' (46) 10
'/' (47) 32
':' (58) 59 122 123 184 185 186
';' (59) 76 77 114 195 196 201 204 205 206 207 208
'<' (60) 41
'=' (61) 62 88 132
'>' (62) 42
'?' (63) 59
'[' (91) 7 139 140 165 166 167 168
']' (93) 7 139 140 165 166 167 168
'^' (94) 51
'{' (123) 107 108 124 125 126 127 174 175 187 188 189 190
'|' (124) 53
'}' (125) 107 108 124 125 126 127 174 175 187 188 189 190
'~' (126) 26
error (256)
INCLUDE_FLAG (258) 5
LINE (259)
FILENAME (260)
INLINE (261) 94
IDENTIFIER (262) 1 10 11 107 109 126 127 128 131 132 137 157 158 184
    204
CONSTANT (263) 2
STRING_LITERAL (264) 3
SIZEOF (265) 20 21
PTR_OP (266) 11
INC_OP (267) 12 17
DEC_OP (268) 13 18
LEFT_OP (269) 38
RIGHT_OP (270) 39
LE_OP (271) 43
GE_OP (272) 44
EQ_OP (273) 46
NE_OP (274) 47
AND_OP (275) 55
OR_OP (276) 57
MUL_ASSIGN (277) 63
DIV_ASSIGN (278) 64
MOD_ASSIGN (279) 65
ADD_ASSIGN (280) 66
SUB_ASSIGN (281) 67
LEFT_ASSIGN (282) 68
RIGHT_ASSIGN (283) 69
AND_ASSIGN (284) 70
XOR_ASSIGN (285) 71
OR_ASSIGN (286) 72
TYPE_NAME (287) 106
TYPEDEF (288) 89
EXTERN (289) 90
STATIC (290) 91
AUTO (291) 92
REGISTER (292) 93
CHAR (293) 96
SHORT (294) 97
INT (295) 98
LONG (296) 99
SIGNED (297) 102
UNSIGNED (298) 103
FLOAT (299) 100
DOUBLE (300) 101
CONST (301) 133
VOLATILE (302) 134
VOID (303) 95
STRUCT (304) 110
UNION (305) 111
ENUM (306) 124 125 126 127 128
ELLIPSIS (307) 151
CASE (308) 185
DEFAULT (309) 186
IF (310) 197 198
ELSE (311) 198
SWITCH (312) 199
WHILE (313) 200 201
DO (314) 201
FOR (315) 202 203
GOTO (316) 204
CONTINUE (317) 205
BREAK (318) 206
RETURN (319) 207 208

Nonterminals, with rules where they appear

primary_expression (89)
    on left: 1 2 3 4, on right: 6
preprocessor_include_header_file (90)
    on left: 5, on right: 211 212
postfix_expression (91)
    on left: 6 7 8 9 10 11 12 13, on right: 7 8 9 10 11 12 13 16
argument_expression_list (92)
    on left: 14 15, on right: 9 15
unary_expression (93)
    on left: 16 17 18 19 20 21, on right: 17 18 20 28 61
unary_operator (94)
    on left: 22 23 24 25 26 27, on right: 19
cast_expression (95)
    on left: 28 29, on right: 19 29 30 31 32 33
multiplicative_expression (96)
    on left: 30 31 32 33, on right: 31 32 33 34 35 36
additive_expression (97)
    on left: 34 35 36, on right: 35 36 37 38 39
shift_expression (98)
    on left: 37 38 39, on right: 38 39 40 41 42 43 44
relational_expression (99)
    on left: 40 41 42 43 44, on right: 41 42 43 44 45 46 47
equality_expression (100)
    on left: 45 46 47, on right: 46 47 48 49
and_expression (101)
    on left: 48 49, on right: 49 50 51
exclusive_or_expression (102)
    on left: 50 51, on right: 51 52 53
inclusive_or_expression (103)
    on left: 52 53, on right: 53 54 55
logical_and_expression (104)
    on left: 54 55, on right: 55 56 57
logical_or_expression (105)
    on left: 56 57, on right: 57 58 59
conditional_expression (106)
    on left: 58 59, on right: 59 60 75
assignment_expression (107)
    on left: 60 61, on right: 14 15 61 73 74 173
assignment_operator (108)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 61
expression (109)
    on left: 73 74, on right: 4 7 59 74 196 197 198 199 200 201 203
    208
constant_expression (110)
    on left: 75, on right: 122 123 132 139 166 168 185
declaration (111)
    on left: 76 77, on right: 191 192 214
declaration_specifiers (112)
    on left: 78 79 80 81 82 83, on right: 76 77 79 81 83 154 155 156
    215 216
init_declarator_list (113)
    on left: 84 85, on right: 77 85
init_declarator (114)
    on left: 86 88, on right: 84 85
@1 (115)
    on left: 87, on right: 88
storage_class_specifier (116)
    on left: 89 90 91 92 93 94, on right: 78 79
type_specifier (117)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106,
    on right: 80 81 115 116
struct_or_union_specifier (118)
    on left: 107 108 109, on right: 104
struct_or_union (119)
    on left: 110 111, on right: 107 108 109
struct_declaration_list (120)
    on left: 112 113, on right: 107 108 113
struct_declaration (121)
    on left: 114, on right: 112 113
specifier_qualifier_list (122)
    on left: 115 116 117 118, on right: 114 115 117 159 160
struct_declarator_list (123)
    on left: 119 120, on right: 114 120
struct_declarator (124)
    on left: 121 122 123, on right: 119 120
enum_specifier (125)
    on left: 124 125 126 127 128, on right: 105
enumerator_list (126)
    on left: 129 130, on right: 124 125 126 127 130
enumerator (127)
    on left: 131 132, on right: 129 130
type_qualifier (128)
    on left: 133 134, on right: 82 83 117 118 148 149
declarator (129)
    on left: 135 136, on right: 86 88 121 123 138 154 215 216 217 218
direct_declarator (130)
    on left: 137 138 139 140 141 142 143, on right: 135 136 139 140
    141 142 143
pointer (131)
    on left: 144 145 146 147, on right: 135 146 147 161 163
type_qualifier_list (132)
    on left: 148 149, on right: 145 147 149
parameter_type_list (133)
    on left: 150 151, on right: 141 170 172
parameter_list (134)
    on left: 152 153, on right: 150 151 153
parameter_declaration (135)
    on left: 154 155 156, on right: 152 153
identifier_list (136)
    on left: 157 158, on right: 142 158
type_name (137)
    on left: 159 160, on right: 21 29
abstract_declarator (138)
    on left: 161 162 163, on right: 155 160 164
direct_abstract_declarator (139)
    on left: 164 165 166 167 168 169 170 171 172, on right: 162 163
    167 168 171 172
initializer (140)
    on left: 173 174 175, on right: 88 176 177
initializer_list (141)
    on left: 176 177, on right: 174 175 177
statement (142)
    on left: 178 179 180 181 182 183, on right: 184 185 186 193 194
    197 198 199 200 201 202 203
labeled_statement (143)
    on left: 184 185 186, on right: 178
compound_statement (144)
    on left: 187 188 189 190, on right: 179 215 216 217 218
declaration_list (145)
    on left: 191 192, on right: 189 190 192 215 217
statement_list (146)
    on left: 193 194, on right: 188 190 194
expression_statement (147)
    on left: 195 196, on right: 180 202 203
selection_statement (148)
    on left: 197 198 199, on right: 181
iteration_statement (149)
    on left: 200 201 202 203, on right: 182
jump_statement (150)
    on left: 204 205 206 207 208, on right: 183
translation_unit (151)
    on left: 209 210 211 212, on right: 210 212
external_declaration (152)
    on left: 213 214, on right: 209 210
function_definition (153)
    on left: 215 216 217 218, on right: 213


state 0

    INCLUDE_FLAG	shift, and go to state 1
    INLINE	shift, and go to state 2
    IDENTIFIER	shift, and go to state 3
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    preprocessor_include_header_file	go to state 26
    declaration	go to state 27
    declaration_specifiers	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    translation_unit	go to state 38
    external_declaration	go to state 39
    function_definition	go to state 40



state 1

    preprocessor_include_header_file  ->  INCLUDE_FLAG .   (rule 5)

    $default	reduce using rule 5 (preprocessor_include_header_file)



state 2

    storage_class_specifier  ->  INLINE .   (rule 94)

    $default	reduce using rule 94 (storage_class_specifier)



state 3

    direct_declarator  ->  IDENTIFIER .   (rule 137)

    $default	reduce using rule 137 (direct_declarator)



state 4

    type_specifier  ->  TYPE_NAME .   (rule 106)

    $default	reduce using rule 106 (type_specifier)



state 5

    storage_class_specifier  ->  TYPEDEF .   (rule 89)

    $default	reduce using rule 89 (storage_class_specifier)



state 6

    storage_class_specifier  ->  EXTERN .   (rule 90)

    $default	reduce using rule 90 (storage_class_specifier)



state 7

    storage_class_specifier  ->  STATIC .   (rule 91)

    $default	reduce using rule 91 (storage_class_specifier)



state 8

    storage_class_specifier  ->  AUTO .   (rule 92)

    $default	reduce using rule 92 (storage_class_specifier)



state 9

    storage_class_specifier  ->  REGISTER .   (rule 93)

    $default	reduce using rule 93 (storage_class_specifier)



state 10

    type_specifier  ->  CHAR .   (rule 96)

    $default	reduce using rule 96 (type_specifier)



state 11

    type_specifier  ->  SHORT .   (rule 97)

    $default	reduce using rule 97 (type_specifier)



state 12

    type_specifier  ->  INT .   (rule 98)

    $default	reduce using rule 98 (type_specifier)



state 13

    type_specifier  ->  LONG .   (rule 99)

    $default	reduce using rule 99 (type_specifier)



state 14

    type_specifier  ->  SIGNED .   (rule 102)

    $default	reduce using rule 102 (type_specifier)



state 15

    type_specifier  ->  UNSIGNED .   (rule 103)

    $default	reduce using rule 103 (type_specifier)



state 16

    type_specifier  ->  FLOAT .   (rule 100)

    $default	reduce using rule 100 (type_specifier)



state 17

    type_specifier  ->  DOUBLE .   (rule 101)

    $default	reduce using rule 101 (type_specifier)



state 18

    type_qualifier  ->  CONST .   (rule 133)

    $default	reduce using rule 133 (type_qualifier)



state 19

    type_qualifier  ->  VOLATILE .   (rule 134)

    $default	reduce using rule 134 (type_qualifier)



state 20

    type_specifier  ->  VOID .   (rule 95)

    $default	reduce using rule 95 (type_specifier)



state 21

    struct_or_union  ->  STRUCT .   (rule 110)

    $default	reduce using rule 110 (struct_or_union)



state 22

    struct_or_union  ->  UNION .   (rule 111)

    $default	reduce using rule 111 (struct_or_union)



state 23

    enum_specifier  ->  ENUM . '{' enumerator_list '}'   (rule 124)
    enum_specifier  ->  ENUM . '{' enumerator_list ',' '}'   (rule 125)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list '}'   (rule 126)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list ',' '}'   (rule 127)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 128)

    IDENTIFIER	shift, and go to state 41
    '{' 	shift, and go to state 42



state 24

    direct_declarator  ->  '(' . declarator ')'   (rule 138)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 37



state 25

    pointer  ->  '*' .   (rule 144)
    pointer  ->  '*' . type_qualifier_list   (rule 145)
    pointer  ->  '*' . pointer   (rule 146)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 147)

    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    '*' 	shift, and go to state 25

    $default	reduce using rule 144 (pointer)

    type_qualifier	go to state 44
    pointer	go to state 45
    type_qualifier_list	go to state 46



state 26

    translation_unit  ->  preprocessor_include_header_file .   (rule 211)

    $default	reduce using rule 211 (translation_unit)



state 27

    external_declaration  ->  declaration .   (rule 214)

    $default	reduce using rule 214 (external_declaration)



state 28

    declaration  ->  declaration_specifiers . ';'   (rule 76)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 77)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 215)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 216)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 50
    direct_declarator	go to state 36
    pointer	go to state 37



state 29

    declaration_specifiers  ->  storage_class_specifier .   (rule 78)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 79)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    $default	reduce using rule 78 (declaration_specifiers)

    declaration_specifiers	go to state 51
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 30

    declaration_specifiers  ->  type_specifier .   (rule 80)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 81)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    $default	reduce using rule 80 (declaration_specifiers)

    declaration_specifiers	go to state 52
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 31

    type_specifier  ->  struct_or_union_specifier .   (rule 104)

    $default	reduce using rule 104 (type_specifier)



state 32

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' struct_declaration_list '}'   (rule 107)
    struct_or_union_specifier  ->  struct_or_union . '{' struct_declaration_list '}'   (rule 108)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 109)

    IDENTIFIER	shift, and go to state 53
    '{' 	shift, and go to state 54



state 33

    type_specifier  ->  enum_specifier .   (rule 105)

    $default	reduce using rule 105 (type_specifier)



state 34

    declaration_specifiers  ->  type_qualifier .   (rule 82)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 83)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    $default	reduce using rule 82 (declaration_specifiers)

    declaration_specifiers	go to state 55
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 35

    function_definition  ->  declarator . declaration_list compound_statement   (rule 217)
    function_definition  ->  declarator . compound_statement   (rule 218)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '{' 	shift, and go to state 56

    declaration	go to state 57
    declaration_specifiers	go to state 58
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 59
    declaration_list	go to state 60



state 36

    declarator  ->  direct_declarator .   (rule 136)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 139)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 140)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 141)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 142)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 143)

    '(' 	shift, and go to state 61
    '[' 	shift, and go to state 62

    $default	reduce using rule 136 (declarator)



state 37

    declarator  ->  pointer . direct_declarator   (rule 135)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24

    direct_declarator	go to state 63



state 38

    translation_unit  ->  translation_unit . external_declaration   (rule 210)
    translation_unit  ->  translation_unit . preprocessor_include_header_file   (rule 212)

    $   	go to state 357
    INCLUDE_FLAG	shift, and go to state 1
    INLINE	shift, and go to state 2
    IDENTIFIER	shift, and go to state 3
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    preprocessor_include_header_file	go to state 64
    declaration	go to state 27
    declaration_specifiers	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    external_declaration	go to state 65
    function_definition	go to state 40



state 39

    translation_unit  ->  external_declaration .   (rule 209)

    $default	reduce using rule 209 (translation_unit)



state 40

    external_declaration  ->  function_definition .   (rule 213)

    $default	reduce using rule 213 (external_declaration)



state 41

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list '}'   (rule 126)
    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list ',' '}'   (rule 127)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 128)

    '{' 	shift, and go to state 66

    $default	reduce using rule 128 (enum_specifier)



state 42

    enum_specifier  ->  ENUM '{' . enumerator_list '}'   (rule 124)
    enum_specifier  ->  ENUM '{' . enumerator_list ',' '}'   (rule 125)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 68
    enumerator	go to state 69



state 43

    direct_declarator  ->  '(' declarator . ')'   (rule 138)

    ')' 	shift, and go to state 70



state 44

    type_qualifier_list  ->  type_qualifier .   (rule 148)

    $default	reduce using rule 148 (type_qualifier_list)



state 45

    pointer  ->  '*' pointer .   (rule 146)

    $default	reduce using rule 146 (pointer)



state 46

    pointer  ->  '*' type_qualifier_list .   (rule 145)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 147)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 149)

    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    '*' 	shift, and go to state 25

    $default	reduce using rule 145 (pointer)

    type_qualifier	go to state 71
    pointer	go to state 72



state 47

    declaration  ->  declaration_specifiers ';' .   (rule 76)

    $default	reduce using rule 76 (declaration)



state 48

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 77)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 85)

    ',' 	shift, and go to state 73
    ';' 	shift, and go to state 74



state 49

    init_declarator_list  ->  init_declarator .   (rule 84)

    $default	reduce using rule 84 (init_declarator_list)



state 50

    init_declarator  ->  declarator .   (rule 86)
    init_declarator  ->  declarator . @1 '=' initializer   (rule 88)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 215)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 216)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '{' 	shift, and go to state 56

    $default	reduce using rule 86 (init_declarator)

    declaration	go to state 57
    declaration_specifiers	go to state 58
    @1  	go to state 75
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 76
    declaration_list	go to state 77



state 51

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 79)

    $default	reduce using rule 79 (declaration_specifiers)



state 52

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 81)

    $default	reduce using rule 81 (declaration_specifiers)



state 53

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' struct_declaration_list '}'   (rule 107)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 109)

    '{' 	shift, and go to state 78

    $default	reduce using rule 109 (struct_or_union_specifier)



state 54

    struct_or_union_specifier  ->  struct_or_union '{' . struct_declaration_list '}'   (rule 108)

    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 80
    struct_declaration	go to state 81
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 55

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 83)

    $default	reduce using rule 83 (declaration_specifiers)



state 56

    compound_statement  ->  '{' . '}'   (rule 187)
    compound_statement  ->  '{' . statement_list '}'   (rule 188)
    compound_statement  ->  '{' . declaration_list '}'   (rule 189)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 190)

    INLINE	shift, and go to state 2
    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56
    '}' 	shift, and go to state 109

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    declaration	go to state 57
    declaration_specifiers	go to state 58
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 128
    labeled_statement	go to state 129
    compound_statement	go to state 130
    declaration_list	go to state 131
    statement_list	go to state 132
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 57

    declaration_list  ->  declaration .   (rule 191)

    $default	reduce using rule 191 (declaration_list)



state 58

    declaration  ->  declaration_specifiers . ';'   (rule 76)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 77)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 137
    direct_declarator	go to state 36
    pointer	go to state 37



state 59

    function_definition  ->  declarator compound_statement .   (rule 218)

    $default	reduce using rule 218 (function_definition)



state 60

    declaration_list  ->  declaration_list . declaration   (rule 192)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 217)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '{' 	shift, and go to state 56

    declaration	go to state 138
    declaration_specifiers	go to state 58
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 139



state 61

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 141)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 142)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 143)

    INLINE	shift, and go to state 2
    IDENTIFIER	shift, and go to state 140
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    ')' 	shift, and go to state 141

    declaration_specifiers	go to state 142
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 143
    parameter_list	go to state 144
    parameter_declaration	go to state 145
    identifier_list	go to state 146



state 62

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 139)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 140)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ']' 	shift, and go to state 148
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 151



state 63

    declarator  ->  pointer direct_declarator .   (rule 135)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 139)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 140)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 141)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 142)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 143)

    '(' 	shift, and go to state 61
    '[' 	shift, and go to state 62

    $default	reduce using rule 135 (declarator)



state 64

    translation_unit  ->  translation_unit preprocessor_include_header_file .   (rule 212)

    $default	reduce using rule 212 (translation_unit)



state 65

    translation_unit  ->  translation_unit external_declaration .   (rule 210)

    $default	reduce using rule 210 (translation_unit)



state 66

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list '}'   (rule 126)
    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list ',' '}'   (rule 127)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 152
    enumerator	go to state 69



state 67

    enumerator  ->  IDENTIFIER .   (rule 131)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 132)

    '=' 	shift, and go to state 153

    $default	reduce using rule 131 (enumerator)



state 68

    enum_specifier  ->  ENUM '{' enumerator_list . '}'   (rule 124)
    enum_specifier  ->  ENUM '{' enumerator_list . ',' '}'   (rule 125)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 130)

    ',' 	shift, and go to state 154
    '}' 	shift, and go to state 155



state 69

    enumerator_list  ->  enumerator .   (rule 129)

    $default	reduce using rule 129 (enumerator_list)



state 70

    direct_declarator  ->  '(' declarator ')' .   (rule 138)

    $default	reduce using rule 138 (direct_declarator)



state 71

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 149)

    $default	reduce using rule 149 (type_qualifier_list)



state 72

    pointer  ->  '*' type_qualifier_list pointer .   (rule 147)

    $default	reduce using rule 147 (pointer)



state 73

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 85)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    init_declarator	go to state 156
    declarator	go to state 137
    direct_declarator	go to state 36
    pointer	go to state 37



state 74

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 77)

    $default	reduce using rule 77 (declaration)



state 75

    init_declarator  ->  declarator @1 . '=' initializer   (rule 88)

    '=' 	shift, and go to state 157



state 76

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 216)

    $default	reduce using rule 216 (function_definition)



state 77

    declaration_list  ->  declaration_list . declaration   (rule 192)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 215)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '{' 	shift, and go to state 56

    declaration	go to state 138
    declaration_specifiers	go to state 58
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 158



state 78

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . struct_declaration_list '}'   (rule 107)

    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 159
    struct_declaration	go to state 81
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 79

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 115)
    specifier_qualifier_list  ->  type_specifier .   (rule 116)

    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    $default	reduce using rule 116 (specifier_qualifier_list)

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 160
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 80

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list . '}'   (rule 108)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 113)

    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '}' 	shift, and go to state 161

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration	go to state 162
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 81

    struct_declaration_list  ->  struct_declaration .   (rule 112)

    $default	reduce using rule 112 (struct_declaration_list)



state 82

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 114)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 163

    struct_declarator_list	go to state 164
    struct_declarator	go to state 165
    declarator	go to state 166
    direct_declarator	go to state 36
    pointer	go to state 37



state 83

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 117)
    specifier_qualifier_list  ->  type_qualifier .   (rule 118)

    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23

    $default	reduce using rule 118 (specifier_qualifier_list)

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 167
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 84

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 184)

    ':' 	shift, and go to state 168

    $default	reduce using rule 1 (primary_expression)



state 85

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 86

    primary_expression  ->  STRING_LITERAL .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 87

    unary_expression  ->  SIZEOF . unary_expression   (rule 20)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 21)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 169
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 170
    unary_operator	go to state 113



state 88

    unary_expression  ->  INC_OP . unary_expression   (rule 17)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 171
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 172
    unary_operator	go to state 113



state 89

    unary_expression  ->  DEC_OP . unary_expression   (rule 18)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 171
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 173
    unary_operator	go to state 113



state 90

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 185)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 174



state 91

    labeled_statement  ->  DEFAULT . ':' statement   (rule 186)

    ':' 	shift, and go to state 175



state 92

    selection_statement  ->  IF . '(' expression ')' statement   (rule 197)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 198)

    '(' 	shift, and go to state 176



state 93

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 199)

    '(' 	shift, and go to state 177



state 94

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 200)

    '(' 	shift, and go to state 178



state 95

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 201)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 179
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 96

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 202)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 203)

    '(' 	shift, and go to state 180



state 97

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 204)

    IDENTIFIER	shift, and go to state 181



state 98

    jump_statement  ->  CONTINUE . ';'   (rule 205)

    ';' 	shift, and go to state 182



state 99

    jump_statement  ->  BREAK . ';'   (rule 206)

    ';' 	shift, and go to state 183



state 100

    jump_statement  ->  RETURN . ';'   (rule 207)
    jump_statement  ->  RETURN . expression ';'   (rule 208)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 184

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 185



state 101

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 29)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 186
    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 187
    enum_specifier	go to state 33
    type_qualifier	go to state 83
    type_name	go to state 188



state 102

    unary_operator  ->  '&' .   (rule 22)

    $default	reduce using rule 22 (unary_operator)



state 103

    unary_operator  ->  '*' .   (rule 23)

    $default	reduce using rule 23 (unary_operator)



state 104

    unary_operator  ->  '+' .   (rule 24)

    $default	reduce using rule 24 (unary_operator)



state 105

    unary_operator  ->  '-' .   (rule 25)

    $default	reduce using rule 25 (unary_operator)



state 106

    unary_operator  ->  '~' .   (rule 26)

    $default	reduce using rule 26 (unary_operator)



state 107

    unary_operator  ->  '!' .   (rule 27)

    $default	reduce using rule 27 (unary_operator)



state 108

    expression_statement  ->  ';' .   (rule 195)

    $default	reduce using rule 195 (expression_statement)



state 109

    compound_statement  ->  '{' '}' .   (rule 187)

    $default	reduce using rule 187 (compound_statement)



state 110

    postfix_expression  ->  primary_expression .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 111

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 7)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 8)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 9)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 10)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 11)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 12)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 13)
    unary_expression  ->  postfix_expression .   (rule 16)

    PTR_OP	shift, and go to state 189
    INC_OP	shift, and go to state 190
    DEC_OP	shift, and go to state 191
    '(' 	shift, and go to state 192
    '[' 	shift, and go to state 193
    '.' 	shift, and go to state 194

    $default	reduce using rule 16 (unary_expression)



state 112

    cast_expression  ->  unary_expression .   (rule 28)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 61)

    MUL_ASSIGN	shift, and go to state 195
    DIV_ASSIGN	shift, and go to state 196
    MOD_ASSIGN	shift, and go to state 197
    ADD_ASSIGN	shift, and go to state 198
    SUB_ASSIGN	shift, and go to state 199
    LEFT_ASSIGN	shift, and go to state 200
    RIGHT_ASSIGN	shift, and go to state 201
    AND_ASSIGN	shift, and go to state 202
    XOR_ASSIGN	shift, and go to state 203
    OR_ASSIGN	shift, and go to state 204
    '=' 	shift, and go to state 205

    $default	reduce using rule 28 (cast_expression)

    assignment_operator	go to state 206



state 113

    unary_expression  ->  unary_operator . cast_expression   (rule 19)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 207



state 114

    multiplicative_expression  ->  cast_expression .   (rule 30)

    $default	reduce using rule 30 (multiplicative_expression)



state 115

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 32)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 33)
    additive_expression  ->  multiplicative_expression .   (rule 34)

    '*' 	shift, and go to state 208
    '/' 	shift, and go to state 209
    '%' 	shift, and go to state 210

    $default	reduce using rule 34 (additive_expression)



state 116

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 35)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 36)
    shift_expression  ->  additive_expression .   (rule 37)

    '+' 	shift, and go to state 211
    '-' 	shift, and go to state 212

    $default	reduce using rule 37 (shift_expression)



state 117

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  shift_expression .   (rule 40)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 40 (relational_expression)



state 118

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 42)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 43)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 44)
    equality_expression  ->  relational_expression .   (rule 45)

    LE_OP	shift, and go to state 215
    GE_OP	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218

    $default	reduce using rule 45 (equality_expression)



state 119

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 46)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 47)
    and_expression  ->  equality_expression .   (rule 48)

    EQ_OP	shift, and go to state 219
    NE_OP	shift, and go to state 220

    $default	reduce using rule 48 (and_expression)



state 120

    and_expression  ->  and_expression . '&' equality_expression   (rule 49)
    exclusive_or_expression  ->  and_expression .   (rule 50)

    '&' 	shift, and go to state 221

    $default	reduce using rule 50 (exclusive_or_expression)



state 121

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 51)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 52)

    '^' 	shift, and go to state 222

    $default	reduce using rule 52 (inclusive_or_expression)



state 122

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 53)
    logical_and_expression  ->  inclusive_or_expression .   (rule 54)

    '|' 	shift, and go to state 223

    $default	reduce using rule 54 (logical_and_expression)



state 123

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 55)
    logical_or_expression  ->  logical_and_expression .   (rule 56)

    AND_OP	shift, and go to state 224

    $default	reduce using rule 56 (logical_or_expression)



state 124

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 57)
    conditional_expression  ->  logical_or_expression .   (rule 58)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 59)

    OR_OP	shift, and go to state 225
    '?' 	shift, and go to state 226

    $default	reduce using rule 58 (conditional_expression)



state 125

    assignment_expression  ->  conditional_expression .   (rule 60)

    $default	reduce using rule 60 (assignment_expression)



state 126

    expression  ->  assignment_expression .   (rule 73)

    $default	reduce using rule 73 (expression)



state 127

    expression  ->  expression . ',' assignment_expression   (rule 74)
    expression_statement  ->  expression . ';'   (rule 196)

    ',' 	shift, and go to state 227
    ';' 	shift, and go to state 228



state 128

    statement_list  ->  statement .   (rule 193)

    $default	reduce using rule 193 (statement_list)



state 129

    statement  ->  labeled_statement .   (rule 178)

    $default	reduce using rule 178 (statement)



state 130

    statement  ->  compound_statement .   (rule 179)

    $default	reduce using rule 179 (statement)



state 131

    compound_statement  ->  '{' declaration_list . '}'   (rule 189)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 190)
    declaration_list  ->  declaration_list . declaration   (rule 192)

    INLINE	shift, and go to state 2
    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56
    '}' 	shift, and go to state 229

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    declaration	go to state 138
    declaration_specifiers	go to state 58
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 128
    labeled_statement	go to state 129
    compound_statement	go to state 130
    statement_list	go to state 230
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 132

    compound_statement  ->  '{' statement_list . '}'   (rule 188)
    statement_list  ->  statement_list . statement   (rule 194)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56
    '}' 	shift, and go to state 231

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 232
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 133

    statement  ->  expression_statement .   (rule 180)

    $default	reduce using rule 180 (statement)



state 134

    statement  ->  selection_statement .   (rule 181)

    $default	reduce using rule 181 (statement)



state 135

    statement  ->  iteration_statement .   (rule 182)

    $default	reduce using rule 182 (statement)



state 136

    statement  ->  jump_statement .   (rule 183)

    $default	reduce using rule 183 (statement)



state 137

    init_declarator  ->  declarator .   (rule 86)
    init_declarator  ->  declarator . @1 '=' initializer   (rule 88)

    $default	reduce using rule 86 (init_declarator)

    @1  	go to state 75



state 138

    declaration_list  ->  declaration_list declaration .   (rule 192)

    $default	reduce using rule 192 (declaration_list)



state 139

    function_definition  ->  declarator declaration_list compound_statement .   (rule 217)

    $default	reduce using rule 217 (function_definition)



state 140

    identifier_list  ->  IDENTIFIER .   (rule 157)

    $default	reduce using rule 157 (identifier_list)



state 141

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 143)

    $default	reduce using rule 143 (direct_declarator)



state 142

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 154)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 155)
    parameter_declaration  ->  declaration_specifiers .   (rule 156)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 233
    '[' 	shift, and go to state 234
    '*' 	shift, and go to state 25

    $default	reduce using rule 156 (parameter_declaration)

    declarator	go to state 235
    direct_declarator	go to state 36
    pointer	go to state 236
    abstract_declarator	go to state 237
    direct_abstract_declarator	go to state 238



state 143

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 141)

    ')' 	shift, and go to state 239



state 144

    parameter_type_list  ->  parameter_list .   (rule 150)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 151)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 153)

    ',' 	shift, and go to state 240

    $default	reduce using rule 150 (parameter_type_list)



state 145

    parameter_list  ->  parameter_declaration .   (rule 152)

    $default	reduce using rule 152 (parameter_list)



state 146

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 142)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 158)

    ')' 	shift, and go to state 241
    ',' 	shift, and go to state 242



state 147

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 148

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 140)

    $default	reduce using rule 140 (direct_declarator)



state 149

    cast_expression  ->  unary_expression .   (rule 28)

    $default	reduce using rule 28 (cast_expression)



state 150

    constant_expression  ->  conditional_expression .   (rule 75)

    $default	reduce using rule 75 (constant_expression)



state 151

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 139)

    ']' 	shift, and go to state 243



state 152

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . '}'   (rule 126)
    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . ',' '}'   (rule 127)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 130)

    ',' 	shift, and go to state 244
    '}' 	shift, and go to state 245



state 153

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 132)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 246



state 154

    enum_specifier  ->  ENUM '{' enumerator_list ',' . '}'   (rule 125)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 130)

    IDENTIFIER	shift, and go to state 67
    '}' 	shift, and go to state 247

    enumerator	go to state 248



state 155

    enum_specifier  ->  ENUM '{' enumerator_list '}' .   (rule 124)

    $default	reduce using rule 124 (enum_specifier)



state 156

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 85)

    $default	reduce using rule 85 (init_declarator_list)



state 157

    init_declarator  ->  declarator @1 '=' . initializer   (rule 88)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    '{' 	shift, and go to state 249

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 250
    initializer	go to state 251



state 158

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 215)

    $default	reduce using rule 215 (function_definition)



state 159

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list . '}'   (rule 107)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 113)

    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '}' 	shift, and go to state 252

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration	go to state 162
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 160

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 115)

    $default	reduce using rule 115 (specifier_qualifier_list)



state 161

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list '}' .   (rule 108)

    $default	reduce using rule 108 (struct_or_union_specifier)



state 162

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 113)

    $default	reduce using rule 113 (struct_declaration_list)



state 163

    struct_declarator  ->  ':' . constant_expression   (rule 122)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 253



state 164

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 114)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 120)

    ',' 	shift, and go to state 254
    ';' 	shift, and go to state 255



state 165

    struct_declarator_list  ->  struct_declarator .   (rule 119)

    $default	reduce using rule 119 (struct_declarator_list)



state 166

    struct_declarator  ->  declarator .   (rule 121)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 123)

    ':' 	shift, and go to state 256

    $default	reduce using rule 121 (struct_declarator)



state 167

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 117)

    $default	reduce using rule 117 (specifier_qualifier_list)



state 168

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 184)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 257
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 169

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 21)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 4
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 186
    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 187
    enum_specifier	go to state 33
    type_qualifier	go to state 83
    type_name	go to state 258



state 170

    unary_expression  ->  SIZEOF unary_expression .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 171

    primary_expression  ->  '(' . expression ')'   (rule 4)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 186



state 172

    unary_expression  ->  INC_OP unary_expression .   (rule 17)

    $default	reduce using rule 17 (unary_expression)



state 173

    unary_expression  ->  DEC_OP unary_expression .   (rule 18)

    $default	reduce using rule 18 (unary_expression)



state 174

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 185)

    ':' 	shift, and go to state 259



state 175

    labeled_statement  ->  DEFAULT ':' . statement   (rule 186)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 260
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 176

    selection_statement  ->  IF '(' . expression ')' statement   (rule 197)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 198)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 261



state 177

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 199)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 262



state 178

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 200)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 263



state 179

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 201)

    WHILE	shift, and go to state 264



state 180

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 202)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 203)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    expression_statement	go to state 265



state 181

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 204)

    ';' 	shift, and go to state 266



state 182

    jump_statement  ->  CONTINUE ';' .   (rule 205)

    $default	reduce using rule 205 (jump_statement)



state 183

    jump_statement  ->  BREAK ';' .   (rule 206)

    $default	reduce using rule 206 (jump_statement)



state 184

    jump_statement  ->  RETURN ';' .   (rule 207)

    $default	reduce using rule 207 (jump_statement)



state 185

    expression  ->  expression . ',' assignment_expression   (rule 74)
    jump_statement  ->  RETURN expression . ';'   (rule 208)

    ',' 	shift, and go to state 227
    ';' 	shift, and go to state 267



state 186

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 74)

    ')' 	shift, and go to state 268
    ',' 	shift, and go to state 227



state 187

    type_name  ->  specifier_qualifier_list .   (rule 159)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 160)

    '(' 	shift, and go to state 269
    '[' 	shift, and go to state 234
    '*' 	shift, and go to state 25

    $default	reduce using rule 159 (type_name)

    pointer	go to state 270
    abstract_declarator	go to state 271
    direct_abstract_declarator	go to state 238



state 188

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 29)

    ')' 	shift, and go to state 272



state 189

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 11)

    IDENTIFIER	shift, and go to state 273



state 190

    postfix_expression  ->  postfix_expression INC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 191

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 192

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 8)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 9)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ')' 	shift, and go to state 274
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    argument_expression_list	go to state 275
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 276



state 193

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 7)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 277



state 194

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 10)

    IDENTIFIER	shift, and go to state 278



state 195

    assignment_operator  ->  MUL_ASSIGN .   (rule 63)

    $default	reduce using rule 63 (assignment_operator)



state 196

    assignment_operator  ->  DIV_ASSIGN .   (rule 64)

    $default	reduce using rule 64 (assignment_operator)



state 197

    assignment_operator  ->  MOD_ASSIGN .   (rule 65)

    $default	reduce using rule 65 (assignment_operator)



state 198

    assignment_operator  ->  ADD_ASSIGN .   (rule 66)

    $default	reduce using rule 66 (assignment_operator)



state 199

    assignment_operator  ->  SUB_ASSIGN .   (rule 67)

    $default	reduce using rule 67 (assignment_operator)



state 200

    assignment_operator  ->  LEFT_ASSIGN .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 201

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 202

    assignment_operator  ->  AND_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 203

    assignment_operator  ->  XOR_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 204

    assignment_operator  ->  OR_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 205

    assignment_operator  ->  '=' .   (rule 62)

    $default	reduce using rule 62 (assignment_operator)



state 206

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 61)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 279



state 207

    unary_expression  ->  unary_operator cast_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 208

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 280



state 209

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 32)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 281



state 210

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 33)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 282



state 211

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 35)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 283



state 212

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 36)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 284



state 213

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 38)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 285



state 214

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 39)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 286



state 215

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 43)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 287



state 216

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 44)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 288



state 217

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 41)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 289



state 218

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 42)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 290



state 219

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 46)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 291



state 220

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 47)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 292



state 221

    and_expression  ->  and_expression '&' . equality_expression   (rule 49)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 293



state 222

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 51)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 294



state 223

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 53)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 295



state 224

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 55)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 296



state 225

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 57)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 297



state 226

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 59)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 298



state 227

    expression  ->  expression ',' . assignment_expression   (rule 74)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 299



state 228

    expression_statement  ->  expression ';' .   (rule 196)

    $default	reduce using rule 196 (expression_statement)



state 229

    compound_statement  ->  '{' declaration_list '}' .   (rule 189)

    $default	reduce using rule 189 (compound_statement)



state 230

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 190)
    statement_list  ->  statement_list . statement   (rule 194)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56
    '}' 	shift, and go to state 300

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 232
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 231

    compound_statement  ->  '{' statement_list '}' .   (rule 188)

    $default	reduce using rule 188 (compound_statement)



state 232

    statement_list  ->  statement_list statement .   (rule 194)

    $default	reduce using rule 194 (statement_list)



state 233

    direct_declarator  ->  '(' . declarator ')'   (rule 138)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 164)
    direct_abstract_declarator  ->  '(' . ')'   (rule 169)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 170)

    INLINE	shift, and go to state 2
    IDENTIFIER	shift, and go to state 3
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '(' 	shift, and go to state 233
    ')' 	shift, and go to state 301
    '[' 	shift, and go to state 234
    '*' 	shift, and go to state 25

    declaration_specifiers	go to state 142
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 236
    parameter_type_list	go to state 302
    parameter_list	go to state 144
    parameter_declaration	go to state 145
    abstract_declarator	go to state 303
    direct_abstract_declarator	go to state 238



state 234

    direct_abstract_declarator  ->  '[' . ']'   (rule 165)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 166)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ']' 	shift, and go to state 304
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 305



state 235

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 154)

    $default	reduce using rule 154 (parameter_declaration)



state 236

    declarator  ->  pointer . direct_declarator   (rule 135)
    abstract_declarator  ->  pointer .   (rule 161)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 163)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 233
    '[' 	shift, and go to state 234

    $default	reduce using rule 161 (abstract_declarator)

    direct_declarator	go to state 63
    direct_abstract_declarator	go to state 306



state 237

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 155)

    $default	reduce using rule 155 (parameter_declaration)



state 238

    abstract_declarator  ->  direct_abstract_declarator .   (rule 162)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 167)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 168)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 171)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 172)

    '(' 	shift, and go to state 307
    '[' 	shift, and go to state 308

    $default	reduce using rule 162 (abstract_declarator)



state 239

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 141)

    $default	reduce using rule 141 (direct_declarator)



state 240

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 151)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 153)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    ELLIPSIS	shift, and go to state 309

    declaration_specifiers	go to state 142
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_declaration	go to state 310



state 241

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 142)

    $default	reduce using rule 142 (direct_declarator)



state 242

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 158)

    IDENTIFIER	shift, and go to state 311



state 243

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 139)

    $default	reduce using rule 139 (direct_declarator)



state 244

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list ',' . '}'   (rule 127)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 130)

    IDENTIFIER	shift, and go to state 67
    '}' 	shift, and go to state 312

    enumerator	go to state 248



state 245

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list '}' .   (rule 126)

    $default	reduce using rule 126 (enum_specifier)



state 246

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 132)

    $default	reduce using rule 132 (enumerator)



state 247

    enum_specifier  ->  ENUM '{' enumerator_list ',' '}' .   (rule 125)

    $default	reduce using rule 125 (enum_specifier)



state 248

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 130)

    $default	reduce using rule 130 (enumerator_list)



state 249

    initializer  ->  '{' . initializer_list '}'   (rule 174)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 175)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    '{' 	shift, and go to state 249

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 250
    initializer	go to state 313
    initializer_list	go to state 314



state 250

    initializer  ->  assignment_expression .   (rule 173)

    $default	reduce using rule 173 (initializer)



state 251

    init_declarator  ->  declarator @1 '=' initializer .   (rule 88)

    $default	reduce using rule 88 (init_declarator)



state 252

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list '}' .   (rule 107)

    $default	reduce using rule 107 (struct_or_union_specifier)



state 253

    struct_declarator  ->  ':' constant_expression .   (rule 122)

    $default	reduce using rule 122 (struct_declarator)



state 254

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 120)

    IDENTIFIER	shift, and go to state 3
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 163

    struct_declarator	go to state 315
    declarator	go to state 166
    direct_declarator	go to state 36
    pointer	go to state 37



state 255

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 114)

    $default	reduce using rule 114 (struct_declaration)



state 256

    struct_declarator  ->  declarator ':' . constant_expression   (rule 123)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 316



state 257

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 184)

    $default	reduce using rule 184 (labeled_statement)



state 258

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 21)

    ')' 	shift, and go to state 317



state 259

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 185)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 318
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 260

    labeled_statement  ->  DEFAULT ':' statement .   (rule 186)

    $default	reduce using rule 186 (labeled_statement)



state 261

    expression  ->  expression . ',' assignment_expression   (rule 74)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 197)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 198)

    ')' 	shift, and go to state 319
    ',' 	shift, and go to state 227



state 262

    expression  ->  expression . ',' assignment_expression   (rule 74)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 199)

    ')' 	shift, and go to state 320
    ',' 	shift, and go to state 227



state 263

    expression  ->  expression . ',' assignment_expression   (rule 74)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 200)

    ')' 	shift, and go to state 321
    ',' 	shift, and go to state 227



state 264

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 201)

    '(' 	shift, and go to state 322



state 265

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 202)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 203)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    expression_statement	go to state 323



state 266

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 204)

    $default	reduce using rule 204 (jump_statement)



state 267

    jump_statement  ->  RETURN expression ';' .   (rule 208)

    $default	reduce using rule 208 (jump_statement)



state 268

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 269

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 164)
    direct_abstract_declarator  ->  '(' . ')'   (rule 169)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 170)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    '(' 	shift, and go to state 269
    ')' 	shift, and go to state 301
    '[' 	shift, and go to state 234
    '*' 	shift, and go to state 25

    declaration_specifiers	go to state 142
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    pointer	go to state 270
    parameter_type_list	go to state 302
    parameter_list	go to state 144
    parameter_declaration	go to state 145
    abstract_declarator	go to state 303
    direct_abstract_declarator	go to state 238



state 270

    abstract_declarator  ->  pointer .   (rule 161)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 163)

    '(' 	shift, and go to state 269
    '[' 	shift, and go to state 234

    $default	reduce using rule 161 (abstract_declarator)

    direct_abstract_declarator	go to state 306



state 271

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 160)

    $default	reduce using rule 160 (type_name)



state 272

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 29)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 324



state 273

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 274

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 275

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 9)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 15)

    ')' 	shift, and go to state 325
    ',' 	shift, and go to state 326



state 276

    argument_expression_list  ->  assignment_expression .   (rule 14)

    $default	reduce using rule 14 (argument_expression_list)



state 277

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 7)
    expression  ->  expression . ',' assignment_expression   (rule 74)

    ']' 	shift, and go to state 327
    ',' 	shift, and go to state 227



state 278

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 279

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 61)

    $default	reduce using rule 61 (assignment_expression)



state 280

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 31)

    $default	reduce using rule 31 (multiplicative_expression)



state 281

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 32)

    $default	reduce using rule 32 (multiplicative_expression)



state 282

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 33)

    $default	reduce using rule 33 (multiplicative_expression)



state 283

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 32)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 33)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 35)

    '*' 	shift, and go to state 208
    '/' 	shift, and go to state 209
    '%' 	shift, and go to state 210

    $default	reduce using rule 35 (additive_expression)



state 284

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 32)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 33)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 36)

    '*' 	shift, and go to state 208
    '/' 	shift, and go to state 209
    '%' 	shift, and go to state 210

    $default	reduce using rule 36 (additive_expression)



state 285

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 35)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 36)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 38)

    '+' 	shift, and go to state 211
    '-' 	shift, and go to state 212

    $default	reduce using rule 38 (shift_expression)



state 286

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 35)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 36)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 39)

    '+' 	shift, and go to state 211
    '-' 	shift, and go to state 212

    $default	reduce using rule 39 (shift_expression)



state 287

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 43)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 43 (relational_expression)



state 288

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 44)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 44 (relational_expression)



state 289

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 41)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 41 (relational_expression)



state 290

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 42)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 42 (relational_expression)



state 291

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 42)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 43)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 44)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 46)

    LE_OP	shift, and go to state 215
    GE_OP	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218

    $default	reduce using rule 46 (equality_expression)



state 292

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 42)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 43)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 44)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 47)

    LE_OP	shift, and go to state 215
    GE_OP	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218

    $default	reduce using rule 47 (equality_expression)



state 293

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 46)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 47)
    and_expression  ->  and_expression '&' equality_expression .   (rule 49)

    EQ_OP	shift, and go to state 219
    NE_OP	shift, and go to state 220

    $default	reduce using rule 49 (and_expression)



state 294

    and_expression  ->  and_expression . '&' equality_expression   (rule 49)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 51)

    '&' 	shift, and go to state 221

    $default	reduce using rule 51 (exclusive_or_expression)



state 295

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 51)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 53)

    '^' 	shift, and go to state 222

    $default	reduce using rule 53 (inclusive_or_expression)



state 296

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 53)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 55)

    '|' 	shift, and go to state 223

    $default	reduce using rule 55 (logical_and_expression)



state 297

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 55)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 57)

    AND_OP	shift, and go to state 224

    $default	reduce using rule 57 (logical_or_expression)



state 298

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 59)
    expression  ->  expression . ',' assignment_expression   (rule 74)

    ',' 	shift, and go to state 227
    ':' 	shift, and go to state 328



state 299

    expression  ->  expression ',' assignment_expression .   (rule 74)

    $default	reduce using rule 74 (expression)



state 300

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 190)

    $default	reduce using rule 190 (compound_statement)



state 301

    direct_abstract_declarator  ->  '(' ')' .   (rule 169)

    $default	reduce using rule 169 (direct_abstract_declarator)



state 302

    direct_abstract_declarator  ->  '(' parameter_type_list . ')'   (rule 170)

    ')' 	shift, and go to state 329



state 303

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 164)

    ')' 	shift, and go to state 330



state 304

    direct_abstract_declarator  ->  '[' ']' .   (rule 165)

    $default	reduce using rule 165 (direct_abstract_declarator)



state 305

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 166)

    ']' 	shift, and go to state 331



state 306

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 163)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 167)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 168)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 171)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 172)

    '(' 	shift, and go to state 307
    '[' 	shift, and go to state 308

    $default	reduce using rule 163 (abstract_declarator)



state 307

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 171)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_type_list ')'   (rule 172)

    INLINE	shift, and go to state 2
    TYPE_NAME	shift, and go to state 4
    TYPEDEF	shift, and go to state 5
    EXTERN	shift, and go to state 6
    STATIC	shift, and go to state 7
    AUTO	shift, and go to state 8
    REGISTER	shift, and go to state 9
    CHAR	shift, and go to state 10
    SHORT	shift, and go to state 11
    INT 	shift, and go to state 12
    LONG	shift, and go to state 13
    SIGNED	shift, and go to state 14
    UNSIGNED	shift, and go to state 15
    FLOAT	shift, and go to state 16
    DOUBLE	shift, and go to state 17
    CONST	shift, and go to state 18
    VOLATILE	shift, and go to state 19
    VOID	shift, and go to state 20
    STRUCT	shift, and go to state 21
    UNION	shift, and go to state 22
    ENUM	shift, and go to state 23
    ')' 	shift, and go to state 332

    declaration_specifiers	go to state 142
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 333
    parameter_list	go to state 144
    parameter_declaration	go to state 145



state 308

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 167)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . constant_expression ']'   (rule 168)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ']' 	shift, and go to state 334
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 150
    constant_expression	go to state 335



state 309

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 151)

    $default	reduce using rule 151 (parameter_type_list)



state 310

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 153)

    $default	reduce using rule 153 (parameter_list)



state 311

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 158)

    $default	reduce using rule 158 (identifier_list)



state 312

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list ',' '}' .   (rule 127)

    $default	reduce using rule 127 (enum_specifier)



state 313

    initializer_list  ->  initializer .   (rule 176)

    $default	reduce using rule 176 (initializer_list)



state 314

    initializer  ->  '{' initializer_list . '}'   (rule 174)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 175)
    initializer_list  ->  initializer_list . ',' initializer   (rule 177)

    ',' 	shift, and go to state 336
    '}' 	shift, and go to state 337



state 315

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 120)

    $default	reduce using rule 120 (struct_declarator_list)



state 316

    struct_declarator  ->  declarator ':' constant_expression .   (rule 123)

    $default	reduce using rule 123 (struct_declarator)



state 317

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 21)

    $default	reduce using rule 21 (unary_expression)



state 318

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 185)

    $default	reduce using rule 185 (labeled_statement)



state 319

    selection_statement  ->  IF '(' expression ')' . statement   (rule 197)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 198)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 338
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 320

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 199)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 339
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 321

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 200)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 340
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 322

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 201)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 341



state 323

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 202)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 203)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ')' 	shift, and go to state 342
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 343



state 324

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 29)

    $default	reduce using rule 29 (cast_expression)



state 325

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 326

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 15)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 344



state 327

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 328

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 59)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 149
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 345



state 329

    direct_abstract_declarator  ->  '(' parameter_type_list ')' .   (rule 170)

    $default	reduce using rule 170 (direct_abstract_declarator)



state 330

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 164)

    $default	reduce using rule 164 (direct_abstract_declarator)



state 331

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 166)

    $default	reduce using rule 166 (direct_abstract_declarator)



state 332

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 171)

    $default	reduce using rule 171 (direct_abstract_declarator)



state 333

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list . ')'   (rule 172)

    ')' 	shift, and go to state 346



state 334

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 167)

    $default	reduce using rule 167 (direct_abstract_declarator)



state 335

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression . ']'   (rule 168)

    ']' 	shift, and go to state 347



state 336

    initializer  ->  '{' initializer_list ',' . '}'   (rule 175)
    initializer_list  ->  initializer_list ',' . initializer   (rule 177)

    IDENTIFIER	shift, and go to state 147
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    '{' 	shift, and go to state 249
    '}' 	shift, and go to state 348

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 250
    initializer	go to state 349



state 337

    initializer  ->  '{' initializer_list '}' .   (rule 174)

    $default	reduce using rule 174 (initializer)



state 338

    selection_statement  ->  IF '(' expression ')' statement .   (rule 197)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 198)

    ELSE	shift, and go to state 350

    ELSE	[reduce using rule 197 (selection_statement)]
    $default	reduce using rule 197 (selection_statement)



state 339

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 199)

    $default	reduce using rule 199 (selection_statement)



state 340

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 200)

    $default	reduce using rule 200 (iteration_statement)



state 341

    expression  ->  expression . ',' assignment_expression   (rule 74)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 201)

    ')' 	shift, and go to state 351
    ',' 	shift, and go to state 227



state 342

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 202)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 352
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 343

    expression  ->  expression . ',' assignment_expression   (rule 74)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 203)

    ')' 	shift, and go to state 353
    ',' 	shift, and go to state 227



state 344

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 15)

    $default	reduce using rule 15 (argument_expression_list)



state 345

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 59)

    $default	reduce using rule 59 (conditional_expression)



state 346

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list ')' .   (rule 172)

    $default	reduce using rule 172 (direct_abstract_declarator)



state 347

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression ']' .   (rule 168)

    $default	reduce using rule 168 (direct_abstract_declarator)



state 348

    initializer  ->  '{' initializer_list ',' '}' .   (rule 175)

    $default	reduce using rule 175 (initializer)



state 349

    initializer_list  ->  initializer_list ',' initializer .   (rule 177)

    $default	reduce using rule 177 (initializer_list)



state 350

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 198)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 354
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 351

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 201)

    ';' 	shift, and go to state 355



state 352

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 202)

    $default	reduce using rule 202 (iteration_statement)



state 353

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 203)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '{' 	shift, and go to state 56

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 356
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 354

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 198)

    $default	reduce using rule 198 (selection_statement)



state 355

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 201)

    $default	reduce using rule 201 (iteration_statement)



state 356

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 203)

    $default	reduce using rule 203 (iteration_statement)



state 357

    $   	go to state 358



state 358

    $default	accept
