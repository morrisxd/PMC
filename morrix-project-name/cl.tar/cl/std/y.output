

Terminals which are not used:

   LINE
   FILENAME


State 334 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> STRING_LITERAL
rule 4    primary_expression -> '(' expression ')'
rule 5    preprocessor_include_header_file -> INCLUDE_FLAG
rule 6    postfix_expression -> primary_expression
rule 7    postfix_expression -> postfix_expression '[' expression ']'
rule 8    postfix_expression -> postfix_expression '(' ')'
rule 9    postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 10   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 11   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 12   postfix_expression -> postfix_expression INC_OP
rule 13   postfix_expression -> postfix_expression DEC_OP
rule 14   argument_expression_list -> assignment_expression
rule 15   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 16   unary_expression -> postfix_expression
rule 17   unary_expression -> INC_OP unary_expression
rule 18   unary_expression -> DEC_OP unary_expression
rule 19   unary_expression -> unary_operator cast_expression
rule 20   unary_expression -> SIZEOF unary_expression
rule 21   unary_expression -> SIZEOF '(' type_name ')'
rule 22   unary_operator -> '&'
rule 23   unary_operator -> '*'
rule 24   unary_operator -> '+'
rule 25   unary_operator -> '-'
rule 26   unary_operator -> '~'
rule 27   unary_operator -> '!'
rule 28   cast_expression -> unary_expression
rule 29   cast_expression -> '(' type_name ')' cast_expression
rule 30   multiplicative_expression -> cast_expression
rule 31   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 32   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 33   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 34   additive_expression -> multiplicative_expression
rule 35   additive_expression -> additive_expression '+' multiplicative_expression
rule 36   additive_expression -> additive_expression '-' multiplicative_expression
rule 37   shift_expression -> additive_expression
rule 38   shift_expression -> shift_expression LEFT_OP additive_expression
rule 39   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 40   relational_expression -> shift_expression
rule 41   relational_expression -> relational_expression '<' shift_expression
rule 42   relational_expression -> relational_expression '>' shift_expression
rule 43   relational_expression -> relational_expression LE_OP shift_expression
rule 44   relational_expression -> relational_expression GE_OP shift_expression
rule 45   equality_expression -> relational_expression
rule 46   equality_expression -> equality_expression EQ_OP relational_expression
rule 47   equality_expression -> equality_expression NE_OP relational_expression
rule 48   and_expression -> equality_expression
rule 49   and_expression -> and_expression '&' equality_expression
rule 50   exclusive_or_expression -> and_expression
rule 51   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 52   inclusive_or_expression -> exclusive_or_expression
rule 53   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 54   logical_and_expression -> inclusive_or_expression
rule 55   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 56   logical_or_expression -> logical_and_expression
rule 57   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 58   conditional_expression -> logical_or_expression
rule 59   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 60   assignment_expression -> conditional_expression
rule 61   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 62   assignment_operator -> '='
rule 63   assignment_operator -> MUL_ASSIGN
rule 64   assignment_operator -> DIV_ASSIGN
rule 65   assignment_operator -> MOD_ASSIGN
rule 66   assignment_operator -> ADD_ASSIGN
rule 67   assignment_operator -> SUB_ASSIGN
rule 68   assignment_operator -> LEFT_ASSIGN
rule 69   assignment_operator -> RIGHT_ASSIGN
rule 70   assignment_operator -> AND_ASSIGN
rule 71   assignment_operator -> XOR_ASSIGN
rule 72   assignment_operator -> OR_ASSIGN
rule 73   expression -> assignment_expression
rule 74   expression -> expression ',' assignment_expression
rule 75   constant_expression -> conditional_expression
rule 76   declaration -> declaration_specifiers ';'
rule 77   declaration -> declaration_specifiers init_declarator_list ';'
rule 78   declaration_specifiers -> storage_class_specifier
rule 79   declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 80   declaration_specifiers -> type_specifier
rule 81   declaration_specifiers -> type_specifier declaration_specifiers
rule 82   declaration_specifiers -> type_qualifier
rule 83   declaration_specifiers -> type_qualifier declaration_specifiers
rule 84   init_declarator_list -> init_declarator
rule 85   init_declarator_list -> init_declarator_list ',' init_declarator
rule 86   init_declarator -> declarator
rule 87   @1 ->		/* empty */
rule 88   init_declarator -> declarator @1 '=' initializer
rule 89   storage_class_specifier -> TYPEDEF
rule 90   storage_class_specifier -> EXTERN
rule 91   storage_class_specifier -> STATIC
rule 92   storage_class_specifier -> AUTO
rule 93   storage_class_specifier -> REGISTER
rule 94   type_specifier -> VOID
rule 95   type_specifier -> CHAR
rule 96   type_specifier -> SHORT
rule 97   type_specifier -> INT
rule 98   type_specifier -> LONG
rule 99   type_specifier -> FLOAT
rule 100  type_specifier -> DOUBLE
rule 101  type_specifier -> SIGNED
rule 102  type_specifier -> UNSIGNED
rule 103  type_specifier -> struct_or_union_specifier
rule 104  type_specifier -> enum_specifier
rule 105  type_specifier -> TYPE_NAME
rule 106  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' struct_declaration_list '}'
rule 107  struct_or_union_specifier -> struct_or_union '{' struct_declaration_list '}'
rule 108  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 109  struct_or_union -> STRUCT
rule 110  struct_or_union -> UNION
rule 111  struct_declaration_list -> struct_declaration
rule 112  struct_declaration_list -> struct_declaration_list struct_declaration
rule 113  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 114  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 115  specifier_qualifier_list -> type_specifier
rule 116  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 117  specifier_qualifier_list -> type_qualifier
rule 118  struct_declarator_list -> struct_declarator
rule 119  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 120  struct_declarator -> declarator
rule 121  struct_declarator -> ':' constant_expression
rule 122  struct_declarator -> declarator ':' constant_expression
rule 123  enum_specifier -> ENUM '{' enumerator_list '}'
rule 124  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list '}'
rule 125  enum_specifier -> ENUM IDENTIFIER
rule 126  enumerator_list -> enumerator
rule 127  enumerator_list -> enumerator_list ',' enumerator
rule 128  enumerator -> IDENTIFIER
rule 129  enumerator -> IDENTIFIER '=' constant_expression
rule 130  type_qualifier -> CONST
rule 131  type_qualifier -> VOLATILE
rule 132  declarator -> pointer direct_declarator
rule 133  declarator -> direct_declarator
rule 134  direct_declarator -> IDENTIFIER
rule 135  direct_declarator -> '(' declarator ')'
rule 136  direct_declarator -> direct_declarator '[' constant_expression ']'
rule 137  direct_declarator -> direct_declarator '[' ']'
rule 138  direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 139  direct_declarator -> direct_declarator '(' identifier_list ')'
rule 140  direct_declarator -> direct_declarator '(' ')'
rule 141  pointer -> '*'
rule 142  pointer -> '*' type_qualifier_list
rule 143  pointer -> '*' pointer
rule 144  pointer -> '*' type_qualifier_list pointer
rule 145  type_qualifier_list -> type_qualifier
rule 146  type_qualifier_list -> type_qualifier_list type_qualifier
rule 147  parameter_type_list -> parameter_list
rule 148  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 149  parameter_list -> parameter_declaration
rule 150  parameter_list -> parameter_list ',' parameter_declaration
rule 151  parameter_declaration -> declaration_specifiers declarator
rule 152  parameter_declaration -> declaration_specifiers abstract_declarator
rule 153  parameter_declaration -> declaration_specifiers
rule 154  identifier_list -> IDENTIFIER
rule 155  identifier_list -> identifier_list ',' IDENTIFIER
rule 156  type_name -> specifier_qualifier_list
rule 157  type_name -> specifier_qualifier_list abstract_declarator
rule 158  abstract_declarator -> pointer
rule 159  abstract_declarator -> direct_abstract_declarator
rule 160  abstract_declarator -> pointer direct_abstract_declarator
rule 161  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 162  direct_abstract_declarator -> '[' ']'
rule 163  direct_abstract_declarator -> '[' constant_expression ']'
rule 164  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 165  direct_abstract_declarator -> direct_abstract_declarator '[' constant_expression ']'
rule 166  direct_abstract_declarator -> '(' ')'
rule 167  direct_abstract_declarator -> '(' parameter_type_list ')'
rule 168  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 169  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_type_list ')'
rule 170  initializer -> assignment_expression
rule 171  initializer -> '{' initializer_list '}'
rule 172  initializer -> '{' initializer_list ',' '}'
rule 173  initializer_list -> initializer
rule 174  initializer_list -> initializer_list ',' initializer
rule 175  statement -> labeled_statement
rule 176  statement -> compound_statement
rule 177  statement -> expression_statement
rule 178  statement -> selection_statement
rule 179  statement -> iteration_statement
rule 180  statement -> jump_statement
rule 181  labeled_statement -> IDENTIFIER ':' statement
rule 182  labeled_statement -> CASE constant_expression ':' statement
rule 183  labeled_statement -> DEFAULT ':' statement
rule 184  compound_statement -> '{' '}'
rule 185  compound_statement -> '{' statement_list '}'
rule 186  compound_statement -> '{' declaration_list '}'
rule 187  compound_statement -> '{' declaration_list statement_list '}'
rule 188  declaration_list -> declaration
rule 189  declaration_list -> declaration_list declaration
rule 190  statement_list -> statement
rule 191  statement_list -> statement_list statement
rule 192  expression_statement -> ';'
rule 193  expression_statement -> expression ';'
rule 194  selection_statement -> IF '(' expression ')' statement
rule 195  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 196  selection_statement -> SWITCH '(' expression ')' statement
rule 197  iteration_statement -> WHILE '(' expression ')' statement
rule 198  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 199  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 200  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 201  jump_statement -> GOTO IDENTIFIER ';'
rule 202  jump_statement -> CONTINUE ';'
rule 203  jump_statement -> BREAK ';'
rule 204  jump_statement -> RETURN ';'
rule 205  jump_statement -> RETURN expression ';'
rule 206  translation_unit -> external_declaration
rule 207  translation_unit -> translation_unit external_declaration
rule 208  translation_unit -> preprocessor_include_header_file
rule 209  translation_unit -> translation_unit preprocessor_include_header_file
rule 210  external_declaration -> function_definition
rule 211  external_declaration -> declaration
rule 212  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 213  function_definition -> declaration_specifiers declarator compound_statement
rule 214  function_definition -> declarator declaration_list compound_statement
rule 215  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 27
'%' (37) 33
'&' (38) 22 49
'(' (40) 4 8 9 21 29 135 138 139 140 161 166 167 168 169 194 195 196
    197 198 199 200
')' (41) 4 8 9 21 29 135 138 139 140 161 166 167 168 169 194 195 196
    197 198 199 200
'*' (42) 23 31 141 142 143 144
'+' (43) 24 35
',' (44) 15 74 85 119 127 148 150 155 172 174
'-' (45) 25 36
'.' (46) 10
'/' (47) 32
':' (58) 59 121 122 181 182 183
';' (59) 76 77 113 192 193 198 201 202 203 204 205
'<' (60) 41
'=' (61) 62 88 129
'>' (62) 42
'?' (63) 59
'[' (91) 7 136 137 162 163 164 165
']' (93) 7 136 137 162 163 164 165
'^' (94) 51
'{' (123) 106 107 123 124 171 172 184 185 186 187
'|' (124) 53
'}' (125) 106 107 123 124 171 172 184 185 186 187
'~' (126) 26
error (256)
INCLUDE_FLAG (258) 5
LINE (259)
FILENAME (260)
IDENTIFIER (261) 1 10 11 106 108 124 125 128 129 134 154 155 181 201
CONSTANT (262) 2
STRING_LITERAL (263) 3
SIZEOF (264) 20 21
PTR_OP (265) 11
INC_OP (266) 12 17
DEC_OP (267) 13 18
LEFT_OP (268) 38
RIGHT_OP (269) 39
LE_OP (270) 43
GE_OP (271) 44
EQ_OP (272) 46
NE_OP (273) 47
AND_OP (274) 55
OR_OP (275) 57
MUL_ASSIGN (276) 63
DIV_ASSIGN (277) 64
MOD_ASSIGN (278) 65
ADD_ASSIGN (279) 66
SUB_ASSIGN (280) 67
LEFT_ASSIGN (281) 68
RIGHT_ASSIGN (282) 69
AND_ASSIGN (283) 70
XOR_ASSIGN (284) 71
OR_ASSIGN (285) 72
TYPE_NAME (286) 105
TYPEDEF (287) 89
EXTERN (288) 90
STATIC (289) 91
AUTO (290) 92
REGISTER (291) 93
CHAR (292) 95
SHORT (293) 96
INT (294) 97
LONG (295) 98
SIGNED (296) 101
UNSIGNED (297) 102
FLOAT (298) 99
DOUBLE (299) 100
CONST (300) 130
VOLATILE (301) 131
VOID (302) 94
STRUCT (303) 109
UNION (304) 110
ENUM (305) 123 124 125
ELLIPSIS (306) 148
CASE (307) 182
DEFAULT (308) 183
IF (309) 194 195
ELSE (310) 195
SWITCH (311) 196
WHILE (312) 197 198
DO (313) 198
FOR (314) 199 200
GOTO (315) 201
CONTINUE (316) 202
BREAK (317) 203
RETURN (318) 204 205

Nonterminals, with rules where they appear

primary_expression (88)
    on left: 1 2 3 4, on right: 6
preprocessor_include_header_file (89)
    on left: 5, on right: 208 209
postfix_expression (90)
    on left: 6 7 8 9 10 11 12 13, on right: 7 8 9 10 11 12 13 16
argument_expression_list (91)
    on left: 14 15, on right: 9 15
unary_expression (92)
    on left: 16 17 18 19 20 21, on right: 17 18 20 28 61
unary_operator (93)
    on left: 22 23 24 25 26 27, on right: 19
cast_expression (94)
    on left: 28 29, on right: 19 29 30 31 32 33
multiplicative_expression (95)
    on left: 30 31 32 33, on right: 31 32 33 34 35 36
additive_expression (96)
    on left: 34 35 36, on right: 35 36 37 38 39
shift_expression (97)
    on left: 37 38 39, on right: 38 39 40 41 42 43 44
relational_expression (98)
    on left: 40 41 42 43 44, on right: 41 42 43 44 45 46 47
equality_expression (99)
    on left: 45 46 47, on right: 46 47 48 49
and_expression (100)
    on left: 48 49, on right: 49 50 51
exclusive_or_expression (101)
    on left: 50 51, on right: 51 52 53
inclusive_or_expression (102)
    on left: 52 53, on right: 53 54 55
logical_and_expression (103)
    on left: 54 55, on right: 55 56 57
logical_or_expression (104)
    on left: 56 57, on right: 57 58 59
conditional_expression (105)
    on left: 58 59, on right: 59 60 75
assignment_expression (106)
    on left: 60 61, on right: 14 15 61 73 74 170
assignment_operator (107)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 61
expression (108)
    on left: 73 74, on right: 4 7 59 74 193 194 195 196 197 198 200
    205
constant_expression (109)
    on left: 75, on right: 121 122 129 136 163 165 182
declaration (110)
    on left: 76 77, on right: 188 189 211
declaration_specifiers (111)
    on left: 78 79 80 81 82 83, on right: 76 77 79 81 83 151 152 153
    212 213
init_declarator_list (112)
    on left: 84 85, on right: 77 85
init_declarator (113)
    on left: 86 88, on right: 84 85
@1 (114)
    on left: 87, on right: 88
storage_class_specifier (115)
    on left: 89 90 91 92 93, on right: 78 79
type_specifier (116)
    on left: 94 95 96 97 98 99 100 101 102 103 104 105,
    on right: 80 81 114 115
struct_or_union_specifier (117)
    on left: 106 107 108, on right: 103
struct_or_union (118)
    on left: 109 110, on right: 106 107 108
struct_declaration_list (119)
    on left: 111 112, on right: 106 107 112
struct_declaration (120)
    on left: 113, on right: 111 112
specifier_qualifier_list (121)
    on left: 114 115 116 117, on right: 113 114 116 156 157
struct_declarator_list (122)
    on left: 118 119, on right: 113 119
struct_declarator (123)
    on left: 120 121 122, on right: 118 119
enum_specifier (124)
    on left: 123 124 125, on right: 104
enumerator_list (125)
    on left: 126 127, on right: 123 124 127
enumerator (126)
    on left: 128 129, on right: 126 127
type_qualifier (127)
    on left: 130 131, on right: 82 83 116 117 145 146
declarator (128)
    on left: 132 133, on right: 86 88 120 122 135 151 212 213 214 215
direct_declarator (129)
    on left: 134 135 136 137 138 139 140, on right: 132 133 136 137
    138 139 140
pointer (130)
    on left: 141 142 143 144, on right: 132 143 144 158 160
type_qualifier_list (131)
    on left: 145 146, on right: 142 144 146
parameter_type_list (132)
    on left: 147 148, on right: 138 167 169
parameter_list (133)
    on left: 149 150, on right: 147 148 150
parameter_declaration (134)
    on left: 151 152 153, on right: 149 150
identifier_list (135)
    on left: 154 155, on right: 139 155
type_name (136)
    on left: 156 157, on right: 21 29
abstract_declarator (137)
    on left: 158 159 160, on right: 152 157 161
direct_abstract_declarator (138)
    on left: 161 162 163 164 165 166 167 168 169, on right: 159 160
    164 165 168 169
initializer (139)
    on left: 170 171 172, on right: 88 173 174
initializer_list (140)
    on left: 173 174, on right: 171 172 174
statement (141)
    on left: 175 176 177 178 179 180, on right: 181 182 183 190 191
    194 195 196 197 198 199 200
labeled_statement (142)
    on left: 181 182 183, on right: 175
compound_statement (143)
    on left: 184 185 186 187, on right: 176 212 213 214 215
declaration_list (144)
    on left: 188 189, on right: 186 187 189 212 214
statement_list (145)
    on left: 190 191, on right: 185 187 191
expression_statement (146)
    on left: 192 193, on right: 177 199 200
selection_statement (147)
    on left: 194 195 196, on right: 178
iteration_statement (148)
    on left: 197 198 199 200, on right: 179
jump_statement (149)
    on left: 201 202 203 204 205, on right: 180
translation_unit (150)
    on left: 206 207 208 209, on right: 207 209
external_declaration (151)
    on left: 210 211, on right: 206 207
function_definition (152)
    on left: 212 213 214 215, on right: 210


state 0

    INCLUDE_FLAG	shift, and go to state 1
    IDENTIFIER	shift, and go to state 2
    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24

    preprocessor_include_header_file	go to state 25
    declaration	go to state 26
    declaration_specifiers	go to state 27
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    declarator	go to state 34
    direct_declarator	go to state 35
    pointer	go to state 36
    translation_unit	go to state 37
    external_declaration	go to state 38
    function_definition	go to state 39



state 1

    preprocessor_include_header_file  ->  INCLUDE_FLAG .   (rule 5)

    $default	reduce using rule 5 (preprocessor_include_header_file)



state 2

    direct_declarator  ->  IDENTIFIER .   (rule 134)

    $default	reduce using rule 134 (direct_declarator)



state 3

    type_specifier  ->  TYPE_NAME .   (rule 105)

    $default	reduce using rule 105 (type_specifier)



state 4

    storage_class_specifier  ->  TYPEDEF .   (rule 89)

    $default	reduce using rule 89 (storage_class_specifier)



state 5

    storage_class_specifier  ->  EXTERN .   (rule 90)

    $default	reduce using rule 90 (storage_class_specifier)



state 6

    storage_class_specifier  ->  STATIC .   (rule 91)

    $default	reduce using rule 91 (storage_class_specifier)



state 7

    storage_class_specifier  ->  AUTO .   (rule 92)

    $default	reduce using rule 92 (storage_class_specifier)



state 8

    storage_class_specifier  ->  REGISTER .   (rule 93)

    $default	reduce using rule 93 (storage_class_specifier)



state 9

    type_specifier  ->  CHAR .   (rule 95)

    $default	reduce using rule 95 (type_specifier)



state 10

    type_specifier  ->  SHORT .   (rule 96)

    $default	reduce using rule 96 (type_specifier)



state 11

    type_specifier  ->  INT .   (rule 97)

    $default	reduce using rule 97 (type_specifier)



state 12

    type_specifier  ->  LONG .   (rule 98)

    $default	reduce using rule 98 (type_specifier)



state 13

    type_specifier  ->  SIGNED .   (rule 101)

    $default	reduce using rule 101 (type_specifier)



state 14

    type_specifier  ->  UNSIGNED .   (rule 102)

    $default	reduce using rule 102 (type_specifier)



state 15

    type_specifier  ->  FLOAT .   (rule 99)

    $default	reduce using rule 99 (type_specifier)



state 16

    type_specifier  ->  DOUBLE .   (rule 100)

    $default	reduce using rule 100 (type_specifier)



state 17

    type_qualifier  ->  CONST .   (rule 130)

    $default	reduce using rule 130 (type_qualifier)



state 18

    type_qualifier  ->  VOLATILE .   (rule 131)

    $default	reduce using rule 131 (type_qualifier)



state 19

    type_specifier  ->  VOID .   (rule 94)

    $default	reduce using rule 94 (type_specifier)



state 20

    struct_or_union  ->  STRUCT .   (rule 109)

    $default	reduce using rule 109 (struct_or_union)



state 21

    struct_or_union  ->  UNION .   (rule 110)

    $default	reduce using rule 110 (struct_or_union)



state 22

    enum_specifier  ->  ENUM . '{' enumerator_list '}'   (rule 123)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list '}'   (rule 124)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 125)

    IDENTIFIER	shift, and go to state 40
    '{' 	shift, and go to state 41



state 23

    direct_declarator  ->  '(' . declarator ')'   (rule 135)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24

    declarator	go to state 42
    direct_declarator	go to state 35
    pointer	go to state 36



state 24

    pointer  ->  '*' .   (rule 141)
    pointer  ->  '*' . type_qualifier_list   (rule 142)
    pointer  ->  '*' . pointer   (rule 143)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 144)

    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    '*' 	shift, and go to state 24

    $default	reduce using rule 141 (pointer)

    type_qualifier	go to state 43
    pointer	go to state 44
    type_qualifier_list	go to state 45



state 25

    translation_unit  ->  preprocessor_include_header_file .   (rule 208)

    $default	reduce using rule 208 (translation_unit)



state 26

    external_declaration  ->  declaration .   (rule 211)

    $default	reduce using rule 211 (external_declaration)



state 27

    declaration  ->  declaration_specifiers . ';'   (rule 76)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 77)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 212)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 213)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24
    ';' 	shift, and go to state 46

    init_declarator_list	go to state 47
    init_declarator	go to state 48
    declarator	go to state 49
    direct_declarator	go to state 35
    pointer	go to state 36



state 28

    declaration_specifiers  ->  storage_class_specifier .   (rule 78)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 79)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    $default	reduce using rule 78 (declaration_specifiers)

    declaration_specifiers	go to state 50
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33



state 29

    declaration_specifiers  ->  type_specifier .   (rule 80)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 81)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    $default	reduce using rule 80 (declaration_specifiers)

    declaration_specifiers	go to state 51
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33



state 30

    type_specifier  ->  struct_or_union_specifier .   (rule 103)

    $default	reduce using rule 103 (type_specifier)



state 31

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' struct_declaration_list '}'   (rule 106)
    struct_or_union_specifier  ->  struct_or_union . '{' struct_declaration_list '}'   (rule 107)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 108)

    IDENTIFIER	shift, and go to state 52
    '{' 	shift, and go to state 53



state 32

    type_specifier  ->  enum_specifier .   (rule 104)

    $default	reduce using rule 104 (type_specifier)



state 33

    declaration_specifiers  ->  type_qualifier .   (rule 82)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 83)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    $default	reduce using rule 82 (declaration_specifiers)

    declaration_specifiers	go to state 54
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33



state 34

    function_definition  ->  declarator . declaration_list compound_statement   (rule 214)
    function_definition  ->  declarator . compound_statement   (rule 215)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '{' 	shift, and go to state 55

    declaration	go to state 56
    declaration_specifiers	go to state 57
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    compound_statement	go to state 58
    declaration_list	go to state 59



state 35

    declarator  ->  direct_declarator .   (rule 133)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 136)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 137)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 138)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 139)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 140)

    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61

    $default	reduce using rule 133 (declarator)



state 36

    declarator  ->  pointer . direct_declarator   (rule 132)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23

    direct_declarator	go to state 62



state 37

    translation_unit  ->  translation_unit . external_declaration   (rule 207)
    translation_unit  ->  translation_unit . preprocessor_include_header_file   (rule 209)

    $   	go to state 353
    INCLUDE_FLAG	shift, and go to state 1
    IDENTIFIER	shift, and go to state 2
    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24

    preprocessor_include_header_file	go to state 63
    declaration	go to state 26
    declaration_specifiers	go to state 27
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    declarator	go to state 34
    direct_declarator	go to state 35
    pointer	go to state 36
    external_declaration	go to state 64
    function_definition	go to state 39



state 38

    translation_unit  ->  external_declaration .   (rule 206)

    $default	reduce using rule 206 (translation_unit)



state 39

    external_declaration  ->  function_definition .   (rule 210)

    $default	reduce using rule 210 (external_declaration)



state 40

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list '}'   (rule 124)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 125)

    '{' 	shift, and go to state 65

    $default	reduce using rule 125 (enum_specifier)



state 41

    enum_specifier  ->  ENUM '{' . enumerator_list '}'   (rule 123)

    IDENTIFIER	shift, and go to state 66

    enumerator_list	go to state 67
    enumerator	go to state 68



state 42

    direct_declarator  ->  '(' declarator . ')'   (rule 135)

    ')' 	shift, and go to state 69



state 43

    type_qualifier_list  ->  type_qualifier .   (rule 145)

    $default	reduce using rule 145 (type_qualifier_list)



state 44

    pointer  ->  '*' pointer .   (rule 143)

    $default	reduce using rule 143 (pointer)



state 45

    pointer  ->  '*' type_qualifier_list .   (rule 142)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 144)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 146)

    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    '*' 	shift, and go to state 24

    $default	reduce using rule 142 (pointer)

    type_qualifier	go to state 70
    pointer	go to state 71



state 46

    declaration  ->  declaration_specifiers ';' .   (rule 76)

    $default	reduce using rule 76 (declaration)



state 47

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 77)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 85)

    ',' 	shift, and go to state 72
    ';' 	shift, and go to state 73



state 48

    init_declarator_list  ->  init_declarator .   (rule 84)

    $default	reduce using rule 84 (init_declarator_list)



state 49

    init_declarator  ->  declarator .   (rule 86)
    init_declarator  ->  declarator . @1 '=' initializer   (rule 88)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 212)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 213)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '{' 	shift, and go to state 55

    $default	reduce using rule 86 (init_declarator)

    declaration	go to state 56
    declaration_specifiers	go to state 57
    @1  	go to state 74
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    compound_statement	go to state 75
    declaration_list	go to state 76



state 50

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 79)

    $default	reduce using rule 79 (declaration_specifiers)



state 51

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 81)

    $default	reduce using rule 81 (declaration_specifiers)



state 52

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' struct_declaration_list '}'   (rule 106)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 108)

    '{' 	shift, and go to state 77

    $default	reduce using rule 108 (struct_or_union_specifier)



state 53

    struct_or_union_specifier  ->  struct_or_union '{' . struct_declaration_list '}'   (rule 107)

    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    struct_declaration_list	go to state 79
    struct_declaration	go to state 80
    specifier_qualifier_list	go to state 81
    enum_specifier	go to state 32
    type_qualifier	go to state 82



state 54

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 83)

    $default	reduce using rule 83 (declaration_specifiers)



state 55

    compound_statement  ->  '{' . '}'   (rule 184)
    compound_statement  ->  '{' . statement_list '}'   (rule 185)
    compound_statement  ->  '{' . declaration_list '}'   (rule 186)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 187)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55
    '}' 	shift, and go to state 108

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    declaration	go to state 56
    declaration_specifiers	go to state 57
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    statement	go to state 127
    labeled_statement	go to state 128
    compound_statement	go to state 129
    declaration_list	go to state 130
    statement_list	go to state 131
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 56

    declaration_list  ->  declaration .   (rule 188)

    $default	reduce using rule 188 (declaration_list)



state 57

    declaration  ->  declaration_specifiers . ';'   (rule 76)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 77)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24
    ';' 	shift, and go to state 46

    init_declarator_list	go to state 47
    init_declarator	go to state 48
    declarator	go to state 136
    direct_declarator	go to state 35
    pointer	go to state 36



state 58

    function_definition  ->  declarator compound_statement .   (rule 215)

    $default	reduce using rule 215 (function_definition)



state 59

    declaration_list  ->  declaration_list . declaration   (rule 189)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 214)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '{' 	shift, and go to state 55

    declaration	go to state 137
    declaration_specifiers	go to state 57
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    compound_statement	go to state 138



state 60

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 138)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 139)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 140)

    IDENTIFIER	shift, and go to state 139
    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    ')' 	shift, and go to state 140

    declaration_specifiers	go to state 141
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    parameter_type_list	go to state 142
    parameter_list	go to state 143
    parameter_declaration	go to state 144
    identifier_list	go to state 145



state 61

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 136)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 137)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    ']' 	shift, and go to state 147
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 150



state 62

    declarator  ->  pointer direct_declarator .   (rule 132)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 136)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 137)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 138)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 139)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 140)

    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61

    $default	reduce using rule 132 (declarator)



state 63

    translation_unit  ->  translation_unit preprocessor_include_header_file .   (rule 209)

    $default	reduce using rule 209 (translation_unit)



state 64

    translation_unit  ->  translation_unit external_declaration .   (rule 207)

    $default	reduce using rule 207 (translation_unit)



state 65

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list '}'   (rule 124)

    IDENTIFIER	shift, and go to state 66

    enumerator_list	go to state 151
    enumerator	go to state 68



state 66

    enumerator  ->  IDENTIFIER .   (rule 128)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 129)

    '=' 	shift, and go to state 152

    $default	reduce using rule 128 (enumerator)



state 67

    enum_specifier  ->  ENUM '{' enumerator_list . '}'   (rule 123)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 127)

    ',' 	shift, and go to state 153
    '}' 	shift, and go to state 154



state 68

    enumerator_list  ->  enumerator .   (rule 126)

    $default	reduce using rule 126 (enumerator_list)



state 69

    direct_declarator  ->  '(' declarator ')' .   (rule 135)

    $default	reduce using rule 135 (direct_declarator)



state 70

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 146)

    $default	reduce using rule 146 (type_qualifier_list)



state 71

    pointer  ->  '*' type_qualifier_list pointer .   (rule 144)

    $default	reduce using rule 144 (pointer)



state 72

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 85)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24

    init_declarator	go to state 155
    declarator	go to state 136
    direct_declarator	go to state 35
    pointer	go to state 36



state 73

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 77)

    $default	reduce using rule 77 (declaration)



state 74

    init_declarator  ->  declarator @1 . '=' initializer   (rule 88)

    '=' 	shift, and go to state 156



state 75

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 213)

    $default	reduce using rule 213 (function_definition)



state 76

    declaration_list  ->  declaration_list . declaration   (rule 189)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 212)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '{' 	shift, and go to state 55

    declaration	go to state 137
    declaration_specifiers	go to state 57
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    compound_statement	go to state 157



state 77

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . struct_declaration_list '}'   (rule 106)

    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    struct_declaration_list	go to state 158
    struct_declaration	go to state 80
    specifier_qualifier_list	go to state 81
    enum_specifier	go to state 32
    type_qualifier	go to state 82



state 78

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 114)
    specifier_qualifier_list  ->  type_specifier .   (rule 115)

    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    $default	reduce using rule 115 (specifier_qualifier_list)

    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    specifier_qualifier_list	go to state 159
    enum_specifier	go to state 32
    type_qualifier	go to state 82



state 79

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list . '}'   (rule 107)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 112)

    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '}' 	shift, and go to state 160

    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    struct_declaration	go to state 161
    specifier_qualifier_list	go to state 81
    enum_specifier	go to state 32
    type_qualifier	go to state 82



state 80

    struct_declaration_list  ->  struct_declaration .   (rule 111)

    $default	reduce using rule 111 (struct_declaration_list)



state 81

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 113)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24
    ':' 	shift, and go to state 162

    struct_declarator_list	go to state 163
    struct_declarator	go to state 164
    declarator	go to state 165
    direct_declarator	go to state 35
    pointer	go to state 36



state 82

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 116)
    specifier_qualifier_list  ->  type_qualifier .   (rule 117)

    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22

    $default	reduce using rule 117 (specifier_qualifier_list)

    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    specifier_qualifier_list	go to state 166
    enum_specifier	go to state 32
    type_qualifier	go to state 82



state 83

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 181)

    ':' 	shift, and go to state 167

    $default	reduce using rule 1 (primary_expression)



state 84

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 85

    primary_expression  ->  STRING_LITERAL .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 86

    unary_expression  ->  SIZEOF . unary_expression   (rule 20)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 21)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 168
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 169
    unary_operator	go to state 112



state 87

    unary_expression  ->  INC_OP . unary_expression   (rule 17)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 170
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 171
    unary_operator	go to state 112



state 88

    unary_expression  ->  DEC_OP . unary_expression   (rule 18)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 170
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 172
    unary_operator	go to state 112



state 89

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 182)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 173



state 90

    labeled_statement  ->  DEFAULT . ':' statement   (rule 183)

    ':' 	shift, and go to state 174



state 91

    selection_statement  ->  IF . '(' expression ')' statement   (rule 194)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 195)

    '(' 	shift, and go to state 175



state 92

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 196)

    '(' 	shift, and go to state 176



state 93

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 197)

    '(' 	shift, and go to state 177



state 94

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 198)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 178
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 95

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 199)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 200)

    '(' 	shift, and go to state 179



state 96

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 201)

    IDENTIFIER	shift, and go to state 180



state 97

    jump_statement  ->  CONTINUE . ';'   (rule 202)

    ';' 	shift, and go to state 181



state 98

    jump_statement  ->  BREAK . ';'   (rule 203)

    ';' 	shift, and go to state 182



state 99

    jump_statement  ->  RETURN . ';'   (rule 204)
    jump_statement  ->  RETURN . expression ';'   (rule 205)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 183

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 184



state 100

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 29)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 185
    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    specifier_qualifier_list	go to state 186
    enum_specifier	go to state 32
    type_qualifier	go to state 82
    type_name	go to state 187



state 101

    unary_operator  ->  '&' .   (rule 22)

    $default	reduce using rule 22 (unary_operator)



state 102

    unary_operator  ->  '*' .   (rule 23)

    $default	reduce using rule 23 (unary_operator)



state 103

    unary_operator  ->  '+' .   (rule 24)

    $default	reduce using rule 24 (unary_operator)



state 104

    unary_operator  ->  '-' .   (rule 25)

    $default	reduce using rule 25 (unary_operator)



state 105

    unary_operator  ->  '~' .   (rule 26)

    $default	reduce using rule 26 (unary_operator)



state 106

    unary_operator  ->  '!' .   (rule 27)

    $default	reduce using rule 27 (unary_operator)



state 107

    expression_statement  ->  ';' .   (rule 192)

    $default	reduce using rule 192 (expression_statement)



state 108

    compound_statement  ->  '{' '}' .   (rule 184)

    $default	reduce using rule 184 (compound_statement)



state 109

    postfix_expression  ->  primary_expression .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 110

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 7)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 8)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 9)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 10)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 11)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 12)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 13)
    unary_expression  ->  postfix_expression .   (rule 16)

    PTR_OP	shift, and go to state 188
    INC_OP	shift, and go to state 189
    DEC_OP	shift, and go to state 190
    '(' 	shift, and go to state 191
    '[' 	shift, and go to state 192
    '.' 	shift, and go to state 193

    $default	reduce using rule 16 (unary_expression)



state 111

    cast_expression  ->  unary_expression .   (rule 28)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 61)

    MUL_ASSIGN	shift, and go to state 194
    DIV_ASSIGN	shift, and go to state 195
    MOD_ASSIGN	shift, and go to state 196
    ADD_ASSIGN	shift, and go to state 197
    SUB_ASSIGN	shift, and go to state 198
    LEFT_ASSIGN	shift, and go to state 199
    RIGHT_ASSIGN	shift, and go to state 200
    AND_ASSIGN	shift, and go to state 201
    XOR_ASSIGN	shift, and go to state 202
    OR_ASSIGN	shift, and go to state 203
    '=' 	shift, and go to state 204

    $default	reduce using rule 28 (cast_expression)

    assignment_operator	go to state 205



state 112

    unary_expression  ->  unary_operator . cast_expression   (rule 19)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 206



state 113

    multiplicative_expression  ->  cast_expression .   (rule 30)

    $default	reduce using rule 30 (multiplicative_expression)



state 114

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 32)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 33)
    additive_expression  ->  multiplicative_expression .   (rule 34)

    '*' 	shift, and go to state 207
    '/' 	shift, and go to state 208
    '%' 	shift, and go to state 209

    $default	reduce using rule 34 (additive_expression)



state 115

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 35)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 36)
    shift_expression  ->  additive_expression .   (rule 37)

    '+' 	shift, and go to state 210
    '-' 	shift, and go to state 211

    $default	reduce using rule 37 (shift_expression)



state 116

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  shift_expression .   (rule 40)

    LEFT_OP	shift, and go to state 212
    RIGHT_OP	shift, and go to state 213

    $default	reduce using rule 40 (relational_expression)



state 117

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 42)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 43)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 44)
    equality_expression  ->  relational_expression .   (rule 45)

    LE_OP	shift, and go to state 214
    GE_OP	shift, and go to state 215
    '<' 	shift, and go to state 216
    '>' 	shift, and go to state 217

    $default	reduce using rule 45 (equality_expression)



state 118

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 46)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 47)
    and_expression  ->  equality_expression .   (rule 48)

    EQ_OP	shift, and go to state 218
    NE_OP	shift, and go to state 219

    $default	reduce using rule 48 (and_expression)



state 119

    and_expression  ->  and_expression . '&' equality_expression   (rule 49)
    exclusive_or_expression  ->  and_expression .   (rule 50)

    '&' 	shift, and go to state 220

    $default	reduce using rule 50 (exclusive_or_expression)



state 120

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 51)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 52)

    '^' 	shift, and go to state 221

    $default	reduce using rule 52 (inclusive_or_expression)



state 121

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 53)
    logical_and_expression  ->  inclusive_or_expression .   (rule 54)

    '|' 	shift, and go to state 222

    $default	reduce using rule 54 (logical_and_expression)



state 122

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 55)
    logical_or_expression  ->  logical_and_expression .   (rule 56)

    AND_OP	shift, and go to state 223

    $default	reduce using rule 56 (logical_or_expression)



state 123

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 57)
    conditional_expression  ->  logical_or_expression .   (rule 58)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 59)

    OR_OP	shift, and go to state 224
    '?' 	shift, and go to state 225

    $default	reduce using rule 58 (conditional_expression)



state 124

    assignment_expression  ->  conditional_expression .   (rule 60)

    $default	reduce using rule 60 (assignment_expression)



state 125

    expression  ->  assignment_expression .   (rule 73)

    $default	reduce using rule 73 (expression)



state 126

    expression  ->  expression . ',' assignment_expression   (rule 74)
    expression_statement  ->  expression . ';'   (rule 193)

    ',' 	shift, and go to state 226
    ';' 	shift, and go to state 227



state 127

    statement_list  ->  statement .   (rule 190)

    $default	reduce using rule 190 (statement_list)



state 128

    statement  ->  labeled_statement .   (rule 175)

    $default	reduce using rule 175 (statement)



state 129

    statement  ->  compound_statement .   (rule 176)

    $default	reduce using rule 176 (statement)



state 130

    compound_statement  ->  '{' declaration_list . '}'   (rule 186)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 187)
    declaration_list  ->  declaration_list . declaration   (rule 189)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55
    '}' 	shift, and go to state 228

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    declaration	go to state 137
    declaration_specifiers	go to state 57
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    statement	go to state 127
    labeled_statement	go to state 128
    compound_statement	go to state 129
    statement_list	go to state 229
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 131

    compound_statement  ->  '{' statement_list . '}'   (rule 185)
    statement_list  ->  statement_list . statement   (rule 191)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55
    '}' 	shift, and go to state 230

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 231
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 132

    statement  ->  expression_statement .   (rule 177)

    $default	reduce using rule 177 (statement)



state 133

    statement  ->  selection_statement .   (rule 178)

    $default	reduce using rule 178 (statement)



state 134

    statement  ->  iteration_statement .   (rule 179)

    $default	reduce using rule 179 (statement)



state 135

    statement  ->  jump_statement .   (rule 180)

    $default	reduce using rule 180 (statement)



state 136

    init_declarator  ->  declarator .   (rule 86)
    init_declarator  ->  declarator . @1 '=' initializer   (rule 88)

    $default	reduce using rule 86 (init_declarator)

    @1  	go to state 74



state 137

    declaration_list  ->  declaration_list declaration .   (rule 189)

    $default	reduce using rule 189 (declaration_list)



state 138

    function_definition  ->  declarator declaration_list compound_statement .   (rule 214)

    $default	reduce using rule 214 (function_definition)



state 139

    identifier_list  ->  IDENTIFIER .   (rule 154)

    $default	reduce using rule 154 (identifier_list)



state 140

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 140)

    $default	reduce using rule 140 (direct_declarator)



state 141

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 151)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 152)
    parameter_declaration  ->  declaration_specifiers .   (rule 153)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 232
    '[' 	shift, and go to state 233
    '*' 	shift, and go to state 24

    $default	reduce using rule 153 (parameter_declaration)

    declarator	go to state 234
    direct_declarator	go to state 35
    pointer	go to state 235
    abstract_declarator	go to state 236
    direct_abstract_declarator	go to state 237



state 142

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 138)

    ')' 	shift, and go to state 238



state 143

    parameter_type_list  ->  parameter_list .   (rule 147)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 148)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 150)

    ',' 	shift, and go to state 239

    $default	reduce using rule 147 (parameter_type_list)



state 144

    parameter_list  ->  parameter_declaration .   (rule 149)

    $default	reduce using rule 149 (parameter_list)



state 145

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 139)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 155)

    ')' 	shift, and go to state 240
    ',' 	shift, and go to state 241



state 146

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 147

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 137)

    $default	reduce using rule 137 (direct_declarator)



state 148

    cast_expression  ->  unary_expression .   (rule 28)

    $default	reduce using rule 28 (cast_expression)



state 149

    constant_expression  ->  conditional_expression .   (rule 75)

    $default	reduce using rule 75 (constant_expression)



state 150

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 136)

    ']' 	shift, and go to state 242



state 151

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . '}'   (rule 124)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 127)

    ',' 	shift, and go to state 153
    '}' 	shift, and go to state 243



state 152

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 129)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 244



state 153

    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 127)

    IDENTIFIER	shift, and go to state 66

    enumerator	go to state 245



state 154

    enum_specifier  ->  ENUM '{' enumerator_list '}' .   (rule 123)

    $default	reduce using rule 123 (enum_specifier)



state 155

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 85)

    $default	reduce using rule 85 (init_declarator_list)



state 156

    init_declarator  ->  declarator @1 '=' . initializer   (rule 88)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    '{' 	shift, and go to state 246

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 247
    initializer	go to state 248



state 157

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 212)

    $default	reduce using rule 212 (function_definition)



state 158

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list . '}'   (rule 106)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 112)

    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '}' 	shift, and go to state 249

    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    struct_declaration	go to state 161
    specifier_qualifier_list	go to state 81
    enum_specifier	go to state 32
    type_qualifier	go to state 82



state 159

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 114)

    $default	reduce using rule 114 (specifier_qualifier_list)



state 160

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list '}' .   (rule 107)

    $default	reduce using rule 107 (struct_or_union_specifier)



state 161

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 112)

    $default	reduce using rule 112 (struct_declaration_list)



state 162

    struct_declarator  ->  ':' . constant_expression   (rule 121)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 250



state 163

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 113)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 119)

    ',' 	shift, and go to state 251
    ';' 	shift, and go to state 252



state 164

    struct_declarator_list  ->  struct_declarator .   (rule 118)

    $default	reduce using rule 118 (struct_declarator_list)



state 165

    struct_declarator  ->  declarator .   (rule 120)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 122)

    ':' 	shift, and go to state 253

    $default	reduce using rule 120 (struct_declarator)



state 166

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 116)

    $default	reduce using rule 116 (specifier_qualifier_list)



state 167

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 181)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 254
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 168

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 21)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    TYPE_NAME	shift, and go to state 3
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 185
    type_specifier	go to state 78
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    specifier_qualifier_list	go to state 186
    enum_specifier	go to state 32
    type_qualifier	go to state 82
    type_name	go to state 255



state 169

    unary_expression  ->  SIZEOF unary_expression .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 170

    primary_expression  ->  '(' . expression ')'   (rule 4)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 185



state 171

    unary_expression  ->  INC_OP unary_expression .   (rule 17)

    $default	reduce using rule 17 (unary_expression)



state 172

    unary_expression  ->  DEC_OP unary_expression .   (rule 18)

    $default	reduce using rule 18 (unary_expression)



state 173

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 182)

    ':' 	shift, and go to state 256



state 174

    labeled_statement  ->  DEFAULT ':' . statement   (rule 183)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 257
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 175

    selection_statement  ->  IF '(' . expression ')' statement   (rule 194)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 195)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 258



state 176

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 196)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 259



state 177

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 197)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 260



state 178

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 198)

    WHILE	shift, and go to state 261



state 179

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 199)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 200)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    expression_statement	go to state 262



state 180

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 201)

    ';' 	shift, and go to state 263



state 181

    jump_statement  ->  CONTINUE ';' .   (rule 202)

    $default	reduce using rule 202 (jump_statement)



state 182

    jump_statement  ->  BREAK ';' .   (rule 203)

    $default	reduce using rule 203 (jump_statement)



state 183

    jump_statement  ->  RETURN ';' .   (rule 204)

    $default	reduce using rule 204 (jump_statement)



state 184

    expression  ->  expression . ',' assignment_expression   (rule 74)
    jump_statement  ->  RETURN expression . ';'   (rule 205)

    ',' 	shift, and go to state 226
    ';' 	shift, and go to state 264



state 185

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 74)

    ')' 	shift, and go to state 265
    ',' 	shift, and go to state 226



state 186

    type_name  ->  specifier_qualifier_list .   (rule 156)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 157)

    '(' 	shift, and go to state 266
    '[' 	shift, and go to state 233
    '*' 	shift, and go to state 24

    $default	reduce using rule 156 (type_name)

    pointer	go to state 267
    abstract_declarator	go to state 268
    direct_abstract_declarator	go to state 237



state 187

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 29)

    ')' 	shift, and go to state 269



state 188

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 11)

    IDENTIFIER	shift, and go to state 270



state 189

    postfix_expression  ->  postfix_expression INC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 190

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 191

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 8)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 9)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    ')' 	shift, and go to state 271
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    argument_expression_list	go to state 272
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 273



state 192

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 7)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 274



state 193

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 10)

    IDENTIFIER	shift, and go to state 275



state 194

    assignment_operator  ->  MUL_ASSIGN .   (rule 63)

    $default	reduce using rule 63 (assignment_operator)



state 195

    assignment_operator  ->  DIV_ASSIGN .   (rule 64)

    $default	reduce using rule 64 (assignment_operator)



state 196

    assignment_operator  ->  MOD_ASSIGN .   (rule 65)

    $default	reduce using rule 65 (assignment_operator)



state 197

    assignment_operator  ->  ADD_ASSIGN .   (rule 66)

    $default	reduce using rule 66 (assignment_operator)



state 198

    assignment_operator  ->  SUB_ASSIGN .   (rule 67)

    $default	reduce using rule 67 (assignment_operator)



state 199

    assignment_operator  ->  LEFT_ASSIGN .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 200

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 201

    assignment_operator  ->  AND_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 202

    assignment_operator  ->  XOR_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 203

    assignment_operator  ->  OR_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 204

    assignment_operator  ->  '=' .   (rule 62)

    $default	reduce using rule 62 (assignment_operator)



state 205

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 61)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 276



state 206

    unary_expression  ->  unary_operator cast_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 207

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 277



state 208

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 32)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 278



state 209

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 33)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 279



state 210

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 35)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 280



state 211

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 36)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 281



state 212

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 38)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 282



state 213

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 39)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 283



state 214

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 43)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 284



state 215

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 44)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 285



state 216

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 41)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 286



state 217

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 42)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 287



state 218

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 46)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 288



state 219

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 47)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 289



state 220

    and_expression  ->  and_expression '&' . equality_expression   (rule 49)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 290



state 221

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 51)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 291



state 222

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 53)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 292



state 223

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 55)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 293



state 224

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 57)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 294



state 225

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 59)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 295



state 226

    expression  ->  expression ',' . assignment_expression   (rule 74)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 296



state 227

    expression_statement  ->  expression ';' .   (rule 193)

    $default	reduce using rule 193 (expression_statement)



state 228

    compound_statement  ->  '{' declaration_list '}' .   (rule 186)

    $default	reduce using rule 186 (compound_statement)



state 229

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 187)
    statement_list  ->  statement_list . statement   (rule 191)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55
    '}' 	shift, and go to state 297

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 231
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 230

    compound_statement  ->  '{' statement_list '}' .   (rule 185)

    $default	reduce using rule 185 (compound_statement)



state 231

    statement_list  ->  statement_list statement .   (rule 191)

    $default	reduce using rule 191 (statement_list)



state 232

    direct_declarator  ->  '(' . declarator ')'   (rule 135)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 161)
    direct_abstract_declarator  ->  '(' . ')'   (rule 166)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 167)

    IDENTIFIER	shift, and go to state 2
    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '(' 	shift, and go to state 232
    ')' 	shift, and go to state 298
    '[' 	shift, and go to state 233
    '*' 	shift, and go to state 24

    declaration_specifiers	go to state 141
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    declarator	go to state 42
    direct_declarator	go to state 35
    pointer	go to state 235
    parameter_type_list	go to state 299
    parameter_list	go to state 143
    parameter_declaration	go to state 144
    abstract_declarator	go to state 300
    direct_abstract_declarator	go to state 237



state 233

    direct_abstract_declarator  ->  '[' . ']'   (rule 162)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 163)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    ']' 	shift, and go to state 301
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 302



state 234

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 151)

    $default	reduce using rule 151 (parameter_declaration)



state 235

    declarator  ->  pointer . direct_declarator   (rule 132)
    abstract_declarator  ->  pointer .   (rule 158)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 160)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 232
    '[' 	shift, and go to state 233

    $default	reduce using rule 158 (abstract_declarator)

    direct_declarator	go to state 62
    direct_abstract_declarator	go to state 303



state 236

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 152)

    $default	reduce using rule 152 (parameter_declaration)



state 237

    abstract_declarator  ->  direct_abstract_declarator .   (rule 159)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 164)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 165)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 168)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 169)

    '(' 	shift, and go to state 304
    '[' 	shift, and go to state 305

    $default	reduce using rule 159 (abstract_declarator)



state 238

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 138)

    $default	reduce using rule 138 (direct_declarator)



state 239

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 148)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 150)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    ELLIPSIS	shift, and go to state 306

    declaration_specifiers	go to state 141
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    parameter_declaration	go to state 307



state 240

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 139)

    $default	reduce using rule 139 (direct_declarator)



state 241

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 155)

    IDENTIFIER	shift, and go to state 308



state 242

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 136)

    $default	reduce using rule 136 (direct_declarator)



state 243

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list '}' .   (rule 124)

    $default	reduce using rule 124 (enum_specifier)



state 244

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 129)

    $default	reduce using rule 129 (enumerator)



state 245

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 127)

    $default	reduce using rule 127 (enumerator_list)



state 246

    initializer  ->  '{' . initializer_list '}'   (rule 171)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 172)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    '{' 	shift, and go to state 246

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 247
    initializer	go to state 309
    initializer_list	go to state 310



state 247

    initializer  ->  assignment_expression .   (rule 170)

    $default	reduce using rule 170 (initializer)



state 248

    init_declarator  ->  declarator @1 '=' initializer .   (rule 88)

    $default	reduce using rule 88 (init_declarator)



state 249

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list '}' .   (rule 106)

    $default	reduce using rule 106 (struct_or_union_specifier)



state 250

    struct_declarator  ->  ':' constant_expression .   (rule 121)

    $default	reduce using rule 121 (struct_declarator)



state 251

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 119)

    IDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 23
    '*' 	shift, and go to state 24
    ':' 	shift, and go to state 162

    struct_declarator	go to state 311
    declarator	go to state 165
    direct_declarator	go to state 35
    pointer	go to state 36



state 252

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 113)

    $default	reduce using rule 113 (struct_declaration)



state 253

    struct_declarator  ->  declarator ':' . constant_expression   (rule 122)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 312



state 254

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 181)

    $default	reduce using rule 181 (labeled_statement)



state 255

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 21)

    ')' 	shift, and go to state 313



state 256

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 182)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 314
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 257

    labeled_statement  ->  DEFAULT ':' statement .   (rule 183)

    $default	reduce using rule 183 (labeled_statement)



state 258

    expression  ->  expression . ',' assignment_expression   (rule 74)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 194)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 195)

    ')' 	shift, and go to state 315
    ',' 	shift, and go to state 226



state 259

    expression  ->  expression . ',' assignment_expression   (rule 74)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 196)

    ')' 	shift, and go to state 316
    ',' 	shift, and go to state 226



state 260

    expression  ->  expression . ',' assignment_expression   (rule 74)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 197)

    ')' 	shift, and go to state 317
    ',' 	shift, and go to state 226



state 261

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 198)

    '(' 	shift, and go to state 318



state 262

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 199)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 200)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    expression_statement	go to state 319



state 263

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 201)

    $default	reduce using rule 201 (jump_statement)



state 264

    jump_statement  ->  RETURN expression ';' .   (rule 205)

    $default	reduce using rule 205 (jump_statement)



state 265

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 266

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 161)
    direct_abstract_declarator  ->  '(' . ')'   (rule 166)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 167)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    '(' 	shift, and go to state 266
    ')' 	shift, and go to state 298
    '[' 	shift, and go to state 233
    '*' 	shift, and go to state 24

    declaration_specifiers	go to state 141
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    pointer	go to state 267
    parameter_type_list	go to state 299
    parameter_list	go to state 143
    parameter_declaration	go to state 144
    abstract_declarator	go to state 300
    direct_abstract_declarator	go to state 237



state 267

    abstract_declarator  ->  pointer .   (rule 158)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 160)

    '(' 	shift, and go to state 266
    '[' 	shift, and go to state 233

    $default	reduce using rule 158 (abstract_declarator)

    direct_abstract_declarator	go to state 303



state 268

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 157)

    $default	reduce using rule 157 (type_name)



state 269

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 29)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 320



state 270

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 271

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 272

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 9)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 15)

    ')' 	shift, and go to state 321
    ',' 	shift, and go to state 322



state 273

    argument_expression_list  ->  assignment_expression .   (rule 14)

    $default	reduce using rule 14 (argument_expression_list)



state 274

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 7)
    expression  ->  expression . ',' assignment_expression   (rule 74)

    ']' 	shift, and go to state 323
    ',' 	shift, and go to state 226



state 275

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 276

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 61)

    $default	reduce using rule 61 (assignment_expression)



state 277

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 31)

    $default	reduce using rule 31 (multiplicative_expression)



state 278

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 32)

    $default	reduce using rule 32 (multiplicative_expression)



state 279

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 33)

    $default	reduce using rule 33 (multiplicative_expression)



state 280

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 32)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 33)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 35)

    '*' 	shift, and go to state 207
    '/' 	shift, and go to state 208
    '%' 	shift, and go to state 209

    $default	reduce using rule 35 (additive_expression)



state 281

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 32)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 33)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 36)

    '*' 	shift, and go to state 207
    '/' 	shift, and go to state 208
    '%' 	shift, and go to state 209

    $default	reduce using rule 36 (additive_expression)



state 282

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 35)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 36)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 38)

    '+' 	shift, and go to state 210
    '-' 	shift, and go to state 211

    $default	reduce using rule 38 (shift_expression)



state 283

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 35)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 36)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 39)

    '+' 	shift, and go to state 210
    '-' 	shift, and go to state 211

    $default	reduce using rule 39 (shift_expression)



state 284

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 43)

    LEFT_OP	shift, and go to state 212
    RIGHT_OP	shift, and go to state 213

    $default	reduce using rule 43 (relational_expression)



state 285

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 44)

    LEFT_OP	shift, and go to state 212
    RIGHT_OP	shift, and go to state 213

    $default	reduce using rule 44 (relational_expression)



state 286

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 41)

    LEFT_OP	shift, and go to state 212
    RIGHT_OP	shift, and go to state 213

    $default	reduce using rule 41 (relational_expression)



state 287

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 38)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 39)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 42)

    LEFT_OP	shift, and go to state 212
    RIGHT_OP	shift, and go to state 213

    $default	reduce using rule 42 (relational_expression)



state 288

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 42)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 43)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 44)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 46)

    LE_OP	shift, and go to state 214
    GE_OP	shift, and go to state 215
    '<' 	shift, and go to state 216
    '>' 	shift, and go to state 217

    $default	reduce using rule 46 (equality_expression)



state 289

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 42)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 43)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 44)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 47)

    LE_OP	shift, and go to state 214
    GE_OP	shift, and go to state 215
    '<' 	shift, and go to state 216
    '>' 	shift, and go to state 217

    $default	reduce using rule 47 (equality_expression)



state 290

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 46)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 47)
    and_expression  ->  and_expression '&' equality_expression .   (rule 49)

    EQ_OP	shift, and go to state 218
    NE_OP	shift, and go to state 219

    $default	reduce using rule 49 (and_expression)



state 291

    and_expression  ->  and_expression . '&' equality_expression   (rule 49)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 51)

    '&' 	shift, and go to state 220

    $default	reduce using rule 51 (exclusive_or_expression)



state 292

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 51)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 53)

    '^' 	shift, and go to state 221

    $default	reduce using rule 53 (inclusive_or_expression)



state 293

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 53)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 55)

    '|' 	shift, and go to state 222

    $default	reduce using rule 55 (logical_and_expression)



state 294

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 55)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 57)

    AND_OP	shift, and go to state 223

    $default	reduce using rule 57 (logical_or_expression)



state 295

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 59)
    expression  ->  expression . ',' assignment_expression   (rule 74)

    ',' 	shift, and go to state 226
    ':' 	shift, and go to state 324



state 296

    expression  ->  expression ',' assignment_expression .   (rule 74)

    $default	reduce using rule 74 (expression)



state 297

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 187)

    $default	reduce using rule 187 (compound_statement)



state 298

    direct_abstract_declarator  ->  '(' ')' .   (rule 166)

    $default	reduce using rule 166 (direct_abstract_declarator)



state 299

    direct_abstract_declarator  ->  '(' parameter_type_list . ')'   (rule 167)

    ')' 	shift, and go to state 325



state 300

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 161)

    ')' 	shift, and go to state 326



state 301

    direct_abstract_declarator  ->  '[' ']' .   (rule 162)

    $default	reduce using rule 162 (direct_abstract_declarator)



state 302

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 163)

    ']' 	shift, and go to state 327



state 303

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 160)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 164)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 165)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 168)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 169)

    '(' 	shift, and go to state 304
    '[' 	shift, and go to state 305

    $default	reduce using rule 160 (abstract_declarator)



state 304

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 168)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_type_list ')'   (rule 169)

    TYPE_NAME	shift, and go to state 3
    TYPEDEF	shift, and go to state 4
    EXTERN	shift, and go to state 5
    STATIC	shift, and go to state 6
    AUTO	shift, and go to state 7
    REGISTER	shift, and go to state 8
    CHAR	shift, and go to state 9
    SHORT	shift, and go to state 10
    INT 	shift, and go to state 11
    LONG	shift, and go to state 12
    SIGNED	shift, and go to state 13
    UNSIGNED	shift, and go to state 14
    FLOAT	shift, and go to state 15
    DOUBLE	shift, and go to state 16
    CONST	shift, and go to state 17
    VOLATILE	shift, and go to state 18
    VOID	shift, and go to state 19
    STRUCT	shift, and go to state 20
    UNION	shift, and go to state 21
    ENUM	shift, and go to state 22
    ')' 	shift, and go to state 328

    declaration_specifiers	go to state 141
    storage_class_specifier	go to state 28
    type_specifier	go to state 29
    struct_or_union_specifier	go to state 30
    struct_or_union	go to state 31
    enum_specifier	go to state 32
    type_qualifier	go to state 33
    parameter_type_list	go to state 329
    parameter_list	go to state 143
    parameter_declaration	go to state 144



state 305

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 164)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . constant_expression ']'   (rule 165)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    ']' 	shift, and go to state 330
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 149
    constant_expression	go to state 331



state 306

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 148)

    $default	reduce using rule 148 (parameter_type_list)



state 307

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 150)

    $default	reduce using rule 150 (parameter_list)



state 308

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 155)

    $default	reduce using rule 155 (identifier_list)



state 309

    initializer_list  ->  initializer .   (rule 173)

    $default	reduce using rule 173 (initializer_list)



state 310

    initializer  ->  '{' initializer_list . '}'   (rule 171)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 172)
    initializer_list  ->  initializer_list . ',' initializer   (rule 174)

    ',' 	shift, and go to state 332
    '}' 	shift, and go to state 333



state 311

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 119)

    $default	reduce using rule 119 (struct_declarator_list)



state 312

    struct_declarator  ->  declarator ':' constant_expression .   (rule 122)

    $default	reduce using rule 122 (struct_declarator)



state 313

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 21)

    $default	reduce using rule 21 (unary_expression)



state 314

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 182)

    $default	reduce using rule 182 (labeled_statement)



state 315

    selection_statement  ->  IF '(' expression ')' . statement   (rule 194)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 195)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 334
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 316

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 196)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 335
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 317

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 197)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 336
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 318

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 198)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 337



state 319

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 199)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 200)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    ')' 	shift, and go to state 338
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 339



state 320

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 29)

    $default	reduce using rule 29 (cast_expression)



state 321

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 322

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 15)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 340



state 323

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 324

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 59)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 148
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 341



state 325

    direct_abstract_declarator  ->  '(' parameter_type_list ')' .   (rule 167)

    $default	reduce using rule 167 (direct_abstract_declarator)



state 326

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 161)

    $default	reduce using rule 161 (direct_abstract_declarator)



state 327

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 163)

    $default	reduce using rule 163 (direct_abstract_declarator)



state 328

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 168)

    $default	reduce using rule 168 (direct_abstract_declarator)



state 329

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list . ')'   (rule 169)

    ')' 	shift, and go to state 342



state 330

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 164)

    $default	reduce using rule 164 (direct_abstract_declarator)



state 331

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression . ']'   (rule 165)

    ']' 	shift, and go to state 343



state 332

    initializer  ->  '{' initializer_list ',' . '}'   (rule 172)
    initializer_list  ->  initializer_list ',' . initializer   (rule 174)

    IDENTIFIER	shift, and go to state 146
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    '{' 	shift, and go to state 246
    '}' 	shift, and go to state 344

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 247
    initializer	go to state 345



state 333

    initializer  ->  '{' initializer_list '}' .   (rule 171)

    $default	reduce using rule 171 (initializer)



state 334

    selection_statement  ->  IF '(' expression ')' statement .   (rule 194)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 195)

    ELSE	shift, and go to state 346

    ELSE	[reduce using rule 194 (selection_statement)]
    $default	reduce using rule 194 (selection_statement)



state 335

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 196)

    $default	reduce using rule 196 (selection_statement)



state 336

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 197)

    $default	reduce using rule 197 (iteration_statement)



state 337

    expression  ->  expression . ',' assignment_expression   (rule 74)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 198)

    ')' 	shift, and go to state 347
    ',' 	shift, and go to state 226



state 338

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 199)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 348
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 339

    expression  ->  expression . ',' assignment_expression   (rule 74)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 200)

    ')' 	shift, and go to state 349
    ',' 	shift, and go to state 226



state 340

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 15)

    $default	reduce using rule 15 (argument_expression_list)



state 341

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 59)

    $default	reduce using rule 59 (conditional_expression)



state 342

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list ')' .   (rule 169)

    $default	reduce using rule 169 (direct_abstract_declarator)



state 343

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression ']' .   (rule 165)

    $default	reduce using rule 165 (direct_abstract_declarator)



state 344

    initializer  ->  '{' initializer_list ',' '}' .   (rule 172)

    $default	reduce using rule 172 (initializer)



state 345

    initializer_list  ->  initializer_list ',' initializer .   (rule 174)

    $default	reduce using rule 174 (initializer_list)



state 346

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 195)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 350
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 347

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 198)

    ';' 	shift, and go to state 351



state 348

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 199)

    $default	reduce using rule 199 (iteration_statement)



state 349

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 200)

    IDENTIFIER	shift, and go to state 83
    CONSTANT	shift, and go to state 84
    STRING_LITERAL	shift, and go to state 85
    SIZEOF	shift, and go to state 86
    INC_OP	shift, and go to state 87
    DEC_OP	shift, and go to state 88
    CASE	shift, and go to state 89
    DEFAULT	shift, and go to state 90
    IF  	shift, and go to state 91
    SWITCH	shift, and go to state 92
    WHILE	shift, and go to state 93
    DO  	shift, and go to state 94
    FOR 	shift, and go to state 95
    GOTO	shift, and go to state 96
    CONTINUE	shift, and go to state 97
    BREAK	shift, and go to state 98
    RETURN	shift, and go to state 99
    '(' 	shift, and go to state 100
    '&' 	shift, and go to state 101
    '*' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '-' 	shift, and go to state 104
    '~' 	shift, and go to state 105
    '!' 	shift, and go to state 106
    ';' 	shift, and go to state 107
    '{' 	shift, and go to state 55

    primary_expression	go to state 109
    postfix_expression	go to state 110
    unary_expression	go to state 111
    unary_operator	go to state 112
    cast_expression	go to state 113
    multiplicative_expression	go to state 114
    additive_expression	go to state 115
    shift_expression	go to state 116
    relational_expression	go to state 117
    equality_expression	go to state 118
    and_expression	go to state 119
    exclusive_or_expression	go to state 120
    inclusive_or_expression	go to state 121
    logical_and_expression	go to state 122
    logical_or_expression	go to state 123
    conditional_expression	go to state 124
    assignment_expression	go to state 125
    expression	go to state 126
    statement	go to state 352
    labeled_statement	go to state 128
    compound_statement	go to state 129
    expression_statement	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 350

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 195)

    $default	reduce using rule 195 (selection_statement)



state 351

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 198)

    $default	reduce using rule 198 (iteration_statement)



state 352

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 200)

    $default	reduce using rule 200 (iteration_statement)



state 353

    $   	go to state 354



state 354

    $default	accept
