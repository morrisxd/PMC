

Terminals which are not used:

   H_DECLARATOR


Conflict in state 333 between rule 201 and token ELSE resolved as shift.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> STRING_LITERAL
rule 4    primary_expression -> '(' expression ')'
rule 5    postfix_expression -> primary_expression
rule 6    postfix_expression -> postfix_expression '[' expression ']'
rule 7    postfix_expression -> postfix_expression '(' ')'
rule 8    postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 9    postfix_expression -> postfix_expression '.' IDENTIFIER
rule 10   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 11   postfix_expression -> postfix_expression INC_OP
rule 12   postfix_expression -> postfix_expression DEC_OP
rule 13   argument_expression_list -> assignment_expression
rule 14   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 15   unary_expression -> postfix_expression
rule 16   unary_expression -> INC_OP unary_expression
rule 17   unary_expression -> DEC_OP unary_expression
rule 18   unary_expression -> unary_operator cast_expression
rule 19   unary_expression -> SIZEOF unary_expression
rule 20   unary_expression -> SIZEOF '(' type_name ')'
rule 21   unary_operator -> '&'
rule 22   unary_operator -> '*'
rule 23   unary_operator -> '+'
rule 24   unary_operator -> '-'
rule 25   unary_operator -> '~'
rule 26   unary_operator -> '!'
rule 27   cast_expression -> unary_expression
rule 28   cast_expression -> '(' type_name ')' cast_expression
rule 29   multiplicative_expression -> cast_expression
rule 30   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 31   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 32   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 33   additive_expression -> multiplicative_expression
rule 34   additive_expression -> additive_expression '+' multiplicative_expression
rule 35   additive_expression -> additive_expression '-' multiplicative_expression
rule 36   shift_expression -> additive_expression
rule 37   shift_expression -> shift_expression LEFT_OP additive_expression
rule 38   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 39   relational_expression -> shift_expression
rule 40   relational_expression -> relational_expression '<' shift_expression
rule 41   relational_expression -> relational_expression '>' shift_expression
rule 42   relational_expression -> relational_expression LE_OP shift_expression
rule 43   relational_expression -> relational_expression GE_OP shift_expression
rule 44   equality_expression -> relational_expression
rule 45   equality_expression -> equality_expression EQ_OP relational_expression
rule 46   equality_expression -> equality_expression NE_OP relational_expression
rule 47   and_expression -> equality_expression
rule 48   and_expression -> and_expression '&' equality_expression
rule 49   exclusive_or_expression -> and_expression
rule 50   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 51   inclusive_or_expression -> exclusive_or_expression
rule 52   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 53   logical_and_expression -> inclusive_or_expression
rule 54   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 55   logical_or_expression -> logical_and_expression
rule 56   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 57   conditional_expression -> logical_or_expression
rule 58   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 59   assignment_expression -> conditional_expression
rule 60   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 61   assignment_operator -> '='
rule 62   assignment_operator -> MUL_ASSIGN
rule 63   assignment_operator -> DIV_ASSIGN
rule 64   assignment_operator -> MOD_ASSIGN
rule 65   assignment_operator -> ADD_ASSIGN
rule 66   assignment_operator -> SUB_ASSIGN
rule 67   assignment_operator -> LEFT_ASSIGN
rule 68   assignment_operator -> RIGHT_ASSIGN
rule 69   assignment_operator -> AND_ASSIGN
rule 70   assignment_operator -> XOR_ASSIGN
rule 71   assignment_operator -> OR_ASSIGN
rule 72   expression -> assignment_expression
rule 73   expression -> expression ',' assignment_expression
rule 74   constant_expression -> conditional_expression
rule 75   declaration -> declaration_specifiers ';'
rule 76   declaration -> declaration_specifiers init_declarator_list ';'
rule 77   declaration_specifiers -> storage_class_specifier
rule 78   declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 79   declaration_specifiers -> type_specifier
rule 80   declaration_specifiers -> type_specifier declaration_specifiers
rule 81   declaration_specifiers -> type_qualifier
rule 82   declaration_specifiers -> type_qualifier declaration_specifiers
rule 83   declaration_specifiers -> function_specifier
rule 84   declaration_specifiers -> function_specifier declaration_specifiers
rule 85   function_specifier -> INLINE
rule 86   function_specifier -> INLINE2
rule 87   init_declarator_list -> init_declarator
rule 88   init_declarator_list -> init_declarator_list ',' init_declarator
rule 89   init_declarator -> declarator
rule 90   init_declarator -> declarator '=' initializer
rule 91   storage_class_specifier -> TYPEDEF
rule 92   storage_class_specifier -> EXTERN
rule 93   storage_class_specifier -> STATIC
rule 94   storage_class_specifier -> AUTO
rule 95   storage_class_specifier -> REGISTER
rule 96   type_specifier -> VOID
rule 97   type_specifier -> CHAR
rule 98   type_specifier -> SHORT
rule 99   type_specifier -> INT
rule 100  type_specifier -> LONG
rule 101  type_specifier -> FLOAT
rule 102  type_specifier -> DOUBLE
rule 103  type_specifier -> SIGNED
rule 104  type_specifier -> UNSIGNED
rule 105  type_specifier -> struct_or_union_specifier
rule 106  type_specifier -> enum_specifier
rule 107  type_specifier -> TYPE_NAME
rule 108  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' struct_declaration_list '}'
rule 109  struct_or_union_specifier -> struct_or_union '{' struct_declaration_list '}'
rule 110  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 111  struct_or_union -> STRUCT
rule 112  struct_or_union -> UNION
rule 113  struct_declaration_list -> struct_declaration
rule 114  struct_declaration_list -> struct_declaration_list struct_declaration
rule 115  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 116  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 117  specifier_qualifier_list -> type_specifier
rule 118  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 119  specifier_qualifier_list -> type_qualifier
rule 120  struct_declarator_list -> struct_declarator
rule 121  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 122  struct_declarator -> declarator
rule 123  struct_declarator -> ':' constant_expression
rule 124  struct_declarator -> declarator ':' constant_expression
rule 125  enum_specifier -> ENUM '{' enumerator_list enumerator_list_end '}'
rule 126  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list enumerator_list_end '}'
rule 127  enum_specifier -> ENUM IDENTIFIER
rule 128  enumerator_list_end ->		/* empty */
rule 129  enumerator_list_end -> ','
rule 130  enumerator_list -> enumerator
rule 131  enumerator_list -> enumerator_list ',' enumerator
rule 132  enumerator -> IDENTIFIER
rule 133  enumerator -> IDENTIFIER '=' constant_expression
rule 134  type_qualifier -> CONST
rule 135  type_qualifier -> VOLATILE
rule 136  declarator -> pointer direct_declarator
rule 137  declarator -> direct_declarator
rule 138  direct_declarator -> IDENTIFIER
rule 139  @1 ->		/* empty */
rule 140  direct_declarator -> '(' declarator @1 ')'
rule 141  direct_declarator -> direct_declarator '[' constant_expression ']'
rule 142  direct_declarator -> direct_declarator '[' ']'
rule 143  @2 ->		/* empty */
rule 144  direct_declarator -> direct_declarator '(' @2 parameter_type_list ')'
rule 145  direct_declarator -> direct_declarator '(' identifier_list ')'
rule 146  direct_declarator -> direct_declarator '(' ')'
rule 147  pointer -> '*'
rule 148  pointer -> '*' type_qualifier_list
rule 149  pointer -> '*' pointer
rule 150  pointer -> '*' type_qualifier_list pointer
rule 151  type_qualifier_list -> type_qualifier
rule 152  type_qualifier_list -> type_qualifier_list type_qualifier
rule 153  parameter_type_list -> parameter_list
rule 154  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 155  parameter_list -> parameter_declaration
rule 156  parameter_list -> parameter_list ',' parameter_declaration
rule 157  parameter_declaration -> declaration_specifiers declarator
rule 158  parameter_declaration -> declaration_specifiers abstract_declarator
rule 159  parameter_declaration -> declaration_specifiers
rule 160  identifier_list -> IDENTIFIER
rule 161  identifier_list -> identifier_list ',' IDENTIFIER
rule 162  type_name -> specifier_qualifier_list
rule 163  type_name -> specifier_qualifier_list abstract_declarator
rule 164  abstract_declarator -> pointer
rule 165  abstract_declarator -> direct_abstract_declarator
rule 166  abstract_declarator -> pointer direct_abstract_declarator
rule 167  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 168  direct_abstract_declarator -> '[' ']'
rule 169  direct_abstract_declarator -> '[' constant_expression ']'
rule 170  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 171  direct_abstract_declarator -> direct_abstract_declarator '[' constant_expression ']'
rule 172  direct_abstract_declarator -> '(' ')'
rule 173  @3 ->		/* empty */
rule 174  direct_abstract_declarator -> '(' @3 parameter_type_list ')'
rule 175  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 176  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_type_list ')'
rule 177  initializer -> assignment_expression
rule 178  initializer -> '{' initializer_list '}'
rule 179  initializer -> '{' initializer_list ',' '}'
rule 180  initializer_list -> initializer
rule 181  initializer_list -> initializer_list ',' initializer
rule 182  statement -> labeled_statement
rule 183  statement -> compound_statement
rule 184  statement -> expression_statement
rule 185  statement -> selection_statement
rule 186  statement -> iteration_statement
rule 187  statement -> jump_statement
rule 188  labeled_statement -> IDENTIFIER ':' statement
rule 189  labeled_statement -> CASE constant_expression ':' statement
rule 190  labeled_statement -> DEFAULT ':' statement
rule 191  compound_statement -> '{' '}'
rule 192  compound_statement -> '{' statement_list '}'
rule 193  compound_statement -> '{' declaration_list '}'
rule 194  compound_statement -> '{' declaration_list statement_list '}'
rule 195  declaration_list -> declaration
rule 196  declaration_list -> declaration_list declaration
rule 197  statement_list -> statement
rule 198  statement_list -> statement_list statement
rule 199  expression_statement -> ';'
rule 200  expression_statement -> expression ';'
rule 201  selection_statement -> IF '(' expression ')' statement
rule 202  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 203  selection_statement -> SWITCH '(' expression ')' statement
rule 204  iteration_statement -> WHILE '(' expression ')' statement
rule 205  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 206  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 207  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 208  jump_statement -> GOTO IDENTIFIER ';'
rule 209  jump_statement -> CONTINUE ';'
rule 210  jump_statement -> BREAK ';'
rule 211  jump_statement -> RETURN ';'
rule 212  jump_statement -> RETURN expression ';'
rule 213  translation_unit -> external_declaration
rule 214  translation_unit -> translation_unit external_declaration
rule 215  external_declaration -> function_definition
rule 216  external_declaration -> declaration
rule 217  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 218  function_definition -> declaration_specifiers declarator compound_statement
rule 219  function_definition -> declarator declaration_list compound_statement
rule 220  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 26
'%' (37) 32
'&' (38) 21 48
'(' (40) 4 7 8 20 28 140 144 145 146 167 172 174 175 176 201 202 203
    204 205 206 207
')' (41) 4 7 8 20 28 140 144 145 146 167 172 174 175 176 201 202 203
    204 205 206 207
'*' (42) 22 30 147 148 149 150
'+' (43) 23 34
',' (44) 14 73 88 121 129 131 154 156 161 179 181
'-' (45) 24 35
'.' (46) 9
'/' (47) 31
':' (58) 58 123 124 188 189 190
';' (59) 75 76 115 199 200 205 208 209 210 211 212
'<' (60) 40
'=' (61) 61 90 133
'>' (62) 41
'?' (63) 58
'[' (91) 6 141 142 168 169 170 171
']' (93) 6 141 142 168 169 170 171
'^' (94) 50
'{' (123) 108 109 125 126 178 179 191 192 193 194
'|' (124) 52
'}' (125) 108 109 125 126 178 179 191 192 193 194
'~' (126) 25
error (256)
IDENTIFIER (258) 1 9 10 108 110 126 127 132 133 138 160 161 188 208
CONSTANT (259) 2
STRING_LITERAL (260) 3
SIZEOF (261) 19 20
PTR_OP (262) 10
INC_OP (263) 11 16
DEC_OP (264) 12 17
LEFT_OP (265) 37
RIGHT_OP (266) 38
LE_OP (267) 42
GE_OP (268) 43
EQ_OP (269) 45
NE_OP (270) 46
AND_OP (271) 54
OR_OP (272) 56
MUL_ASSIGN (273) 62
DIV_ASSIGN (274) 63
MOD_ASSIGN (275) 64
ADD_ASSIGN (276) 65
SUB_ASSIGN (277) 66
LEFT_ASSIGN (278) 67
RIGHT_ASSIGN (279) 68
AND_ASSIGN (280) 69
XOR_ASSIGN (281) 70
OR_ASSIGN (282) 71
TYPE_NAME (283) 107
TYPEDEF (284) 91
EXTERN (285) 92
STATIC (286) 93
AUTO (287) 94
REGISTER (288) 95
CHAR (289) 97
SHORT (290) 98
INT (291) 99
LONG (292) 100
SIGNED (293) 103
UNSIGNED (294) 104
FLOAT (295) 101
DOUBLE (296) 102
CONST (297) 134
VOLATILE (298) 135
VOID (299) 96
STRUCT (300) 111
UNION (301) 112
ENUM (302) 125 126 127
ELLIPSIS (303) 154
LOWER_THAN_ELSE (304)
ELSE (305) 202
LOWER_THAN_DECLARATOR (306)
DECLARATOR (307)
H_DECLARATOR (308)
CASE (309) 189
DEFAULT (310) 190
IF (311) 201 202
SWITCH (312) 203
WHILE (313) 204 205
DO (314) 205
FOR (315) 206 207
GOTO (316) 208
CONTINUE (317) 209
BREAK (318) 210
RETURN (319) 211 212
INLINE (320) 85
INLINE2 (321) 86
LOWER_THAN_BRACE (322)

Nonterminals, with rules where they appear

primary_expression (92)
    on left: 1 2 3 4, on right: 5
postfix_expression (93)
    on left: 5 6 7 8 9 10 11 12, on right: 6 7 8 9 10 11 12 15
argument_expression_list (94)
    on left: 13 14, on right: 8 14
unary_expression (95)
    on left: 15 16 17 18 19 20, on right: 16 17 19 27 60
unary_operator (96)
    on left: 21 22 23 24 25 26, on right: 18
cast_expression (97)
    on left: 27 28, on right: 18 28 29 30 31 32
multiplicative_expression (98)
    on left: 29 30 31 32, on right: 30 31 32 33 34 35
additive_expression (99)
    on left: 33 34 35, on right: 34 35 36 37 38
shift_expression (100)
    on left: 36 37 38, on right: 37 38 39 40 41 42 43
relational_expression (101)
    on left: 39 40 41 42 43, on right: 40 41 42 43 44 45 46
equality_expression (102)
    on left: 44 45 46, on right: 45 46 47 48
and_expression (103)
    on left: 47 48, on right: 48 49 50
exclusive_or_expression (104)
    on left: 49 50, on right: 50 51 52
inclusive_or_expression (105)
    on left: 51 52, on right: 52 53 54
logical_and_expression (106)
    on left: 53 54, on right: 54 55 56
logical_or_expression (107)
    on left: 55 56, on right: 56 57 58
conditional_expression (108)
    on left: 57 58, on right: 58 59 74
assignment_expression (109)
    on left: 59 60, on right: 13 14 60 72 73 177
assignment_operator (110)
    on left: 61 62 63 64 65 66 67 68 69 70 71, on right: 60
expression (111)
    on left: 72 73, on right: 4 6 58 73 200 201 202 203 204 205 207
    212
constant_expression (112)
    on left: 74, on right: 123 124 133 141 169 171 189
declaration (113)
    on left: 75 76, on right: 195 196 216
declaration_specifiers (114)
    on left: 77 78 79 80 81 82 83 84, on right: 75 76 78 80 82 84 157
    158 159 217 218
function_specifier (115)
    on left: 85 86, on right: 83 84
init_declarator_list (116)
    on left: 87 88, on right: 76 88
init_declarator (117)
    on left: 89 90, on right: 87 88
storage_class_specifier (118)
    on left: 91 92 93 94 95, on right: 77 78
type_specifier (119)
    on left: 96 97 98 99 100 101 102 103 104 105 106 107,
    on right: 79 80 116 117
struct_or_union_specifier (120)
    on left: 108 109 110, on right: 105
struct_or_union (121)
    on left: 111 112, on right: 108 109 110
struct_declaration_list (122)
    on left: 113 114, on right: 108 109 114
struct_declaration (123)
    on left: 115, on right: 113 114
specifier_qualifier_list (124)
    on left: 116 117 118 119, on right: 115 116 118 162 163
struct_declarator_list (125)
    on left: 120 121, on right: 115 121
struct_declarator (126)
    on left: 122 123 124, on right: 120 121
enum_specifier (127)
    on left: 125 126 127, on right: 106
enumerator_list_end (128)
    on left: 128 129, on right: 125 126
enumerator_list (129)
    on left: 130 131, on right: 125 126 131
enumerator (130)
    on left: 132 133, on right: 130 131
type_qualifier (131)
    on left: 134 135, on right: 81 82 118 119 151 152
declarator (132)
    on left: 136 137, on right: 89 90 122 124 140 157 217 218 219 220
direct_declarator (133)
    on left: 138 140 141 142 144 145 146, on right: 136 137 141 142
    144 145 146
@1 (134)
    on left: 139, on right: 140
@2 (135)
    on left: 143, on right: 144
pointer (136)
    on left: 147 148 149 150, on right: 136 149 150 164 166
type_qualifier_list (137)
    on left: 151 152, on right: 148 150 152
parameter_type_list (138)
    on left: 153 154, on right: 144 174 176
parameter_list (139)
    on left: 155 156, on right: 153 154 156
parameter_declaration (140)
    on left: 157 158 159, on right: 155 156
identifier_list (141)
    on left: 160 161, on right: 145 161
type_name (142)
    on left: 162 163, on right: 20 28
abstract_declarator (143)
    on left: 164 165 166, on right: 158 163 167
direct_abstract_declarator (144)
    on left: 167 168 169 170 171 172 174 175 176, on right: 165 166
    170 171 175 176
@3 (145)
    on left: 173, on right: 174
initializer (146)
    on left: 177 178 179, on right: 90 180 181
initializer_list (147)
    on left: 180 181, on right: 178 179 181
statement (148)
    on left: 182 183 184 185 186 187, on right: 188 189 190 197 198
    201 202 203 204 205 206 207
labeled_statement (149)
    on left: 188 189 190, on right: 182
compound_statement (150)
    on left: 191 192 193 194, on right: 183 217 218 219 220
declaration_list (151)
    on left: 195 196, on right: 193 194 196 217 219
statement_list (152)
    on left: 197 198, on right: 192 194 198
expression_statement (153)
    on left: 199 200, on right: 184 206 207
selection_statement (154)
    on left: 201 202 203, on right: 185
iteration_statement (155)
    on left: 204 205 206 207, on right: 186
jump_statement (156)
    on left: 208 209 210 211 212, on right: 187
translation_unit (157)
    on left: 213 214, on right: 214
external_declaration (158)
    on left: 215 216, on right: 213 214
function_definition (159)
    on left: 217 218 219 220, on right: 215


state 0

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    translation_unit	go to state 38
    external_declaration	go to state 39
    function_definition	go to state 40



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 138)

    $default	reduce using rule 138 (direct_declarator)



state 2

    type_specifier  ->  TYPE_NAME .   (rule 107)

    $default	reduce using rule 107 (type_specifier)



state 3

    storage_class_specifier  ->  TYPEDEF .   (rule 91)

    $default	reduce using rule 91 (storage_class_specifier)



state 4

    storage_class_specifier  ->  EXTERN .   (rule 92)

    $default	reduce using rule 92 (storage_class_specifier)



state 5

    storage_class_specifier  ->  STATIC .   (rule 93)

    $default	reduce using rule 93 (storage_class_specifier)



state 6

    storage_class_specifier  ->  AUTO .   (rule 94)

    $default	reduce using rule 94 (storage_class_specifier)



state 7

    storage_class_specifier  ->  REGISTER .   (rule 95)

    $default	reduce using rule 95 (storage_class_specifier)



state 8

    type_specifier  ->  CHAR .   (rule 97)

    $default	reduce using rule 97 (type_specifier)



state 9

    type_specifier  ->  SHORT .   (rule 98)

    $default	reduce using rule 98 (type_specifier)



state 10

    type_specifier  ->  INT .   (rule 99)

    $default	reduce using rule 99 (type_specifier)



state 11

    type_specifier  ->  LONG .   (rule 100)

    $default	reduce using rule 100 (type_specifier)



state 12

    type_specifier  ->  SIGNED .   (rule 103)

    $default	reduce using rule 103 (type_specifier)



state 13

    type_specifier  ->  UNSIGNED .   (rule 104)

    $default	reduce using rule 104 (type_specifier)



state 14

    type_specifier  ->  FLOAT .   (rule 101)

    $default	reduce using rule 101 (type_specifier)



state 15

    type_specifier  ->  DOUBLE .   (rule 102)

    $default	reduce using rule 102 (type_specifier)



state 16

    type_qualifier  ->  CONST .   (rule 134)

    $default	reduce using rule 134 (type_qualifier)



state 17

    type_qualifier  ->  VOLATILE .   (rule 135)

    $default	reduce using rule 135 (type_qualifier)



state 18

    type_specifier  ->  VOID .   (rule 96)

    $default	reduce using rule 96 (type_specifier)



state 19

    struct_or_union  ->  STRUCT .   (rule 111)

    $default	reduce using rule 111 (struct_or_union)



state 20

    struct_or_union  ->  UNION .   (rule 112)

    $default	reduce using rule 112 (struct_or_union)



state 21

    enum_specifier  ->  ENUM . '{' enumerator_list enumerator_list_end '}'   (rule 125)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list enumerator_list_end '}'   (rule 126)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 127)

    IDENTIFIER	shift, and go to state 41
    '{' 	shift, and go to state 42



state 22

    function_specifier  ->  INLINE .   (rule 85)

    $default	reduce using rule 85 (function_specifier)



state 23

    function_specifier  ->  INLINE2 .   (rule 86)

    $default	reduce using rule 86 (function_specifier)



state 24

    direct_declarator  ->  '(' . declarator @1 ')'   (rule 140)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 37



state 25

    pointer  ->  '*' .   (rule 147)
    pointer  ->  '*' . type_qualifier_list   (rule 148)
    pointer  ->  '*' . pointer   (rule 149)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 150)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 25

    $default	reduce using rule 147 (pointer)

    type_qualifier	go to state 44
    pointer	go to state 45
    type_qualifier_list	go to state 46



state 26

    external_declaration  ->  declaration .   (rule 216)

    $default	reduce using rule 216 (external_declaration)



state 27

    declaration  ->  declaration_specifiers . ';'   (rule 75)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 76)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 217)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 218)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 50
    direct_declarator	go to state 36
    pointer	go to state 37



state 28

    declaration_specifiers  ->  function_specifier .   (rule 83)
    declaration_specifiers  ->  function_specifier . declaration_specifiers   (rule 84)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 83 (declaration_specifiers)

    declaration_specifiers	go to state 51
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 29

    declaration_specifiers  ->  storage_class_specifier .   (rule 77)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 78)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 77 (declaration_specifiers)

    declaration_specifiers	go to state 52
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 30

    declaration_specifiers  ->  type_specifier .   (rule 79)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 80)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 79 (declaration_specifiers)

    declaration_specifiers	go to state 53
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 31

    type_specifier  ->  struct_or_union_specifier .   (rule 105)

    $default	reduce using rule 105 (type_specifier)



state 32

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' struct_declaration_list '}'   (rule 108)
    struct_or_union_specifier  ->  struct_or_union . '{' struct_declaration_list '}'   (rule 109)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 110)

    IDENTIFIER	shift, and go to state 54
    '{' 	shift, and go to state 55



state 33

    type_specifier  ->  enum_specifier .   (rule 106)

    $default	reduce using rule 106 (type_specifier)



state 34

    declaration_specifiers  ->  type_qualifier .   (rule 81)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 82)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 81 (declaration_specifiers)

    declaration_specifiers	go to state 56
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 35

    function_definition  ->  declarator . declaration_list compound_statement   (rule 219)
    function_definition  ->  declarator . compound_statement   (rule 220)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 58
    declaration_specifiers	go to state 59
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 60
    declaration_list	go to state 61



state 36

    declarator  ->  direct_declarator .   (rule 137)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 141)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 142)
    direct_declarator  ->  direct_declarator . '(' @2 parameter_type_list ')'   (rule 144)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 145)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 146)

    '(' 	shift, and go to state 62
    '[' 	shift, and go to state 63

    $default	reduce using rule 137 (declarator)



state 37

    declarator  ->  pointer . direct_declarator   (rule 136)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24

    direct_declarator	go to state 64



state 38

    translation_unit  ->  translation_unit . external_declaration   (rule 214)

    $   	go to state 358
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    external_declaration	go to state 65
    function_definition	go to state 40



state 39

    translation_unit  ->  external_declaration .   (rule 213)

    $default	reduce using rule 213 (translation_unit)



state 40

    external_declaration  ->  function_definition .   (rule 215)

    $default	reduce using rule 215 (external_declaration)



state 41

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list enumerator_list_end '}'   (rule 126)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 127)

    '{' 	shift, and go to state 66

    $default	reduce using rule 127 (enum_specifier)



state 42

    enum_specifier  ->  ENUM '{' . enumerator_list enumerator_list_end '}'   (rule 125)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 68
    enumerator	go to state 69



state 43

    direct_declarator  ->  '(' declarator . @1 ')'   (rule 140)

    $default	reduce using rule 139 (@1)

    @1  	go to state 70



state 44

    type_qualifier_list  ->  type_qualifier .   (rule 151)

    $default	reduce using rule 151 (type_qualifier_list)



state 45

    pointer  ->  '*' pointer .   (rule 149)

    $default	reduce using rule 149 (pointer)



state 46

    pointer  ->  '*' type_qualifier_list .   (rule 148)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 150)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 152)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 25

    $default	reduce using rule 148 (pointer)

    type_qualifier	go to state 71
    pointer	go to state 72



state 47

    declaration  ->  declaration_specifiers ';' .   (rule 75)

    $default	reduce using rule 75 (declaration)



state 48

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 76)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 88)

    ',' 	shift, and go to state 73
    ';' 	shift, and go to state 74



state 49

    init_declarator_list  ->  init_declarator .   (rule 87)

    $default	reduce using rule 87 (init_declarator_list)



state 50

    init_declarator  ->  declarator .   (rule 89)
    init_declarator  ->  declarator . '=' initializer   (rule 90)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 217)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 218)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57
    '=' 	shift, and go to state 75

    $default	reduce using rule 89 (init_declarator)

    declaration	go to state 58
    declaration_specifiers	go to state 59
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 76
    declaration_list	go to state 77



state 51

    declaration_specifiers  ->  function_specifier declaration_specifiers .   (rule 84)

    $default	reduce using rule 84 (declaration_specifiers)



state 52

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 78)

    $default	reduce using rule 78 (declaration_specifiers)



state 53

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 80)

    $default	reduce using rule 80 (declaration_specifiers)



state 54

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' struct_declaration_list '}'   (rule 108)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 110)

    '{' 	shift, and go to state 78

    $default	reduce using rule 110 (struct_or_union_specifier)



state 55

    struct_or_union_specifier  ->  struct_or_union '{' . struct_declaration_list '}'   (rule 109)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 80
    struct_declaration	go to state 81
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 56

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 82)

    $default	reduce using rule 82 (declaration_specifiers)



state 57

    compound_statement  ->  '{' . '}'   (rule 191)
    compound_statement  ->  '{' . statement_list '}'   (rule 192)
    compound_statement  ->  '{' . declaration_list '}'   (rule 193)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 194)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '}' 	shift, and go to state 109

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    declaration	go to state 58
    declaration_specifiers	go to state 59
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 128
    labeled_statement	go to state 129
    compound_statement	go to state 130
    declaration_list	go to state 131
    statement_list	go to state 132
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 58

    declaration_list  ->  declaration .   (rule 195)

    $default	reduce using rule 195 (declaration_list)



state 59

    declaration  ->  declaration_specifiers . ';'   (rule 75)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 76)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 137
    direct_declarator	go to state 36
    pointer	go to state 37



state 60

    function_definition  ->  declarator compound_statement .   (rule 220)

    $default	reduce using rule 220 (function_definition)



state 61

    declaration_list  ->  declaration_list . declaration   (rule 196)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 219)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 138
    declaration_specifiers	go to state 59
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 139



state 62

    direct_declarator  ->  direct_declarator '(' . @2 parameter_type_list ')'   (rule 144)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 145)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 146)

    IDENTIFIER	shift, and go to state 140
    ')' 	shift, and go to state 141

    $default	reduce using rule 143 (@2)

    @2  	go to state 142
    identifier_list	go to state 143



state 63

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 141)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 142)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ']' 	shift, and go to state 145
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 148



state 64

    declarator  ->  pointer direct_declarator .   (rule 136)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 141)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 142)
    direct_declarator  ->  direct_declarator . '(' @2 parameter_type_list ')'   (rule 144)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 145)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 146)

    '(' 	shift, and go to state 62
    '[' 	shift, and go to state 63

    $default	reduce using rule 136 (declarator)



state 65

    translation_unit  ->  translation_unit external_declaration .   (rule 214)

    $default	reduce using rule 214 (translation_unit)



state 66

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list enumerator_list_end '}'   (rule 126)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 149
    enumerator	go to state 69



state 67

    enumerator  ->  IDENTIFIER .   (rule 132)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 133)

    '=' 	shift, and go to state 150

    $default	reduce using rule 132 (enumerator)



state 68

    enum_specifier  ->  ENUM '{' enumerator_list . enumerator_list_end '}'   (rule 125)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 131)

    ',' 	shift, and go to state 151

    $default	reduce using rule 128 (enumerator_list_end)

    enumerator_list_end	go to state 152



state 69

    enumerator_list  ->  enumerator .   (rule 130)

    $default	reduce using rule 130 (enumerator_list)



state 70

    direct_declarator  ->  '(' declarator @1 . ')'   (rule 140)

    ')' 	shift, and go to state 153



state 71

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 152)

    $default	reduce using rule 152 (type_qualifier_list)



state 72

    pointer  ->  '*' type_qualifier_list pointer .   (rule 150)

    $default	reduce using rule 150 (pointer)



state 73

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 88)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    init_declarator	go to state 154
    declarator	go to state 137
    direct_declarator	go to state 36
    pointer	go to state 37



state 74

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 76)

    $default	reduce using rule 76 (declaration)



state 75

    init_declarator  ->  declarator '=' . initializer   (rule 90)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '{' 	shift, and go to state 155
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 156
    initializer	go to state 157



state 76

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 218)

    $default	reduce using rule 218 (function_definition)



state 77

    declaration_list  ->  declaration_list . declaration   (rule 196)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 217)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 138
    declaration_specifiers	go to state 59
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 158



state 78

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . struct_declaration_list '}'   (rule 108)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 159
    struct_declaration	go to state 81
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 79

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 116)
    specifier_qualifier_list  ->  type_specifier .   (rule 117)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 117 (specifier_qualifier_list)

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 160
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 80

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list . '}'   (rule 109)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 114)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '}' 	shift, and go to state 161

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration	go to state 162
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 81

    struct_declaration_list  ->  struct_declaration .   (rule 113)

    $default	reduce using rule 113 (struct_declaration_list)



state 82

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 115)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 163

    struct_declarator_list	go to state 164
    struct_declarator	go to state 165
    declarator	go to state 166
    direct_declarator	go to state 36
    pointer	go to state 37



state 83

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 118)
    specifier_qualifier_list  ->  type_qualifier .   (rule 119)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 119 (specifier_qualifier_list)

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 167
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 84

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 188)

    ':' 	shift, and go to state 168

    $default	reduce using rule 1 (primary_expression)



state 85

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 86

    primary_expression  ->  STRING_LITERAL .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 87

    unary_expression  ->  SIZEOF . unary_expression   (rule 19)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 20)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 169
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 170
    unary_operator	go to state 113



state 88

    unary_expression  ->  INC_OP . unary_expression   (rule 16)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 171
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 172
    unary_operator	go to state 113



state 89

    unary_expression  ->  DEC_OP . unary_expression   (rule 17)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 171
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 173
    unary_operator	go to state 113



state 90

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 189)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 174



state 91

    labeled_statement  ->  DEFAULT . ':' statement   (rule 190)

    ':' 	shift, and go to state 175



state 92

    selection_statement  ->  IF . '(' expression ')' statement   (rule 201)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 202)

    '(' 	shift, and go to state 176



state 93

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 203)

    '(' 	shift, and go to state 177



state 94

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 204)

    '(' 	shift, and go to state 178



state 95

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 205)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 179
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 96

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 206)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 207)

    '(' 	shift, and go to state 180



state 97

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 208)

    IDENTIFIER	shift, and go to state 181



state 98

    jump_statement  ->  CONTINUE . ';'   (rule 209)

    ';' 	shift, and go to state 182



state 99

    jump_statement  ->  BREAK . ';'   (rule 210)

    ';' 	shift, and go to state 183



state 100

    jump_statement  ->  RETURN . ';'   (rule 211)
    jump_statement  ->  RETURN . expression ';'   (rule 212)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 184

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 185



state 101

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 28)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 186
    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 187
    enum_specifier	go to state 33
    type_qualifier	go to state 83
    type_name	go to state 188



state 102

    unary_operator  ->  '&' .   (rule 21)

    $default	reduce using rule 21 (unary_operator)



state 103

    unary_operator  ->  '*' .   (rule 22)

    $default	reduce using rule 22 (unary_operator)



state 104

    unary_operator  ->  '+' .   (rule 23)

    $default	reduce using rule 23 (unary_operator)



state 105

    unary_operator  ->  '-' .   (rule 24)

    $default	reduce using rule 24 (unary_operator)



state 106

    unary_operator  ->  '~' .   (rule 25)

    $default	reduce using rule 25 (unary_operator)



state 107

    unary_operator  ->  '!' .   (rule 26)

    $default	reduce using rule 26 (unary_operator)



state 108

    expression_statement  ->  ';' .   (rule 199)

    $default	reduce using rule 199 (expression_statement)



state 109

    compound_statement  ->  '{' '}' .   (rule 191)

    $default	reduce using rule 191 (compound_statement)



state 110

    postfix_expression  ->  primary_expression .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 111

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 6)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 7)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 8)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 9)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 10)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 11)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 12)
    unary_expression  ->  postfix_expression .   (rule 15)

    PTR_OP	shift, and go to state 189
    INC_OP	shift, and go to state 190
    DEC_OP	shift, and go to state 191
    '(' 	shift, and go to state 192
    '[' 	shift, and go to state 193
    '.' 	shift, and go to state 194

    $default	reduce using rule 15 (unary_expression)



state 112

    cast_expression  ->  unary_expression .   (rule 27)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 60)

    MUL_ASSIGN	shift, and go to state 195
    DIV_ASSIGN	shift, and go to state 196
    MOD_ASSIGN	shift, and go to state 197
    ADD_ASSIGN	shift, and go to state 198
    SUB_ASSIGN	shift, and go to state 199
    LEFT_ASSIGN	shift, and go to state 200
    RIGHT_ASSIGN	shift, and go to state 201
    AND_ASSIGN	shift, and go to state 202
    XOR_ASSIGN	shift, and go to state 203
    OR_ASSIGN	shift, and go to state 204
    '=' 	shift, and go to state 205

    $default	reduce using rule 27 (cast_expression)

    assignment_operator	go to state 206



state 113

    unary_expression  ->  unary_operator . cast_expression   (rule 18)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 207



state 114

    multiplicative_expression  ->  cast_expression .   (rule 29)

    $default	reduce using rule 29 (multiplicative_expression)



state 115

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 32)
    additive_expression  ->  multiplicative_expression .   (rule 33)

    '*' 	shift, and go to state 208
    '/' 	shift, and go to state 209
    '%' 	shift, and go to state 210

    $default	reduce using rule 33 (additive_expression)



state 116

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 34)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 35)
    shift_expression  ->  additive_expression .   (rule 36)

    '+' 	shift, and go to state 211
    '-' 	shift, and go to state 212

    $default	reduce using rule 36 (shift_expression)



state 117

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  shift_expression .   (rule 39)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 39 (relational_expression)



state 118

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 42)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 43)
    equality_expression  ->  relational_expression .   (rule 44)

    LE_OP	shift, and go to state 215
    GE_OP	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218

    $default	reduce using rule 44 (equality_expression)



state 119

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 45)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 46)
    and_expression  ->  equality_expression .   (rule 47)

    EQ_OP	shift, and go to state 219
    NE_OP	shift, and go to state 220

    $default	reduce using rule 47 (and_expression)



state 120

    and_expression  ->  and_expression . '&' equality_expression   (rule 48)
    exclusive_or_expression  ->  and_expression .   (rule 49)

    '&' 	shift, and go to state 221

    $default	reduce using rule 49 (exclusive_or_expression)



state 121

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 50)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 51)

    '^' 	shift, and go to state 222

    $default	reduce using rule 51 (inclusive_or_expression)



state 122

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 52)
    logical_and_expression  ->  inclusive_or_expression .   (rule 53)

    '|' 	shift, and go to state 223

    $default	reduce using rule 53 (logical_and_expression)



state 123

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 54)
    logical_or_expression  ->  logical_and_expression .   (rule 55)

    AND_OP	shift, and go to state 224

    $default	reduce using rule 55 (logical_or_expression)



state 124

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 56)
    conditional_expression  ->  logical_or_expression .   (rule 57)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 58)

    OR_OP	shift, and go to state 225
    '?' 	shift, and go to state 226

    $default	reduce using rule 57 (conditional_expression)



state 125

    assignment_expression  ->  conditional_expression .   (rule 59)

    $default	reduce using rule 59 (assignment_expression)



state 126

    expression  ->  assignment_expression .   (rule 72)

    $default	reduce using rule 72 (expression)



state 127

    expression  ->  expression . ',' assignment_expression   (rule 73)
    expression_statement  ->  expression . ';'   (rule 200)

    ',' 	shift, and go to state 227
    ';' 	shift, and go to state 228



state 128

    statement_list  ->  statement .   (rule 197)

    $default	reduce using rule 197 (statement_list)



state 129

    statement  ->  labeled_statement .   (rule 182)

    $default	reduce using rule 182 (statement)



state 130

    statement  ->  compound_statement .   (rule 183)

    $default	reduce using rule 183 (statement)



state 131

    compound_statement  ->  '{' declaration_list . '}'   (rule 193)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 194)
    declaration_list  ->  declaration_list . declaration   (rule 196)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '}' 	shift, and go to state 229

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    declaration	go to state 138
    declaration_specifiers	go to state 59
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 128
    labeled_statement	go to state 129
    compound_statement	go to state 130
    statement_list	go to state 230
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 132

    compound_statement  ->  '{' statement_list . '}'   (rule 192)
    statement_list  ->  statement_list . statement   (rule 198)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '}' 	shift, and go to state 231

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 232
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 133

    statement  ->  expression_statement .   (rule 184)

    $default	reduce using rule 184 (statement)



state 134

    statement  ->  selection_statement .   (rule 185)

    $default	reduce using rule 185 (statement)



state 135

    statement  ->  iteration_statement .   (rule 186)

    $default	reduce using rule 186 (statement)



state 136

    statement  ->  jump_statement .   (rule 187)

    $default	reduce using rule 187 (statement)



state 137

    init_declarator  ->  declarator .   (rule 89)
    init_declarator  ->  declarator . '=' initializer   (rule 90)

    '=' 	shift, and go to state 75

    $default	reduce using rule 89 (init_declarator)



state 138

    declaration_list  ->  declaration_list declaration .   (rule 196)

    $default	reduce using rule 196 (declaration_list)



state 139

    function_definition  ->  declarator declaration_list compound_statement .   (rule 219)

    $default	reduce using rule 219 (function_definition)



state 140

    identifier_list  ->  IDENTIFIER .   (rule 160)

    $default	reduce using rule 160 (identifier_list)



state 141

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 146)

    $default	reduce using rule 146 (direct_declarator)



state 142

    direct_declarator  ->  direct_declarator '(' @2 . parameter_type_list ')'   (rule 144)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration_specifiers	go to state 233
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 234
    parameter_list	go to state 235
    parameter_declaration	go to state 236



state 143

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 145)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 161)

    ')' 	shift, and go to state 237
    ',' 	shift, and go to state 238



state 144

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 145

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 142)

    $default	reduce using rule 142 (direct_declarator)



state 146

    cast_expression  ->  unary_expression .   (rule 27)

    $default	reduce using rule 27 (cast_expression)



state 147

    constant_expression  ->  conditional_expression .   (rule 74)

    $default	reduce using rule 74 (constant_expression)



state 148

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 141)

    ']' 	shift, and go to state 239



state 149

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . enumerator_list_end '}'   (rule 126)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 131)

    ',' 	shift, and go to state 151

    $default	reduce using rule 128 (enumerator_list_end)

    enumerator_list_end	go to state 240



state 150

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 133)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 241



state 151

    enumerator_list_end  ->  ',' .   (rule 129)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 131)

    IDENTIFIER	shift, and go to state 67

    $default	reduce using rule 129 (enumerator_list_end)

    enumerator	go to state 242



state 152

    enum_specifier  ->  ENUM '{' enumerator_list enumerator_list_end . '}'   (rule 125)

    '}' 	shift, and go to state 243



state 153

    direct_declarator  ->  '(' declarator @1 ')' .   (rule 140)

    $default	reduce using rule 140 (direct_declarator)



state 154

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 88)

    $default	reduce using rule 88 (init_declarator_list)



state 155

    initializer  ->  '{' . initializer_list '}'   (rule 178)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 179)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '{' 	shift, and go to state 155
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 156
    initializer	go to state 244
    initializer_list	go to state 245



state 156

    initializer  ->  assignment_expression .   (rule 177)

    $default	reduce using rule 177 (initializer)



state 157

    init_declarator  ->  declarator '=' initializer .   (rule 90)

    $default	reduce using rule 90 (init_declarator)



state 158

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 217)

    $default	reduce using rule 217 (function_definition)



state 159

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list . '}'   (rule 108)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 114)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '}' 	shift, and go to state 246

    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration	go to state 162
    specifier_qualifier_list	go to state 82
    enum_specifier	go to state 33
    type_qualifier	go to state 83



state 160

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 116)

    $default	reduce using rule 116 (specifier_qualifier_list)



state 161

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list '}' .   (rule 109)

    $default	reduce using rule 109 (struct_or_union_specifier)



state 162

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 114)

    $default	reduce using rule 114 (struct_declaration_list)



state 163

    struct_declarator  ->  ':' . constant_expression   (rule 123)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 247



state 164

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 115)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 121)

    ',' 	shift, and go to state 248
    ';' 	shift, and go to state 249



state 165

    struct_declarator_list  ->  struct_declarator .   (rule 120)

    $default	reduce using rule 120 (struct_declarator_list)



state 166

    struct_declarator  ->  declarator .   (rule 122)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 124)

    ':' 	shift, and go to state 250

    $default	reduce using rule 122 (struct_declarator)



state 167

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 118)

    $default	reduce using rule 118 (specifier_qualifier_list)



state 168

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 188)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 251
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 169

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 20)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 186
    type_specifier	go to state 79
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 187
    enum_specifier	go to state 33
    type_qualifier	go to state 83
    type_name	go to state 252



state 170

    unary_expression  ->  SIZEOF unary_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 171

    primary_expression  ->  '(' . expression ')'   (rule 4)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 186



state 172

    unary_expression  ->  INC_OP unary_expression .   (rule 16)

    $default	reduce using rule 16 (unary_expression)



state 173

    unary_expression  ->  DEC_OP unary_expression .   (rule 17)

    $default	reduce using rule 17 (unary_expression)



state 174

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 189)

    ':' 	shift, and go to state 253



state 175

    labeled_statement  ->  DEFAULT ':' . statement   (rule 190)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 254
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 176

    selection_statement  ->  IF '(' . expression ')' statement   (rule 201)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 202)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 255



state 177

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 203)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 256



state 178

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 204)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 257



state 179

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 205)

    WHILE	shift, and go to state 258



state 180

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 206)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 207)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    expression_statement	go to state 259



state 181

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 208)

    ';' 	shift, and go to state 260



state 182

    jump_statement  ->  CONTINUE ';' .   (rule 209)

    $default	reduce using rule 209 (jump_statement)



state 183

    jump_statement  ->  BREAK ';' .   (rule 210)

    $default	reduce using rule 210 (jump_statement)



state 184

    jump_statement  ->  RETURN ';' .   (rule 211)

    $default	reduce using rule 211 (jump_statement)



state 185

    expression  ->  expression . ',' assignment_expression   (rule 73)
    jump_statement  ->  RETURN expression . ';'   (rule 212)

    ',' 	shift, and go to state 227
    ';' 	shift, and go to state 261



state 186

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 73)

    ')' 	shift, and go to state 262
    ',' 	shift, and go to state 227



state 187

    type_name  ->  specifier_qualifier_list .   (rule 162)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 163)

    '(' 	shift, and go to state 263
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    $default	reduce using rule 162 (type_name)

    pointer	go to state 265
    abstract_declarator	go to state 266
    direct_abstract_declarator	go to state 267



state 188

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 28)

    ')' 	shift, and go to state 268



state 189

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 10)

    IDENTIFIER	shift, and go to state 269



state 190

    postfix_expression  ->  postfix_expression INC_OP .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 191

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 192

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 7)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 8)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ')' 	shift, and go to state 270
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    argument_expression_list	go to state 271
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 272



state 193

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 6)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 273



state 194

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 9)

    IDENTIFIER	shift, and go to state 274



state 195

    assignment_operator  ->  MUL_ASSIGN .   (rule 62)

    $default	reduce using rule 62 (assignment_operator)



state 196

    assignment_operator  ->  DIV_ASSIGN .   (rule 63)

    $default	reduce using rule 63 (assignment_operator)



state 197

    assignment_operator  ->  MOD_ASSIGN .   (rule 64)

    $default	reduce using rule 64 (assignment_operator)



state 198

    assignment_operator  ->  ADD_ASSIGN .   (rule 65)

    $default	reduce using rule 65 (assignment_operator)



state 199

    assignment_operator  ->  SUB_ASSIGN .   (rule 66)

    $default	reduce using rule 66 (assignment_operator)



state 200

    assignment_operator  ->  LEFT_ASSIGN .   (rule 67)

    $default	reduce using rule 67 (assignment_operator)



state 201

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 202

    assignment_operator  ->  AND_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 203

    assignment_operator  ->  XOR_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 204

    assignment_operator  ->  OR_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 205

    assignment_operator  ->  '=' .   (rule 61)

    $default	reduce using rule 61 (assignment_operator)



state 206

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 60)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 275



state 207

    unary_expression  ->  unary_operator cast_expression .   (rule 18)

    $default	reduce using rule 18 (unary_expression)



state 208

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 30)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 276



state 209

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 277



state 210

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 32)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 278



state 211

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 34)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 279



state 212

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 35)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 280



state 213

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 37)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 281



state 214

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 38)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 282



state 215

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 42)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 283



state 216

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 43)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 284



state 217

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 40)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 285



state 218

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 41)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 286



state 219

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 45)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 287



state 220

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 46)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 288



state 221

    and_expression  ->  and_expression '&' . equality_expression   (rule 48)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 289



state 222

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 50)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 290



state 223

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 52)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 291



state 224

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 54)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 292



state 225

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 56)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 293



state 226

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 58)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 294



state 227

    expression  ->  expression ',' . assignment_expression   (rule 73)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 295



state 228

    expression_statement  ->  expression ';' .   (rule 200)

    $default	reduce using rule 200 (expression_statement)



state 229

    compound_statement  ->  '{' declaration_list '}' .   (rule 193)

    $default	reduce using rule 193 (compound_statement)



state 230

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 194)
    statement_list  ->  statement_list . statement   (rule 198)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108
    '}' 	shift, and go to state 296

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 232
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 231

    compound_statement  ->  '{' statement_list '}' .   (rule 192)

    $default	reduce using rule 192 (compound_statement)



state 232

    statement_list  ->  statement_list statement .   (rule 198)

    $default	reduce using rule 198 (statement_list)



state 233

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 157)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 158)
    parameter_declaration  ->  declaration_specifiers .   (rule 159)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 297
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    $default	reduce using rule 159 (parameter_declaration)

    declarator	go to state 298
    direct_declarator	go to state 36
    pointer	go to state 299
    abstract_declarator	go to state 300
    direct_abstract_declarator	go to state 267



state 234

    direct_declarator  ->  direct_declarator '(' @2 parameter_type_list . ')'   (rule 144)

    ')' 	shift, and go to state 301



state 235

    parameter_type_list  ->  parameter_list .   (rule 153)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 154)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 156)

    ',' 	shift, and go to state 302

    $default	reduce using rule 153 (parameter_type_list)



state 236

    parameter_list  ->  parameter_declaration .   (rule 155)

    $default	reduce using rule 155 (parameter_list)



state 237

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 145)

    $default	reduce using rule 145 (direct_declarator)



state 238

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 161)

    IDENTIFIER	shift, and go to state 303



state 239

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 141)

    $default	reduce using rule 141 (direct_declarator)



state 240

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list enumerator_list_end . '}'   (rule 126)

    '}' 	shift, and go to state 304



state 241

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 133)

    $default	reduce using rule 133 (enumerator)



state 242

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 131)

    $default	reduce using rule 131 (enumerator_list)



state 243

    enum_specifier  ->  ENUM '{' enumerator_list enumerator_list_end '}' .   (rule 125)

    $default	reduce using rule 125 (enum_specifier)



state 244

    initializer_list  ->  initializer .   (rule 180)

    $default	reduce using rule 180 (initializer_list)



state 245

    initializer  ->  '{' initializer_list . '}'   (rule 178)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 179)
    initializer_list  ->  initializer_list . ',' initializer   (rule 181)

    ',' 	shift, and go to state 305
    '}' 	shift, and go to state 306



state 246

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list '}' .   (rule 108)

    $default	reduce using rule 108 (struct_or_union_specifier)



state 247

    struct_declarator  ->  ':' constant_expression .   (rule 123)

    $default	reduce using rule 123 (struct_declarator)



state 248

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 121)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 163

    struct_declarator	go to state 307
    declarator	go to state 166
    direct_declarator	go to state 36
    pointer	go to state 37



state 249

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 115)

    $default	reduce using rule 115 (struct_declaration)



state 250

    struct_declarator  ->  declarator ':' . constant_expression   (rule 124)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 308



state 251

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 188)

    $default	reduce using rule 188 (labeled_statement)



state 252

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 20)

    ')' 	shift, and go to state 309



state 253

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 189)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 310
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 254

    labeled_statement  ->  DEFAULT ':' statement .   (rule 190)

    $default	reduce using rule 190 (labeled_statement)



state 255

    expression  ->  expression . ',' assignment_expression   (rule 73)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 201)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 202)

    ')' 	shift, and go to state 311
    ',' 	shift, and go to state 227



state 256

    expression  ->  expression . ',' assignment_expression   (rule 73)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 203)

    ')' 	shift, and go to state 312
    ',' 	shift, and go to state 227



state 257

    expression  ->  expression . ',' assignment_expression   (rule 73)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 204)

    ')' 	shift, and go to state 313
    ',' 	shift, and go to state 227



state 258

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 205)

    '(' 	shift, and go to state 314



state 259

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 206)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 207)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    expression_statement	go to state 315



state 260

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 208)

    $default	reduce using rule 208 (jump_statement)



state 261

    jump_statement  ->  RETURN expression ';' .   (rule 212)

    $default	reduce using rule 212 (jump_statement)



state 262

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 263

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 167)
    direct_abstract_declarator  ->  '(' . ')'   (rule 172)
    direct_abstract_declarator  ->  '(' . @3 parameter_type_list ')'   (rule 174)

    '(' 	shift, and go to state 263
    ')' 	shift, and go to state 316
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    $default	reduce using rule 173 (@3)

    pointer	go to state 265
    abstract_declarator	go to state 317
    direct_abstract_declarator	go to state 267
    @3  	go to state 318



state 264

    direct_abstract_declarator  ->  '[' . ']'   (rule 168)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 169)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ']' 	shift, and go to state 319
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 320



state 265

    abstract_declarator  ->  pointer .   (rule 164)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 166)

    '(' 	shift, and go to state 263
    '[' 	shift, and go to state 264

    $default	reduce using rule 164 (abstract_declarator)

    direct_abstract_declarator	go to state 321



state 266

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 163)

    $default	reduce using rule 163 (type_name)



state 267

    abstract_declarator  ->  direct_abstract_declarator .   (rule 165)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 170)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 171)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 175)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 176)

    '(' 	shift, and go to state 322
    '[' 	shift, and go to state 323

    $default	reduce using rule 165 (abstract_declarator)



state 268

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 28)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 324



state 269

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 270

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 271

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 8)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 14)

    ')' 	shift, and go to state 325
    ',' 	shift, and go to state 326



state 272

    argument_expression_list  ->  assignment_expression .   (rule 13)

    $default	reduce using rule 13 (argument_expression_list)



state 273

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 6)
    expression  ->  expression . ',' assignment_expression   (rule 73)

    ']' 	shift, and go to state 327
    ',' 	shift, and go to state 227



state 274

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 275

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 60)

    $default	reduce using rule 60 (assignment_expression)



state 276

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 30)

    $default	reduce using rule 30 (multiplicative_expression)



state 277

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 31)

    $default	reduce using rule 31 (multiplicative_expression)



state 278

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 32)

    $default	reduce using rule 32 (multiplicative_expression)



state 279

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 32)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 34)

    '*' 	shift, and go to state 208
    '/' 	shift, and go to state 209
    '%' 	shift, and go to state 210

    $default	reduce using rule 34 (additive_expression)



state 280

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 31)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 32)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 35)

    '*' 	shift, and go to state 208
    '/' 	shift, and go to state 209
    '%' 	shift, and go to state 210

    $default	reduce using rule 35 (additive_expression)



state 281

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 34)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 35)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 37)

    '+' 	shift, and go to state 211
    '-' 	shift, and go to state 212

    $default	reduce using rule 37 (shift_expression)



state 282

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 34)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 35)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 38)

    '+' 	shift, and go to state 211
    '-' 	shift, and go to state 212

    $default	reduce using rule 38 (shift_expression)



state 283

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 42)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 42 (relational_expression)



state 284

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 43)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 43 (relational_expression)



state 285

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 40)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 40 (relational_expression)



state 286

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 37)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 38)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 41)

    LEFT_OP	shift, and go to state 213
    RIGHT_OP	shift, and go to state 214

    $default	reduce using rule 41 (relational_expression)



state 287

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 42)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 43)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 45)

    LE_OP	shift, and go to state 215
    GE_OP	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218

    $default	reduce using rule 45 (equality_expression)



state 288

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 41)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 42)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 43)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 46)

    LE_OP	shift, and go to state 215
    GE_OP	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218

    $default	reduce using rule 46 (equality_expression)



state 289

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 45)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 46)
    and_expression  ->  and_expression '&' equality_expression .   (rule 48)

    EQ_OP	shift, and go to state 219
    NE_OP	shift, and go to state 220

    $default	reduce using rule 48 (and_expression)



state 290

    and_expression  ->  and_expression . '&' equality_expression   (rule 48)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 50)

    '&' 	shift, and go to state 221

    $default	reduce using rule 50 (exclusive_or_expression)



state 291

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 50)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 52)

    '^' 	shift, and go to state 222

    $default	reduce using rule 52 (inclusive_or_expression)



state 292

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 52)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 54)

    '|' 	shift, and go to state 223

    $default	reduce using rule 54 (logical_and_expression)



state 293

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 54)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 56)

    AND_OP	shift, and go to state 224

    $default	reduce using rule 56 (logical_or_expression)



state 294

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 58)
    expression  ->  expression . ',' assignment_expression   (rule 73)

    ',' 	shift, and go to state 227
    ':' 	shift, and go to state 328



state 295

    expression  ->  expression ',' assignment_expression .   (rule 73)

    $default	reduce using rule 73 (expression)



state 296

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 194)

    $default	reduce using rule 194 (compound_statement)



state 297

    direct_declarator  ->  '(' . declarator @1 ')'   (rule 140)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 167)
    direct_abstract_declarator  ->  '(' . ')'   (rule 172)
    direct_abstract_declarator  ->  '(' . @3 parameter_type_list ')'   (rule 174)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 297
    ')' 	shift, and go to state 316
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    $default	reduce using rule 173 (@3)

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 299
    abstract_declarator	go to state 317
    direct_abstract_declarator	go to state 267
    @3  	go to state 318



state 298

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 157)

    $default	reduce using rule 157 (parameter_declaration)



state 299

    declarator  ->  pointer . direct_declarator   (rule 136)
    abstract_declarator  ->  pointer .   (rule 164)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 166)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 297
    '[' 	shift, and go to state 264

    $default	reduce using rule 164 (abstract_declarator)

    direct_declarator	go to state 64
    direct_abstract_declarator	go to state 321



state 300

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 158)

    $default	reduce using rule 158 (parameter_declaration)



state 301

    direct_declarator  ->  direct_declarator '(' @2 parameter_type_list ')' .   (rule 144)

    $default	reduce using rule 144 (direct_declarator)



state 302

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 154)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 156)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ELLIPSIS	shift, and go to state 329
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration_specifiers	go to state 233
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_declaration	go to state 330



state 303

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 161)

    $default	reduce using rule 161 (identifier_list)



state 304

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list enumerator_list_end '}' .   (rule 126)

    $default	reduce using rule 126 (enum_specifier)



state 305

    initializer  ->  '{' initializer_list ',' . '}'   (rule 179)
    initializer_list  ->  initializer_list ',' . initializer   (rule 181)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '{' 	shift, and go to state 155
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    '}' 	shift, and go to state 331

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 156
    initializer	go to state 332



state 306

    initializer  ->  '{' initializer_list '}' .   (rule 178)

    $default	reduce using rule 178 (initializer)



state 307

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 121)

    $default	reduce using rule 121 (struct_declarator_list)



state 308

    struct_declarator  ->  declarator ':' constant_expression .   (rule 124)

    $default	reduce using rule 124 (struct_declarator)



state 309

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 310

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 189)

    $default	reduce using rule 189 (labeled_statement)



state 311

    selection_statement  ->  IF '(' expression ')' . statement   (rule 201)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 202)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 333
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 312

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 203)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 334
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 313

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 204)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 335
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 314

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 205)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 336



state 315

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 206)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 207)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ')' 	shift, and go to state 337
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 338



state 316

    direct_abstract_declarator  ->  '(' ')' .   (rule 172)

    $default	reduce using rule 172 (direct_abstract_declarator)



state 317

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 167)

    ')' 	shift, and go to state 339



state 318

    direct_abstract_declarator  ->  '(' @3 . parameter_type_list ')'   (rule 174)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration_specifiers	go to state 233
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 340
    parameter_list	go to state 235
    parameter_declaration	go to state 236



state 319

    direct_abstract_declarator  ->  '[' ']' .   (rule 168)

    $default	reduce using rule 168 (direct_abstract_declarator)



state 320

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 169)

    ']' 	shift, and go to state 341



state 321

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 166)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 170)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 171)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 175)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 176)

    '(' 	shift, and go to state 322
    '[' 	shift, and go to state 323

    $default	reduce using rule 166 (abstract_declarator)



state 322

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 175)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_type_list ')'   (rule 176)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    ')' 	shift, and go to state 342

    declaration_specifiers	go to state 233
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 343
    parameter_list	go to state 235
    parameter_declaration	go to state 236



state 323

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 170)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . constant_expression ']'   (rule 171)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    ']' 	shift, and go to state 344
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 147
    constant_expression	go to state 345



state 324

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 28)

    $default	reduce using rule 28 (cast_expression)



state 325

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 326

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 14)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 346



state 327

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 328

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 58)

    IDENTIFIER	shift, and go to state 144
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 146
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 347



state 329

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 154)

    $default	reduce using rule 154 (parameter_type_list)



state 330

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 156)

    $default	reduce using rule 156 (parameter_list)



state 331

    initializer  ->  '{' initializer_list ',' '}' .   (rule 179)

    $default	reduce using rule 179 (initializer)



state 332

    initializer_list  ->  initializer_list ',' initializer .   (rule 181)

    $default	reduce using rule 181 (initializer_list)



state 333

    selection_statement  ->  IF '(' expression ')' statement .   (rule 201)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 202)

    ELSE	shift, and go to state 348

    $default	reduce using rule 201 (selection_statement)



state 334

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 203)

    $default	reduce using rule 203 (selection_statement)



state 335

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 204)

    $default	reduce using rule 204 (iteration_statement)



state 336

    expression  ->  expression . ',' assignment_expression   (rule 73)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 205)

    ')' 	shift, and go to state 349
    ',' 	shift, and go to state 227



state 337

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 206)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 350
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 338

    expression  ->  expression . ',' assignment_expression   (rule 73)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 207)

    ')' 	shift, and go to state 351
    ',' 	shift, and go to state 227



state 339

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 167)

    $default	reduce using rule 167 (direct_abstract_declarator)



state 340

    direct_abstract_declarator  ->  '(' @3 parameter_type_list . ')'   (rule 174)

    ')' 	shift, and go to state 352



state 341

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 169)

    $default	reduce using rule 169 (direct_abstract_declarator)



state 342

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 175)

    $default	reduce using rule 175 (direct_abstract_declarator)



state 343

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list . ')'   (rule 176)

    ')' 	shift, and go to state 353



state 344

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 170)

    $default	reduce using rule 170 (direct_abstract_declarator)



state 345

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression . ']'   (rule 171)

    ']' 	shift, and go to state 354



state 346

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 14)

    $default	reduce using rule 14 (argument_expression_list)



state 347

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 58)

    $default	reduce using rule 58 (conditional_expression)



state 348

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 202)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 355
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 349

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 205)

    ';' 	shift, and go to state 356



state 350

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 206)

    $default	reduce using rule 206 (iteration_statement)



state 351

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 207)

    IDENTIFIER	shift, and go to state 84
    CONSTANT	shift, and go to state 85
    STRING_LITERAL	shift, and go to state 86
    SIZEOF	shift, and go to state 87
    INC_OP	shift, and go to state 88
    DEC_OP	shift, and go to state 89
    CASE	shift, and go to state 90
    DEFAULT	shift, and go to state 91
    IF  	shift, and go to state 92
    SWITCH	shift, and go to state 93
    WHILE	shift, and go to state 94
    DO  	shift, and go to state 95
    FOR 	shift, and go to state 96
    GOTO	shift, and go to state 97
    CONTINUE	shift, and go to state 98
    BREAK	shift, and go to state 99
    RETURN	shift, and go to state 100
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 101
    '&' 	shift, and go to state 102
    '*' 	shift, and go to state 103
    '+' 	shift, and go to state 104
    '-' 	shift, and go to state 105
    '~' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    ';' 	shift, and go to state 108

    primary_expression	go to state 110
    postfix_expression	go to state 111
    unary_expression	go to state 112
    unary_operator	go to state 113
    cast_expression	go to state 114
    multiplicative_expression	go to state 115
    additive_expression	go to state 116
    shift_expression	go to state 117
    relational_expression	go to state 118
    equality_expression	go to state 119
    and_expression	go to state 120
    exclusive_or_expression	go to state 121
    inclusive_or_expression	go to state 122
    logical_and_expression	go to state 123
    logical_or_expression	go to state 124
    conditional_expression	go to state 125
    assignment_expression	go to state 126
    expression	go to state 127
    statement	go to state 357
    labeled_statement	go to state 129
    compound_statement	go to state 130
    expression_statement	go to state 133
    selection_statement	go to state 134
    iteration_statement	go to state 135
    jump_statement	go to state 136



state 352

    direct_abstract_declarator  ->  '(' @3 parameter_type_list ')' .   (rule 174)

    $default	reduce using rule 174 (direct_abstract_declarator)



state 353

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list ')' .   (rule 176)

    $default	reduce using rule 176 (direct_abstract_declarator)



state 354

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression ']' .   (rule 171)

    $default	reduce using rule 171 (direct_abstract_declarator)



state 355

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 202)

    $default	reduce using rule 202 (selection_statement)



state 356

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 205)

    $default	reduce using rule 205 (iteration_statement)



state 357

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 207)

    $default	reduce using rule 207 (iteration_statement)



state 358

    $   	go to state 359



state 359

    $default	accept
